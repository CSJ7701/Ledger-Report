(undo-tree-save-format-version . 1)
"d02271e4e44ea273cbf6f4071540f3233e58d249"
[nil nil nil nil (26470 52816 570983 743000) 0 nil]
([nil nil ((1 . 7) (t 26470 52472 365590 50000)) nil (26470 52816 570982 920000) 0 nil])
([nil nil ((7 . 10)) nil (26470 52816 570982 253000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -7) (undo-tree-id102 . -1) (#("y" 0 1 (fontified t)) . -8) (undo-tree-id103 . -1) (#("s" 0 1 (fontified t)) . -9) (undo-tree-id104 . -1) 10) nil (26470 52816 570981 380000) 0 nil])
([nil nil ((7 . 11)) nil (26470 52816 570979 164000) 0 nil])
([nil nil ((8 . 11) (#("sys" 0 3 (fontified nil)) . -8) (8 . 11) (#("sys" 0 3 (fontified t)) . -8) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) 11) nil (26470 52816 570978 159000) 0 nil])
([nil nil ((11 . 12)) nil (26470 52816 570974 891000) 0 nil])
([nil nil ((12 . 25)) nil (26470 52816 570974 467000) 0 nil])
([nil nil ((25 . 46)) nil (26470 52816 570974 66000) 0 nil])
([nil nil ((46 . 62)) nil (26470 52816 570973 281000) 0 nil])
([nil nil ((54 . 65) (#("QMa" 0 3 (fontified nil)) . -54) (54 . 57) (#("QMainWindow" 0 11 (fontified nil)) . -54) (54 . 65) (#("QMainWin" 0 8 (fontified t match-data (0 3 0 1 1 2 2 3))) . -54) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) 62) nil (26470 52816 570972 253000) 0 nil])
([nil nil ((65 . 67)) nil (26470 52816 570925 195000) 0 nil])
([nil nil ((67 . 75)) nil (26470 52816 570924 228000) 0 nil])
([nil nil ((67 . 81) (#("QSt" 0 3 (fontified nil)) . -67) (67 . 70) (#("QStackedWidget" 0 14 (fontified nil)) . -67) (67 . 81) (#("QStacked" 0 8 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -67) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) 75) nil (26470 52816 570923 54000) 0 nil])
([nil nil ((81 . 82)) nil (26470 52816 570920 274000) 0 nil])
([nil nil ((82 . 98)) nil (26470 52816 570919 727000) 0 nil])
([nil nil ((98 . 113)) nil (26470 52816 570919 58000) 0 nil])
([nil nil ((113 . 114)) nil (26470 52816 570918 458000) 0 nil])
([nil nil ((114 . 124)) nil (26470 52816 570917 990000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -123) (undo-tree-id89 . -1) 124) nil (26470 52816 570917 138000) 0 nil])
([nil nil ((123 . 144)) nil (26470 52816 570915 369000) 0 nil])
([nil nil ((144 . 153)) nil (26470 52816 570914 682000) 0 nil])
([nil nil ((153 . 155)) nil (26470 52816 570914 45000) 0 nil])
([nil nil ((155 . 171)) nil (26470 52816 570913 501000) 0 nil])
([nil nil ((#("w" 0 1 (face py-class-name-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -170) (undo-tree-id88 . -1) 171) nil (26470 52816 570912 575000) 0 nil])
([nil nil ((170 . 177)) nil (26470 52816 570911 210000) 0 nil])
([nil nil ((172 . 183) (#("QMa" 0 3 (fontified nil)) . -172) (172 . 175) (#("QMainWindow" 0 11 (fontified nil)) . -172) (172 . 183) (#("QMain" 0 5 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -172) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) 177) nil (26470 52816 570910 436000) 0 nil])
([nil nil ((183 . 184)) nil (26470 52816 570907 544000) 0 nil])
([nil nil ((184 . 185)) nil (26470 52816 570906 871000) 0 nil])
([nil nil ((185 . 190)) nil (26470 52816 570906 354000) 0 nil])
([nil nil ((190 . 197)) nil (26470 52816 570905 777000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -194) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("_" 0 1 (face py-builtins-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -195) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -196) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 197) nil (26470 52816 570904 853000) 0 nil])
([nil nil ((194 . 202)) nil (26470 52816 570897 664000) 0 nil])
([nil nil ((#("_" 0 1 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -201) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 202) nil (26470 52816 570896 943000) 0 nil])
([nil nil ((201 . 208)) nil (26470 52816 570894 379000) 0 nil])
([nil nil ((208 . 209)) nil (26470 52816 570893 891000) 0 nil])
([nil nil ((209 . 218)) nil (26470 52816 570893 453000) 0 nil])
([nil nil ((218 . 236)) nil (26470 52816 570892 799000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -235) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 236) nil (26470 52816 570892 48000) 0 nil])
([nil nil ((235 . 236)) nil (26470 52816 570889 315000) 0 nil])
([nil nil ((236 . 245)) nil (26470 52816 570888 916000) 0 nil])
([nil nil ((245 . 254)) nil (26470 52816 570888 522000) 0 nil])
([nil nil ((254 . 275)) nil (26470 52816 570887 946000) 0 nil])
([nil nil ((275 . 278)) nil (26470 52816 570887 229000) 0 nil])
([nil nil ((278 . 287)) nil (26470 52816 570886 831000) 0 nil])
([nil nil ((287 . 293)) nil (26470 52816 570886 320000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -290) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("." 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -291) (undo-tree-id63 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -292) (undo-tree-id64 . -1) 293) nil (26470 52816 570885 680000) 0 nil])
([nil nil ((290 . 297)) nil (26470 52816 570882 513000) 0 nil])
([nil nil ((292 . 303) (#("se" 0 2 (fontified nil)) . -292) (292 . 294) (#("setGeometry" 0 11 (fontified nil)) . -292) (292 . 303) (#("setGe" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -292) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) 297) nil (26470 52816 570881 159000) 0 nil])
([nil nil ((303 . 314)) nil (26470 52816 570878 161000) 0 nil])
([nil nil ((#("1" 0 1 (face py-number-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -312) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("0" 0 1 (face py-number-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -313) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 314) nil (26470 52816 570877 505000) 0 nil])
([nil nil ((312 . 320)) nil (26470 52816 570875 343000) 0 nil])
([nil nil ((322 . 330) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 321) (undo-tree-id50 . -8) (320 . 330)) nil (26470 52816 570874 356000) 0 nil])
([nil nil ((330 . 331)) nil (26470 52816 570873 132000) 0 nil])
([nil nil ((331 . 332)) nil (26470 52816 570872 733000) 0 nil])
([nil nil ((332 . 346)) nil (26470 52816 570872 335000) 0 nil])
([nil nil ((346 . 347)) nil (26470 52816 570871 916000) 0 nil])
([nil nil ((347 . 360)) nil (26470 52816 570871 537000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -358) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -359) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 360) nil (26470 52816 570870 847000) 0 nil])
([nil nil ((358 . 373)) nil (26470 52816 570866 887000) 0 nil])
([nil nil ((373 . 382)) nil (26470 52816 570866 479000) 0 nil])
([nil nil ((382 . 389)) nil (26470 52816 570866 154000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -386) (undo-tree-id41 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -387) (undo-tree-id42 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -388) (undo-tree-id43 . -1) 389) nil (26470 52816 570865 459000) 0 nil])
([nil nil ((386 . 387)) nil (26470 52816 570863 140000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -385) (undo-tree-id39 . -1) (#("f" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -386) (undo-tree-id40 . -1) 387) nil (26470 52816 570862 410000) 0 nil])
([nil nil ((385 . 406)) nil (26470 52816 570860 541000) 0 nil])
([nil nil ((406 . 411)) nil (26470 52816 570859 868000) 0 nil])
([nil nil ((411 . 420)) nil (26470 52816 570859 249000) 0 nil])
([nil nil ((420 . 441)) nil (26470 52816 570858 467000) 0 nil])
([nil nil ((441 . 453)) nil (26470 52816 570857 811000) 0 nil])
([nil nil ((455 . 463) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 454) (undo-tree-id38 . -8) (453 . 463)) nil (26470 52816 570857 121000) 0 nil])
([nil nil ((463 . 464)) nil (26470 52816 570855 894000) 0 nil])
([nil nil ((464 . 469)) nil (26470 52816 570855 221000) 0 nil])
([nil nil ((469 . 481)) nil (26470 52816 570854 821000) 0 nil])
([nil nil ((481 . 490)) nil (26470 52816 570854 409000) 0 nil])
([nil nil ((490 . 511)) nil (26470 52816 570854 13000) 0 nil])
([nil nil ((511 . 521)) nil (26470 52816 570853 444000) 0 nil])
([nil nil ((521 . 530)) nil (26470 52816 570852 800000) 0 nil])
([nil nil ((530 . 534)) nil (26470 52816 570852 155000) 0 nil])
([nil nil ((534 . 545)) nil (26470 52816 570851 512000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -544) (undo-tree-id37 . -1) 545) nil (26470 52816 570850 790000) 0 nil])
([nil nil ((544 . 560)) nil (26470 52816 570849 657000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -559) (undo-tree-id36 . -1) 560) nil (26470 52816 570848 936000) 0 nil])
([nil nil ((559 . 569)) nil (26470 52816 570847 718000) 0 nil])
([nil nil ((571 . 579) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 570) (undo-tree-id35 . -8) (569 . 579)) nil (26470 52816 570847 140000) 0 nil])
([nil nil ((579 . 584)) nil (26470 52816 570845 830000) 0 nil])
([nil nil ((584 . 605)) nil (26470 52816 570845 374000) 0 nil])
([nil nil ((605 . 608)) nil (26470 52816 570844 722000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -606) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -607) (undo-tree-id34 . -1) 608) nil (26470 52816 570843 805000) 0 nil])
([nil nil ((606 . 615)) nil (26470 52816 570842 83000) 0 nil])
([nil nil ((615 . 624)) nil (26470 52816 570841 373000) 0 nil])
([nil nil ((624 . 635)) nil (26470 52816 570840 626000) 0 nil])
([nil nil ((635 . 656)) nil (26470 52816 570840 50000) 0 nil])
([nil nil ((656 . 664)) nil (26470 52816 570839 388000) 0 nil])
([nil nil ((666 . 674) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 665) (undo-tree-id32 . -8) (664 . 674)) nil (26470 52816 570838 577000) 0 nil])
([nil nil ((674 . 675)) nil (26470 52816 570837 175000) 0 nil])
([nil nil ((675 . 694)) nil (26470 52816 570836 387000) 0 nil])
([nil nil ((690 . 695) (#("page" 0 4 (face font-lock-comment-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -690) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) 694) nil (26470 52816 570835 613000) 0 nil])
([nil nil ((695 . 704)) nil (26470 52816 570833 418000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 700) (undo-tree-id28 . -4) 704) nil (26470 52816 570832 301000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -696) (undo-tree-id27 . -4) 700) nil (26470 52816 570831 112000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -694) (undo-tree-id25 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -695) (undo-tree-id26 . -1) 696) nil (26470 52816 570829 799000) 0 nil])
([nil nil ((694 . 703)) nil (26470 52816 570828 296000) 0 nil])
([nil nil ((703 . 724)) nil (26470 52816 570827 515000) 0 nil])
([nil nil ((724 . 725)) nil (26470 52816 570826 757000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -724) (undo-tree-id24 . -1) 725) nil (26470 52816 570825 853000) 0 nil])
([nil nil ((724 . 742)) nil (26470 52816 570824 540000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -741) (undo-tree-id23 . -1) 742) nil (26470 52816 570823 582000) 0 nil])
([nil nil ((741 . 742)) nil (26470 52816 570822 140000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -741) (undo-tree-id22 . -1) 742) nil (26470 52816 570821 242000) 0 nil])
([nil nil ((741 . 746)) nil (26470 52816 570819 924000) 0 nil])
([nil nil ((748 . 756) (#("        " 0 8 (fontified nil)) . 747) (undo-tree-id21 . -8) (746 . 756)) nil (26470 52816 570819 49000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 752) (undo-tree-id20 . -4) 756) nil (26470 52816 570817 515000) 0 nil])
([nil nil ((752 . 760)) nil (26470 52816 570815 787000) 0 nil])
([nil nil ((#("e" 0 1 (face py-def-face fontified t)) . -757) (undo-tree-id17 . -1) (#("i" 0 1 (face py-def-face fontified t)) . -758) (undo-tree-id18 . -1) (#("t" 0 1 (face py-def-face fontified t)) . -759) (undo-tree-id19 . -1) 760) nil (26470 52816 570814 498000) 0 nil])
([nil nil ((757 . 758)) nil (26470 52816 570811 785000) 0 nil])
([nil nil ((758 . 779)) nil (26470 52816 570811 55000) 0 nil])
([nil nil ((779 . 780)) nil (26470 52816 570810 229000) 0 nil])
([nil nil ((780 . 781)) nil (26470 52816 570809 477000) 0 nil])
([nil nil ((781 . 790)) nil (26470 52816 570808 819000) 0 nil])
([nil nil ((790 . 803)) nil (26470 52816 570807 994000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -800) (undo-tree-id14 . -1) (#("s" 0 1 (fontified t)) . -801) (undo-tree-id15 . -1) (#("e" 0 1 (fontified t)) . -802) (undo-tree-id16 . -1) 803) nil (26470 52816 570806 661000) 0 nil])
([nil nil ((800 . 808)) nil (26470 52816 570804 385000) 0 nil])
([nil nil ((808 . 829)) nil (26470 52816 570803 905000) 0 nil])
([nil nil ((829 . 833)) nil (26470 52816 570803 440000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -832) (undo-tree-id13 . -1) 833) nil (26470 52816 570802 885000) 0 nil])
([nil nil ((832 . 837)) nil (26470 52816 570801 517000) 0 nil])
([nil nil ((837 . 846)) nil (26470 52816 570800 894000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 842) (undo-tree-id12 . -4) 846) nil (26470 52816 570800 296000) 0 nil])
([nil nil ((839 . 843) (#("    " 0 4 (fontified nil)) . 838) (undo-tree-id11 . -4) (842 . 843)) nil (26470 52816 570798 969000) 0 nil])
([nil nil ((843 . 846)) nil (26470 52816 570797 790000) 0 nil])
([nil nil ((846 . 867)) nil (26470 52816 570797 217000) 0 nil])
([nil nil ((867 . 868)) nil (26470 52816 570796 722000) 0 nil])
([nil nil ((868 . 877)) nil (26470 52816 570796 286000) 0 nil])
([nil nil ((877 . 898)) nil (26470 52816 570795 867000) 0 nil])
([nil nil ((898 . 901)) nil (26470 52816 570795 477000) 0 nil])
([nil nil ((901 . 920)) nil (26470 52816 570795 14000) 0 nil])
([nil nil ((922 . 930) (#("        " 0 8 (fontified nil)) . 921) (undo-tree-id10 . -8) (920 . 930)) nil (26470 52816 570794 309000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 926) (undo-tree-id9 . -4) 930) nil (26470 52816 570792 891000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -922) (undo-tree-id8 . -4) 926) nil (26470 52816 570791 283000) 0 nil])
([nil nil ((922 . 927)) nil (26470 52816 570660 642000) 0 nil])
([nil nil ((927 . 931)) nil (26470 52816 570660 241000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -927) (undo-tree-id4 . -1) (#("a" 0 1 (fontified t)) . -928) (undo-tree-id5 . -1) (#("m" 0 1 (fontified t)) . -929) (undo-tree-id6 . -1) (#("_" 0 1 (fontified t)) . -930) (undo-tree-id7 . -1) 931) nil (26470 52816 570659 333000) 0 nil])
([nil nil ((927 . 947)) nil (26470 52816 570656 639000) 0 nil])
([nil nil ((947 . 948)) nil (26470 52816 570656 227000) 0 nil])
([nil nil ((948 . 953)) nil (26470 52816 570655 836000) 0 nil])
([nil nil ((953 . 964)) nil (26470 52816 570655 433000) 0 nil])
([nil nil ((964 . 980)) nil (26470 52816 570654 843000) 0 nil])
([nil nil ((980 . 985)) nil (26470 52816 570654 225000) 0 nil])
([nil nil ((985 . 992)) nil (26470 52816 570653 602000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -991) (undo-tree-id3 . -1) 992) nil (26470 52816 570652 910000) 0 nil])
([nil nil ((991 . 994)) nil (26470 52816 570651 558000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -993) (undo-tree-id2 . -1) 994) nil (26470 52816 570650 834000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 992) (undo-tree-id1 . -1) 993) nil (26470 52816 570649 77000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -991) (undo-tree-id0 . -1) 992) nil (26470 52816 570646 806000) 0 nil])
([nil nil ((991 . 1004)) nil (26470 52816 570628 789000) 0 nil])
([nil nil ((1004 . 1009)) nil (26470 52816 570628 42000) 0 nil])
([nil nil ((991 . 993)) nil (26470 52816 570627 572000) 0 nil])
([nil nil ((1011 . 1024)) nil (26470 52816 570626 954000) 0 nil])
([nil nil ((1024 . 1029)) nil (26470 52816 570626 185000) 0 nil])
([nil nil ((1029 . 1049)) nil (26470 52816 570625 192000) 0 nil])
([nil nil ((1049 . 1050)) nil (26470 52816 570621 290000) 0 nil])
([nil nil ((#("t" 0 1 (face py-def-face fontified t)) . -758) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 759 (t 26470 52816 692460 667000)) nil (26471 18310 395513 658000) 0 nil])
([nil nil ((758 . 759)) nil (26471 18310 395502 535000) 0 nil])
([nil nil ((#("i" 0 1 (face py-def-face fontified t)) . 759) (undo-tree-id0 . 1)) nil (26471 18310 395500 473000) 0 nil])
([nil nil ((759 . 760)) nil (26471 18310 395479 579000) 0 nil])
([nil nil ((40 . 41) (t 26471 18310 515862 768000)) nil (26471 23051 576285 844000) 0 nil])
([nil nil ((41 . 46)) nil (26471 23051 576285 14000) 0 nil])
([nil nil ((73 . 82)) nil (26471 23051 576284 453000) 0 nil])
([nil nil ((#("QStackedWidget" 0 14 (fontified t)) . 82)) nil (26471 23051 576283 854000) 0 nil])
([nil nil ((82 . 85)) nil (26471 23051 576283 383000) 0 nil])
([nil nil ((82 . 93) (#("QVB" 0 3 (fontified nil)) . -82) (82 . 85) (#("QVBoxLayout" 0 11 (fontified nil)) . -82) (82 . 93) (#("QVB" 0 3 (fontified t)) . -82) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) 85) nil (26471 23051 576282 532000) 0 nil])
([nil nil ((93 . 94)) nil (26471 23051 576280 194000) 0 nil])
([nil nil ((94 . 99)) nil (26471 23051 576279 612000) 0 nil])
([nil nil ((95 . 106) (#("QHB" 0 3 (fontified nil)) . -95) (95 . 98) (#("QHBoxLayout" 0 11 (fontified nil)) . -95) (95 . 106) (#("QHBo" 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -95) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) 99) nil (26471 23051 576278 637000) 0 nil])
([nil nil ((106 . 107)) nil (26471 23051 576275 897000) 0 nil])
([nil nil ((107 . 112)) nil (26471 23051 576275 392000) 0 nil])
([nil nil ((112 . 116)) nil (26471 23051 576274 967000) 0 nil])
([nil nil ((112 . 118) (#("QLa" 0 3 (fontified nil)) . -112) (112 . 115) (#("QLabel" 0 6 (fontified nil)) . -112) (112 . 118) (#("QLab" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -112) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) 116) nil (26471 23051 576273 780000) 0 nil])
([nil nil ((118 . 122)) nil (26471 23051 576270 761000) 0 nil])
([nil nil ((122 . 125)) nil (26471 23051 576270 121000) 0 nil])
([nil nil ((120 . 131) (#("QPu" 0 3 (fontified nil)) . -120) (120 . 123) (#("QPushButton" 0 11 (fontified nil)) . -120) (120 . 131) (#("QPush" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -120) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) 125) nil (26471 23051 576269 80000) 0 nil])
([nil nil ((131 . 137)) nil (26471 23051 576264 365000) 0 nil])
([nil nil ((133 . 138) (#("QMe" 0 3 (fontified nil)) . -133) (133 . 136) (#("QMenu" 0 5 (fontified nil)) . -133) (133 . 138) (#("QMen" 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -133) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) 137) nil (26471 23051 576263 270000) 0 nil])
([nil nil ((138 . 140)) nil (26471 23051 576260 273000) 0 nil])
([nil nil ((140 . 144)) nil (26471 23051 576259 772000) 0 nil])
([nil nil ((140 . 148) (#("QMe" 0 3 (fontified nil)) . -140) (140 . 143) (#("QMenuBar" 0 8 (fontified nil)) . -140) (140 . 148) (#("QMen" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -140) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) 144) nil (26471 23051 576258 272000) 0 nil])
([nil nil ((148 . 155)) nil (26471 23051 576255 315000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -154) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 155) nil (26471 23051 576254 373000) 0 nil])
([nil nil ((154 . 158)) nil (26471 23051 576251 550000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -157) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 158) nil (26471 23051 576250 521000) 0 nil])
([nil nil ((150 . 163) (#("QAc" 0 3 (fontified nil)) . -150) (150 . 153) (#("QWidgetAction" 0 13 (fontified nil)) . -150) (150 . 163) (#("QAction" 0 7 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -150) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) 157) nil (26471 23051 576247 383000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -151) (undo-tree-id1 . -1) (#("i" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -152) (undo-tree-id2 . -1) (#("d" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -153) (undo-tree-id3 . -1) (#("g" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -154) (undo-tree-id4 . -1) (#("e" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -155) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -156) (undo-tree-id6 . -1) (#("A" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -157) (undo-tree-id7 . -1) (#("c" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -158) (undo-tree-id8 . -1) (#("t" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -159) (undo-tree-id9 . -1) (#("i" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -160) (undo-tree-id10 . -1) (#("o" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -161) (undo-tree-id11 . -1) (#("n" 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -162) (undo-tree-id12 . -1) 163) nil (26471 23051 576242 46000) 0 nil])
([nil nil ((151 . 158)) nil (26471 23051 576232 964000) 0 nil])
([nil nil ((158 . 162) (#(" " 0 1 (fontified nil match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . 157) (undo-tree-id0 . -1) (158 . 159)) nil (26471 23051 576231 267000) 0 nil])
([nil nil ((162 . 163)) nil (26471 23051 576204 870000) 0 nil])
([nil nil ((157 . 158) (t 26471 23051 698273 164000)) nil (26471 23072 169492 219000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -157) (undo-tree-id145 . -1) 158) nil (26471 23072 169491 129000) 0 nil])
([nil nil ((163 . 164)) nil (26471 23072 169486 784000) 0 nil])
([nil nil ((164 . 174)) nil (26471 23072 169486 96000) 0 nil])
([nil nil ((174 . 191)) nil (26471 23072 169485 223000) 0 nil])
([nil nil ((189 . 191) (#("Qt" 0 2 (fontified nil)) . -189) (189 . 191) (#("Qt" 0 2 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -189) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) 191) nil (26471 23072 169479 802000) 0 nil])
([nil nil ((346 . 355) (t 26471 23072 290259 124000)) nil (26471 23171 251504 864000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -515) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("t" 0 1 (fontified t)) . -516) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("a" 0 1 (fontified t)) . -517) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("c" 0 1 (fontified t)) . -518) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("k" 0 1 (fontified t)) . -519) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("e" 0 1 (fontified t)) . -520) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("d" 0 1 (fontified t)) . -521) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 522) nil (26471 23171 251499 902000) 0 nil])
([nil nil ((#("t" 0 1 (face py-variable-name-face fontified t)) . -507) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("a" 0 1 (face py-variable-name-face fontified t)) . -508) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("c" 0 1 (face py-variable-name-face fontified t)) . -509) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("k" 0 1 (face py-variable-name-face fontified t)) . -510) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 511 (t 26471 23171 373180 581000)) nil (26471 23190 798197 221000) 0 nil])
([nil nil ((#("s" 0 1 (face py-variable-name-face fontified t)) . -501) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("e" 0 1 (face py-variable-name-face fontified t)) . -502) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("l" 0 1 (face py-variable-name-face fontified t)) . -503) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -504) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("." 0 1 (fontified t)) . -505) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("s" 0 1 (face py-variable-name-face fontified t)) . -506) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 507) nil (26471 23190 798191 668000) 0 nil])
([nil nil ((501 . 510)) nil (26471 23190 798185 8000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -561) (undo-tree-id173 . -1) (#("k" 0 1 (fontified t)) . -562) (undo-tree-id174 . -1) 563) nil (26471 23190 798184 121000) 0 nil])
([nil nil ((#("self.sta" 0 4 (face py-object-reference-face fontified t) 4 8 (fontified t)) . -553) (undo-tree-id172 . -8) 561) nil (26471 23190 798182 180000) 0 nil])
([nil nil ((553 . 560)) nil (26471 23190 798180 881000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -557) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("i" 0 1 (fontified t)) . -558) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("n" 0 1 (fontified t)) . -559) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 560) nil (26471 23190 798178 680000) 0 nil])
([nil nil ((557 . 562)) nil (26471 23190 798161 163000) 0 nil])
([nil nil ((565 . 573) (#("        " 0 8 (fontified nil)) . 564) (undo-tree-id214 . -8) (563 . 573) (t 26471 23190 809163 233000)) nil (26471 23229 444373 673000) 0 nil])
([nil nil ((573 . 574)) nil (26471 23229 444372 607000) 0 nil])
([nil nil ((574 . 575)) nil (26471 23229 444372 228000) 0 nil])
([nil nil ((575 . 586)) nil (26471 23229 444371 832000) 0 nil])
([nil nil ((586 . 595)) nil (26471 23229 444371 215000) 0 nil])
([nil nil ((595 . 606)) nil (26471 23229 444370 749000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -605) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) 606) nil (26471 23229 444370 124000) 0 nil])
([nil nil ((605 . 606)) nil (26471 23229 444367 908000) 0 nil])
([nil nil ((604 . 615) (#("QV" 0 2 (fontified nil)) . -604) (604 . 606) (#("QVBoxLayout" 0 11 (fontified nil)) . -604) (604 . 615) (#("QV" 0 2 (fontified t)) . -604) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) 606) nil (26471 23229 444366 949000) 0 nil])
([nil nil ((615 . 617)) nil (26471 23229 444363 710000) 0 nil])
([nil nil ((617 . 626)) nil (26471 23229 444362 882000) 0 nil])
([nil nil ((626 . 633)) nil (26471 23229 444362 88000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -630) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("i" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -631) (undo-tree-id204 . -1) (#("n" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -632) (undo-tree-id205 . -1) 633) nil (26471 23229 444360 595000) 0 nil])
([nil nil ((630 . 642)) nil (26471 23229 444354 782000) 0 nil])
([nil nil ((636 . 645) (#("se" 0 2 (fontified nil)) . -636) (636 . 638) (#("setLayout" 0 9 (fontified nil)) . -636) (636 . 645) (#("setLay" 0 6 (fontified t match-data (0 2 0 1 1 2))) . -636) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) 642) nil (26471 23229 444353 324000) 0 nil])
([nil nil ((645 . 653)) nil (26471 23229 444348 737000) 0 nil])
([nil nil ((655 . 663) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 654) (undo-tree-id195 . -8) (653 . 663)) nil (26471 23229 444347 158000) 0 nil])
([nil nil ((663 . 664)) nil (26471 23229 444338 890000) 0 nil])
([nil nil ((664 . 672)) nil (26471 23229 444338 125000) 0 nil])
([nil nil ((672 . 681)) nil (26471 23229 444337 450000) 0 nil])
([nil nil ((681 . 702)) nil (26471 23229 444336 853000) 0 nil])
([nil nil ((702 . 713)) nil (26471 23229 444335 682000) 0 nil])
([nil nil ((713 . 720)) nil (26471 23229 444330 706000) 0 nil])
([nil nil ((#("# Initialize pages
        self.home_page = HomePage(self)
        self.settings_page = SettingsPage(self)

        self.stack.addWidget(self.home_page)
        self.stack.addWidget(self.settings_page)

        # Show the home page
        self.stack.setCurrentWidget(self.home_page)

    def switch_to_settings(self):
        self.stack.setCurrentWidget(self.settings_page)

    def switch_to_home(self):
        self.stack.setCurrentWidget(self.home_page)" 0 19 (face font-lock-comment-face fontified t) 19 27 (fontified t) 27 31 (face py-object-reference-face fontified t) 31 32 (fontified t) 32 41 (face py-variable-name-face fontified t) 41 42 (fontified t) 42 43 (face font-lock-operator-face fontified t) 43 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 57 (face py-object-reference-face fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 67 (fontified t) 67 71 (face py-object-reference-face fontified t) 71 72 (fontified t) 72 85 (face py-variable-name-face fontified t) 85 86 (fontified t) 86 87 (face font-lock-operator-face fontified t) 87 100 (fontified t) 100 101 (face (rainbow-delimiters-depth-1-face) fontified t) 101 105 (face py-object-reference-face fontified t) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t) 106 116 (fontified t) 116 120 (face py-object-reference-face fontified t) 120 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-1-face) fontified t) 137 141 (face py-object-reference-face fontified t) 141 151 (fontified t) 151 152 (face (rainbow-delimiters-depth-1-face) fontified t) 152 161 (fontified t) 161 165 (face py-object-reference-face fontified t) 165 181 (fontified t) 181 182 (face (rainbow-delimiters-depth-1-face) fontified t) 182 186 (face py-object-reference-face fontified t) 186 200 (fontified t) 200 201 (face (rainbow-delimiters-depth-1-face) fontified t) 201 211 (fontified t) 211 232 (face font-lock-comment-face fontified t) 232 240 (fontified t) 240 244 (face py-object-reference-face fontified t) 244 267 (fontified t) 267 268 (face (rainbow-delimiters-depth-1-face) fontified t) 268 272 (face py-object-reference-face fontified t) 272 282 (fontified t) 282 283 (face (rainbow-delimiters-depth-1-face) fontified t) 283 289 (fontified t) 289 292 (face py-def-class-face fontified t) 292 293 (fontified t) 293 311 (face py-def-face fontified t) 311 312 (face (rainbow-delimiters-depth-1-face) fontified t) 312 316 (face py-object-reference-face fontified t) 316 317 (face (rainbow-delimiters-depth-1-face) fontified t) 317 327 (fontified t) 327 331 (face py-object-reference-face fontified t) 331 354 (fontified t) 354 355 (face (rainbow-delimiters-depth-1-face) fontified t) 355 359 (face py-object-reference-face fontified t) 359 373 (fontified t) 373 374 (face (rainbow-delimiters-depth-1-face) fontified t) 374 380 (fontified t) 380 383 (face py-def-class-face fontified t) 383 384 (fontified t) 384 398 (face py-def-face fontified t) 398 399 (face (rainbow-delimiters-depth-1-face) fontified t) 399 403 (face py-object-reference-face fontified t) 403 404 (face (rainbow-delimiters-depth-1-face) fontified t) 404 414 (fontified t) 414 418 (face py-object-reference-face fontified t) 418 441 (fontified t) 441 442 (face (rainbow-delimiters-depth-1-face) fontified t) 442 446 (face py-object-reference-face fontified t) 446 456 (fontified t) 456 457 (face (rainbow-delimiters-depth-1-face) fontified t)) . 730) (undo-tree-id308 . -457) (undo-tree-id309 . -457) (t 26471 23229 565126 899000)) nil (26471 23381 230829 561000) 0 nil])
([nil nil ((730 . 731)) nil (26471 23381 230799 215000) 0 nil])
([nil nil ((731 . 743)) nil (26471 23381 230798 830000) 0 nil])
([nil nil ((743 . 752)) nil (26471 23381 230798 526000) 0 nil])
([nil nil ((752 . 764)) nil (26471 23381 230797 798000) 0 nil])
([nil nil ((764 . 785)) nil (26471 23381 230797 462000) 0 nil])
([nil nil ((785 . 792)) nil (26471 23381 230797 56000) 0 nil])
([nil nil ((792 . 801)) nil (26471 23381 230796 714000) 0 nil])
([nil nil ((801 . 820)) nil (26471 23381 230796 330000) 0 nil])
([nil nil ((814 . 826) (#("se" 0 2 (fontified nil)) . -814) (814 . 816) (#("setAlignment" 0 12 (fontified nil)) . -814) (814 . 826) (#("setAli" 0 6 (fontified t)) . -814) (undo-tree-id304 . -6) (undo-tree-id305 . -6) (undo-tree-id306 . -6) (undo-tree-id307 . -6) 820) nil (26471 23381 230795 423000) 0 nil])
([nil nil ((826 . 837)) nil (26471 23381 230791 742000) 0 nil])
([nil nil ((830 . 843) (#("Al" 0 2 (fontified nil)) . -830) (830 . 832) (#("AlignmentFlag" 0 13 (fontified nil)) . -830) (830 . 843) (#("Alignme" 0 7 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -830) (undo-tree-id300 . -7) (undo-tree-id301 . -7) (undo-tree-id302 . -7) (undo-tree-id303 . -7) 837) nil (26471 23381 230790 913000) 0 nil])
([nil nil ((843 . 849)) nil (26471 23381 230788 130000) 0 nil])
([nil nil ((844 . 855) (#("Al" 0 2 (fontified nil)) . -844) (844 . 846) (#("AlignCenter" 0 11 (fontified nil)) . -844) (844 . 855) (#("Align" 0 5 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -844) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) 849) nil (26471 23381 230787 536000) 0 nil])
([nil nil ((855 . 856)) nil (26471 23381 230785 321000) 0 nil])
([nil nil ((858 . 866) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 857) (undo-tree-id295 . -8) (856 . 866)) nil (26471 23381 230784 824000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 862) (undo-tree-id294 . -4) 866) nil (26471 23381 230783 654000) 0 nil])
([nil nil ((862 . 866)) nil (26471 23381 230782 828000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -865) (undo-tree-id293 . -1) 866) nil (26471 23381 230782 21000) 0 nil])
([nil nil ((865 . 886)) nil (26471 23381 230781 267000) 0 nil])
([nil nil ((886 . 887)) nil (26471 23381 230780 877000) 0 nil])
([nil nil ((887 . 896)) nil (26471 23381 230780 507000) 0 nil])
([nil nil ((896 . 897)) nil (26471 23381 230780 139000) 0 nil])
([nil nil ((897 . 900)) nil (26471 23381 230779 753000) 0 nil])
([nil nil ((900 . 901)) nil (26471 23381 230779 160000) 0 nil])
([nil nil ((898 . 904) (#("Lay" 0 3 (face font-lock-comment-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -898) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) 901) nil (26471 23381 230778 360000) 0 nil])
([nil nil ((904 . 913)) nil (26471 23381 230776 422000) 0 nil])
([nil nil ((913 . 925)) nil (26471 23381 230776 116000) 0 nil])
([nil nil ((923 . 934) (#("QH" 0 2 (fontified nil)) . -923) (923 . 925) (#("QHBoxLayout" 0 11 (fontified nil)) . -923) (923 . 934) (#("QH" 0 2 (fontified t)) . -923) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) 925) nil (26471 23381 230775 70000) 0 nil])
([nil nil ((934 . 936)) nil (26471 23381 230772 754000) 0 nil])
([nil nil ((938 . 946) (#("        " 0 8 (fontified nil match-data (0 2 0 1 1 2))) . 937) (undo-tree-id285 . -8) (936 . 946)) nil (26471 23381 230772 166000) 0 nil])
([nil nil ((946 . 947)) nil (26471 23381 230771 170000) 0 nil])
([nil nil ((947 . 957)) nil (26471 23381 230770 577000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2))) . 956) (undo-tree-id284 . -1) 957) nil (26471 23381 230769 751000) 0 nil])
([nil nil ((956 . 965)) nil (26471 23381 230767 704000) 0 nil])
([nil nil ((965 . 974)) nil (26471 23381 230767 79000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -973) (undo-tree-id283 . -1) 974) nil (26471 23381 230766 174000) 0 nil])
([nil nil ((973 . 994)) nil (26471 23381 230765 167000) 0 nil])
([nil nil ((994 . 995)) nil (26471 23381 230764 624000) 0 nil])
([nil nil ((995 . 998)) nil (26471 23381 230764 149000) 0 nil])
([nil nil ((998 . 1007)) nil (26471 23381 230763 508000) 0 nil])
([nil nil ((1007 . 1017)) nil (26471 23381 230762 949000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1016) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) 1017) nil (26471 23381 230762 54000) 0 nil])
([nil nil ((1016 . 1019)) nil (26471 23381 230759 928000) 0 nil])
([nil nil ((1007 . 1021) (#("gre" 0 3 (fontified nil)) . -1007) (1007 . 1010) (#("greeting_label" 0 14 (fontified nil)) . -1007) (1007 . 1021) (#("greeting_lab" 0 12 (fontified t match-data (0 2 0 1 1 2))) . -1007) (undo-tree-id275 . -12) (undo-tree-id276 . -12) (undo-tree-id277 . -12) (undo-tree-id278 . -12) 1019) nil (26471 23381 230758 622000) 0 nil])
([nil nil ((1021 . 1037)) nil (26471 23381 230755 941000) 0 nil])
([nil nil ((1037 . 1046)) nil (26471 23381 230755 549000) 0 nil])
([nil nil ((1046 . 1047)) nil (26471 23381 230754 872000) 0 nil])
([nil nil ((1047 . 1054)) nil (26471 23381 230754 379000) 0 nil])
([nil nil ((1054 . 1092)) nil (26471 23381 230753 716000) 0 nil])
([nil nil ((1092 . 1096)) nil (26471 23381 230753 298000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . -1092) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("o" 0 1 (face font-lock-string-face fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . -1093) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("p" 0 1 (face font-lock-string-face fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . -1094) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("_" 0 1 (face font-lock-string-face fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . -1095) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 1096) nil (26471 23381 230752 200000) 0 nil])
([nil nil ((1053 . 1054)) nil (26471 23381 230744 593000) 0 nil])
([nil nil ((1055 . 1064)) nil (26471 23381 230744 87000) 0 nil])
([nil nil ((1064 . 1068)) nil (26471 23381 230743 309000) 0 nil])
([nil nil ((1064 . 1071) (#("top" 0 3 (fontified nil)) . -1064) (1064 . 1067) (#("top_bar" 0 7 (fontified nil)) . -1064) (1064 . 1071) (#("top_" 0 4 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . -1064) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) 1068) nil (26471 23381 230742 520000) 0 nil])
([nil nil ((1071 . 1077)) nil (26471 23381 230740 31000) 0 nil])
([nil nil ((1072 . 1081) (#("ad" 0 2 (fontified nil)) . -1072) (1072 . 1074) (#("addWidget" 0 9 (fontified nil)) . -1072) (1072 . 1081) (#("addWi" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1072) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) 1077) nil (26471 23381 230739 87000) 0 nil])
([nil nil ((1081 . 1086)) nil (26471 23381 230736 587000) 0 nil])
([nil nil ((1082 . 1096) (#("gre" 0 3 (fontified nil)) . -1082) (1082 . 1085) (#("greeting_label" 0 14 (fontified nil)) . -1082) (1082 . 1096) (#("gree" 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1082) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) 1086) nil (26471 23381 230735 669000) 0 nil])
([nil nil ((1096 . 1103)) nil (26471 23381 230733 476000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1102) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 1103) nil (26471 23381 230732 736000) 0 nil])
([nil nil ((1102 . 1103)) nil (26471 23381 230731 230000) 0 nil])
([nil nil ((1103 . 1104)) nil (26471 23381 230730 553000) 0 nil])
([nil nil ((1098 . 1108) (#("ali" 0 3 (fontified nil)) . -1098) (1098 . 1101) (#("alignment=" 0 10 (fontified nil)) . -1098) (1098 . 1108) (#("alignm" 0 6 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1098) (undo-tree-id241 . -6) (undo-tree-id242 . -4) (undo-tree-id243 . -6) (undo-tree-id244 . -6) 1104) nil (26471 23381 230729 575000) 0 nil])
([nil nil ((1108 . 1114)) nil (26471 23381 230725 718000) 0 nil])
([nil nil ((1111 . 1124) (#("Al" 0 2 (fontified nil)) . -1111) (1111 . 1113) (#("AlignmentFlag" 0 13 (fontified nil)) . -1111) (1111 . 1124) (#("Ali" 0 3 (fontified t)) . -1111) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) 1114) nil (26471 23381 230724 762000) 0 nil])
([nil nil ((1124 . 1125)) nil (26471 23381 230722 424000) 0 nil])
([nil nil ((1125 . 1126)) nil (26471 23381 230721 994000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1124) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("A" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1125) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 1126) nil (26471 23381 230721 152000) 0 nil])
([nil nil ((1124 . 1128)) nil (26471 23381 230717 205000) 0 nil])
([nil nil ((1125 . 1134) (#("AL" 0 2 (fontified nil)) . -1125) (1125 . 1127) (#("AlignLeft" 0 9 (fontified nil)) . -1125) (1125 . 1134) (#("ALi" 0 3 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1125) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) 1128) nil (26471 23381 230716 382000) 0 nil])
([nil nil ((1134 . 1135)) nil (26471 23381 230713 846000) 0 nil])
([nil nil ((1137 . 1145) (#("        " 0 8 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 1136) (undo-tree-id223 . -8) (1135 . 1145)) nil (26471 23381 230713 240000) 0 nil])
([nil nil ((1145 . 1146)) nil (26471 23381 230712 146000) 0 nil])
([nil nil ((1146 . 1148)) nil (26471 23381 230711 370000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-comment-face fontified t match-data (0 3 0 1 1 2 2 3))) . -1147) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 1148) nil (26471 23381 230710 820000) 0 nil])
([nil nil ((1147 . 1153)) nil (26471 23381 230708 954000) 0 nil])
([nil nil ((1153 . 1162)) nil (26471 23381 230708 407000) 0 nil])
([nil nil ((1162 . 1166)) nil (26471 23381 230707 926000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1165) (undo-tree-id219 . -1) 1166) nil (26471 23381 230707 397000) 0 nil])
([nil nil ((1165 . 1172)) nil (26471 23381 230706 155000) 0 nil])
([nil nil ((1172 . 1175)) nil (26471 23381 230705 618000) 0 nil])
([nil nil ((1170 . 1180) (#("ad" 0 2 (fontified nil)) . -1170) (1170 . 1172) (#("addStretch" 0 10 (fontified nil)) . -1170) (1170 . 1180) (#("addSr" 0 5 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1170) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) 1175) nil (26471 23381 230703 619000) 0 nil])
([nil nil ((1180 . 1182)) nil (26471 23381 230624 649000) 0 nil])
([nil nil ((1182 . 1191)) nil (26471 23381 230623 554000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2010 . 2011) (nil fontified nil 1191 . 2011) (1191 . 2011)) nil (26471 23381 230619 382000) 0 nil])
([nil nil ((151 . 153) (t 26471 23381 406965 265000)) nil (26471 23440 270222 2000) 0 nil])
([nil nil ((150 . 163) (#("QWi" 0 3 (fontified nil)) . -150) (150 . 153) (#("QWidgetAction" 0 13 (fontified nil)) . -150) (150 . 163) (#("QWi" 0 3 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . -150) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) 153) nil (26471 23440 270220 172000) 0 nil])
([nil nil ((#("Action" 0 6 (fontified t match-data (0 13 0 1 7 8 8 9 9 10 10 11 11 12 12 13))) . 163)) nil (26471 23440 270205 498000) 0 nil])
([nil nil ((1696 . 1699) (t 26471 23440 282895 559000)) nil (26471 23446 105891 856000) 0 nil])
([nil nil ((1695 . 1708) (#("QWid" 0 4 (fontified nil)) . -1695) (1695 . 1699) (#("QWidgetAction" 0 13 (fontified nil)) . -1695) (1695 . 1708) (#("QWid" 0 4 (fontified t)) . -1695) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) 1699) nil (26471 23446 105885 711000) 0 nil])
([nil nil ((#("Action" 0 6 (fontified t)) . 1708) (undo-tree-id434 . -6) (t 26471 23446 229888 328000)) nil (26471 23448 79006 41000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1721) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("e" 0 1 (fontified t)) . -1722) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("l" 0 1 (fontified t)) . -1723) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#("f" 0 1 (face py-object-reference-face fontified t)) . -1724) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 1725 (t 26471 23448 200885 924000)) nil (26471 23511 371961 701000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1720) (undo-tree-id505 . -1) (undo-tree-id506 . -1) 1721) nil (26471 23511 371956 964000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1719) (undo-tree-id503 . -1) (undo-tree-id504 . -1) 1720) nil (26471 23511 371955 517000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -1718) (undo-tree-id501 . -1) (undo-tree-id502 . -1) 1719) nil (26471 23511 371953 841000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1696) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1697) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1698) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("g" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1699) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1700) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1701) (undo-tree-id500 . -1) 1702) nil (26471 23511 371951 654000) 0 nil])
([nil nil ((1712 . 1719)) nil (26471 23511 371946 708000) 0 nil])
([nil nil ((#("f" 0 1 (face py-object-reference-face fontified t)) . -1718) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) 1719) nil (26471 23511 371945 930000) 0 nil])
([nil nil ((1718 . 1720)) nil (26471 23511 371943 332000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1718) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("f" 0 1 (fontified t)) . -1719) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) 1720) nil (26471 23511 371940 736000) 0 nil])
([nil nil ((1718 . 1719)) nil (26471 23511 371906 606000) 0 nil])
([nil nil ((197 . 198) (t 26471 23511 497806 878000)) nil (26471 23526 761176 111000) 0 nil])
([nil nil ((198 . 203)) nil (26471 23526 761175 345000) 0 nil])
([nil nil ((203 . 224)) nil (26471 23526 761174 835000) 0 nil])
([nil nil ((224 . 229)) nil (26471 23526 761174 66000) 0 nil])
([nil nil ((222 . 229) (#("QAc" 0 3 (fontified nil)) . -222) (222 . 225) (#("QAction" 0 7 (fontified t match-data (0 2 0 1 1 2))) . -222) (undo-tree-id515 . -7) (undo-tree-id516 . -7) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5) (undo-tree-id520 . -5) (undo-tree-id521 . -5) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -6) (undo-tree-id534 . -6) (undo-tree-id535 . -6) (undo-tree-id536 . -6) (undo-tree-id537 . -6) (undo-tree-id538 . -6) (undo-tree-id539 . -6) (undo-tree-id540 . -6) (undo-tree-id541 . -6) (undo-tree-id542 . -6) (undo-tree-id543 . -6) (undo-tree-id544 . -6) (undo-tree-id545 . -6) (undo-tree-id546 . -6) (undo-tree-id547 . -6) (undo-tree-id548 . -6) (undo-tree-id549 . -6) (undo-tree-id550 . -6) (undo-tree-id551 . -6) (undo-tree-id552 . -6) (undo-tree-id553 . -6) (undo-tree-id554 . -6) (undo-tree-id555 . -6) (undo-tree-id556 . -7) (undo-tree-id557 . -7) (undo-tree-id558 . -7) (undo-tree-id559 . -7) (undo-tree-id560 . -7) (undo-tree-id561 . -7) (undo-tree-id562 . -7) (undo-tree-id563 . -7) (undo-tree-id564 . -7) (undo-tree-id565 . -7) (undo-tree-id566 . -7) (undo-tree-id567 . -7) (undo-tree-id568 . -7) (undo-tree-id569 . -7) (undo-tree-id570 . -7) (undo-tree-id571 . -7) (undo-tree-id572 . -7) (undo-tree-id573 . -7) (undo-tree-id574 . -7) (undo-tree-id575 . -7) (undo-tree-id576 . -7) (undo-tree-id577 . -7) (undo-tree-id578 . -7) (undo-tree-id579 . -7) (undo-tree-id580 . -7) (undo-tree-id581 . -7) (undo-tree-id582 . -7) (undo-tree-id583 . -7) (undo-tree-id584 . -7) (undo-tree-id585 . -7) (undo-tree-id586 . -7) (undo-tree-id587 . -7) (undo-tree-id588 . -7) (undo-tree-id589 . -7) (undo-tree-id590 . -7) (undo-tree-id591 . -7) (undo-tree-id592 . -7) (undo-tree-id593 . -7) (undo-tree-id594 . -7) (undo-tree-id595 . -7) (undo-tree-id596 . -7) (undo-tree-id597 . -7) (undo-tree-id598 . -7) (undo-tree-id599 . -7) (undo-tree-id600 . -7) (undo-tree-id601 . -7) (undo-tree-id602 . -7) 229) nil (26471 23526 761169 439000) 0 nil])
([nil nil ((894 . 903) (t 26471 23526 885787 146000)) nil (26471 23603 659643 893000) 0 nil])
([nil nil ((903 . 911)) nil (26471 23603 659643 88000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -910) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) 911) nil (26471 23603 659642 280000) 0 nil])
([nil nil ((910 . 915)) nil (26471 23603 659640 110000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -913) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("o" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -914) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) 915) nil (26471 23603 659639 122000) 0 nil])
([nil nil ((913 . 915)) nil (26471 23603 659633 106000) 0 nil])
([nil nil ((910 . 919) (#("ad" 0 2 (fontified nil)) . -910) (910 . 912) (#("addWidget" 0 9 (fontified nil)) . -910) (910 . 919) (#("addWi" 0 5 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -910) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) 915) nil (26471 23603 659631 893000) 0 nil])
([nil nil ((919 . 920)) nil (26471 23603 659628 468000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -919) (undo-tree-id606 . -1) 920) nil (26471 23603 659627 704000) 0 nil])
([nil nil ((919 . 920)) nil (26471 23603 659626 306000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -919) (undo-tree-id605 . -1) 920) nil (26471 23603 659625 327000) 0 nil])
([nil nil ((919 . 924)) nil (26471 23603 659623 638000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -923) (undo-tree-id603 . -1) (undo-tree-id604 . -1) 924) nil (26471 23603 659621 385000) 0 nil])
([nil nil ((923 . 933)) nil (26471 23603 659609 80000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -161) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (#("n" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -162) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) 163 (t 26471 23603 783685 807000)) nil (26471 23952 6677 721000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -159) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -160) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) 161) nil (26471 23952 6674 413000) 0 nil])
([nil nil ((#("QWidgetAc" 0 9 (fontified t match-data (0 3 0 1 1 2 2 3))) . -150) (undo-tree-id899 . -9) (undo-tree-id900 . -9) (undo-tree-id901 . -9) 159) nil (26471 23952 6670 870000) 0 nil])
([nil nil ((150 . 157)) nil (26471 23952 6668 586000) 0 nil])
([nil nil ((150 . 160) (#("QTa" 0 3 (fontified nil)) . -150) (150 . 153) (#("QTabWidget" 0 10 (fontified nil)) . -150) (150 . 160) (#("QTabWid" 0 7 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -150) (undo-tree-id895 . -7) (undo-tree-id896 . -7) (undo-tree-id897 . -7) (undo-tree-id898 . -7) 157) nil (26471 23952 6667 661000) 0 nil])
([nil nil ((160 . 168)) nil (26471 23952 6665 304000) 0 nil])
([nil nil ((162 . 168) (#("QFr" 0 3 (fontified nil)) . -162) (162 . 165) (#("QFrame" 0 6 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -162) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) 168) nil (26471 23952 6664 596000) 0 nil])
([nil nil ((234 . 238)) nil (26471 23952 6662 220000) 0 nil])
([nil nil ((238 . 240)) nil (26471 23952 6661 816000) 0 nil])
([nil nil ((236 . 242) (#("QBr" 0 3 (fontified nil)) . -236) (236 . 239) (#("QBrush" 0 6 (fontified nil)) . -236) (236 . 242) (#("QBru" 0 4 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -236) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) 240) nil (26471 23952 6660 700000) 0 nil])
([nil nil ((242 . 249)) nil (26471 23952 6658 48000) 0 nil])
([nil nil ((244 . 252) (#("QPa" 0 3 (fontified nil)) . -244) (244 . 247) (#("QPainter" 0 8 (fontified nil)) . -244) (244 . 252) (#("QPain" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -244) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5) (undo-tree-id886 . -5) 249) nil (26471 23952 6656 930000) 0 nil])
([nil nil ((252 . 256)) nil (26471 23952 6652 881000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -255) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) 256) nil (26471 23952 6650 968000) 0 nil])
([nil nil ((255 . 256)) nil (26471 23952 6607 300000) 0 nil])
([nil nil ((254 . 258) (#("QP" 0 2 (fontified nil)) . -254) (254 . 256) (#("QPen" 0 4 (fontified nil)) . -254) (254 . 258) (#("QP" 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -254) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) 256) nil (26471 23952 6590 26000) 0 nil])
([nil nil ((789 . 797) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 788) (undo-tree-id919 . -8) (787 . 797) (t 26471 23952 131208 609000)) nil (26471 23993 543853 387000) 0 nil])
([nil nil ((797 . 798)) nil (26471 23993 543851 890000) 0 nil])
([nil nil ((798 . 802)) nil (26471 23993 543851 264000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -801) (undo-tree-id918 . -1) 802) nil (26471 23993 543850 717000) 0 nil])
([nil nil ((801 . 810)) nil (26471 23993 543849 822000) 0 nil])
([nil nil ((810 . 819)) nil (26471 23993 543849 249000) 0 nil])
([nil nil ((819 . 832)) nil (26471 23993 543848 829000) 0 nil])
([nil nil ((826 . 835) (#("ad" 0 2 (fontified nil)) . -826) (826 . 828) (#("addLayout" 0 9 (fontified nil)) . -826) (826 . 835) (#("addLay" 0 6 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -826) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) 832) nil (26471 23993 543846 920000) 0 nil])
([nil nil ((835 . 845)) nil (26471 23993 543836 283000) 0 nil])
([nil nil ((845 . 862)) nil (26471 23993 543832 130000) 0 nil])
([nil nil ((#("
        # Placeholder
        self.content = QLabel(\"Main Content...\")
        self.content.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(self.content)
" 0 1 (fontified t) 1 9 (fontified t) 9 23 (face font-lock-comment-face fontified t) 23 31 (fontified t) 31 35 (face py-object-reference-face fontified t) 35 36 (fontified t) 36 43 (face py-variable-name-face fontified t) 43 44 (fontified t) 44 45 (face font-lock-operator-face fontified t) 45 52 (fontified t) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t) 53 70 (face font-lock-string-face fontified t) 70 71 (face (rainbow-delimiters-depth-1-face) fontified t) 71 72 (fontified t) 72 80 (fontified t) 80 84 (face py-object-reference-face fontified t) 84 93 (fontified t) 93 105 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 106 109 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 109 123 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 123 134 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 134 135 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 135 136 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 136 151 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 151 160 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 161 165 (face py-object-reference-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 165 173 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 173 174 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 174 175 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -863) (undo-tree-id920 . -9) (undo-tree-id921 . -9) (undo-tree-id922 . -135) (undo-tree-id923 . -175) 1038 (t 26471 23993 668872 652000)) nil (26471 24015 690861 953000) 0 nil])
([nil nil ((910 . 919)) nil (26471 24015 690851 515000) 0 nil])
([nil nil ((919 . 938)) nil (26471 24015 690850 994000) 0 nil])
([nil nil ((954 . 960)) nil (26471 24015 690849 959000) 0 nil])
([nil nil ((960 . 961)) nil (26471 24015 690845 610000) 0 nil])
([nil nil ((978 . 986) (t 26471 24015 815206 234000)) nil (26471 24028 978371 599000) 0 nil])
([nil nil ((986 . 987)) nil (26471 24028 978371 70000) 0 nil])
([nil nil ((986 . 997)) nil (26471 24028 978370 594000) 0 nil])
([nil nil ((994 . 1003) (#("se" 0 2 (fontified nil)) . -994) (994 . 996) (#("setLayout" 0 9 (fontified nil)) . -994) (994 . 1003) (#("set" 0 3 (fontified t match-data (0 2 0 1 1 2))) . -994) (undo-tree-id1003 . -3) (undo-tree-id1004 . -3) (undo-tree-id1005 . -3) (undo-tree-id1006 . -3) 997) nil (26471 24028 978369 696000) 0 nil])
([nil nil ((1003 . 1010)) nil (26471 24028 978367 121000) 0 nil])
([nil nil ((1004 . 1018) (#("top" 0 3 (fontified nil)) . -1004) (1004 . 1007) (#("top_bar_layout" 0 14 (fontified nil)) . -1004) (1004 . 1018) (#("top_ba" 0 6 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1004) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -6) (undo-tree-id941 . -6) (undo-tree-id942 . -6) (undo-tree-id943 . -6) (undo-tree-id944 . -6) (undo-tree-id945 . -6) (undo-tree-id946 . -6) (undo-tree-id947 . -6) (undo-tree-id948 . -6) (undo-tree-id949 . -6) (undo-tree-id950 . -6) (undo-tree-id951 . -6) (undo-tree-id952 . -6) (undo-tree-id953 . -6) (undo-tree-id954 . -6) (undo-tree-id955 . -6) (undo-tree-id956 . -6) (undo-tree-id957 . -6) (undo-tree-id958 . -6) (undo-tree-id959 . -6) (undo-tree-id960 . -6) (undo-tree-id961 . -6) (undo-tree-id962 . -6) (undo-tree-id963 . -6) (undo-tree-id964 . -6) (undo-tree-id965 . -6) (undo-tree-id966 . -6) (undo-tree-id967 . -6) (undo-tree-id968 . -6) (undo-tree-id969 . -6) (undo-tree-id970 . -6) (undo-tree-id971 . -6) (undo-tree-id972 . -6) (undo-tree-id973 . -6) (undo-tree-id974 . -6) (undo-tree-id975 . -6) (undo-tree-id976 . -6) (undo-tree-id977 . -6) (undo-tree-id978 . -6) (undo-tree-id979 . -6) (undo-tree-id980 . -6) (undo-tree-id981 . -6) (undo-tree-id982 . -6) (undo-tree-id983 . -6) (undo-tree-id984 . -6) (undo-tree-id985 . -6) (undo-tree-id986 . -6) (undo-tree-id987 . -6) (undo-tree-id988 . -6) (undo-tree-id989 . -6) (undo-tree-id990 . -6) (undo-tree-id991 . -6) (undo-tree-id992 . -6) (undo-tree-id993 . -6) (undo-tree-id994 . -6) (undo-tree-id995 . -6) (undo-tree-id996 . -6) (undo-tree-id997 . -6) (undo-tree-id998 . -6) (undo-tree-id999 . -6) (undo-tree-id1000 . -6) (undo-tree-id1001 . -6) (undo-tree-id1002 . -6) 1010) nil (26471 24028 978363 859000) 0 nil])
([nil nil ((1018 . 1019)) nil (26471 24028 978292 413000) 0 nil])
([nil nil ((#("

        # Greeting
        greeting_label = QLabel(\"Hello!\")
        greeting_label.setStyleSheet(\"font-size: 18px;\")
        top_bar.addWidget(greeting_label, alignment=Qt.AlignmentFlag.AlignLeft)

        # Spacer
        top_bar.addStretch()
                # Hamburger menu (right)
        menu_button = QPushButton(\"☰\")
        menu_button.setFixedSize(30, 30)
        menu_button.setStyleSheet(\"font-size: 18px; padding: 5px;\")
        menu_button.clicked.connect(self.show_hamburger_menu)
        top_bar.addWidget(menu_button, alignment=Qt.AlignmentFlag.AlignRight)" 0 1 (fontified t match-data (0 2 0 1 1 2)) 1 2 (fontified t match-data (0 2 0 1 1 2)) 2 10 (fontified t match-data (0 2 0 1 1 2)) 10 21 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2)) 21 29 (fontified t match-data (0 2 0 1 1 2)) 29 43 (face py-variable-name-face fontified t match-data (0 2 0 1 1 2)) 43 44 (fontified t match-data (0 2 0 1 1 2)) 44 45 (face font-lock-operator-face fontified t match-data (0 2 0 1 1 2)) 45 52 (fontified t match-data (0 2 0 1 1 2)) 52 53 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 53 61 (face font-lock-string-face fontified t match-data (0 2 0 1 1 2)) 61 62 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 62 63 (fontified t match-data (0 2 0 1 1 2)) 63 71 (fontified t match-data (0 2 0 1 1 2)) 71 99 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 99 100 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 100 118 (face font-lock-string-face fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 118 119 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 119 120 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 120 128 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 128 136 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 136 145 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 145 146 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 146 162 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 162 175 (fontified t) 175 189 (fontified t match-data (0 3 0 1 1 2 2 3)) 189 198 (fontified t match-data (0 3 0 1 1 2 2 3)) 198 199 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3)) 199 200 (fontified t match-data (0 3 0 1 1 2 2 3)) 200 201 (fontified t match-data (0 3 0 1 1 2 2 3)) 201 209 (fontified t match-data (0 3 0 1 1 2 2 3)) 209 218 (face font-lock-comment-face fontified t match-data (0 3 0 1 1 2 2 3)) 218 234 (fontified t match-data (0 3 0 1 1 2 2 3)) 234 244 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 5 6)) 244 245 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 5 6)) 245 246 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 5 6)) 246 247 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 5 6)) 247 255 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 5 6)) 255 263 (fontified t) 263 288 (face font-lock-comment-face fontified t) 288 296 (fontified t) 296 307 (face py-variable-name-face fontified t) 307 308 (fontified t) 308 309 (face font-lock-operator-face fontified t) 309 321 (fontified t) 321 322 (face (rainbow-delimiters-depth-1-face) fontified t) 322 325 (face font-lock-string-face fontified t) 325 326 (face (rainbow-delimiters-depth-1-face) fontified t) 326 359 (fontified t) 359 360 (face (rainbow-delimiters-depth-1-face) fontified t) 360 362 (face py-number-face fontified t) 362 364 (fontified t) 364 366 (face py-number-face fontified t) 366 367 (face (rainbow-delimiters-depth-1-face) fontified t) 367 401 (fontified t) 401 402 (face (rainbow-delimiters-depth-1-face) fontified t) 402 434 (face font-lock-string-face fontified t) 434 435 (face (rainbow-delimiters-depth-1-face) fontified t) 435 471 (fontified t) 471 472 (face (rainbow-delimiters-depth-1-face) fontified t) 472 476 (face py-object-reference-face fontified t) 476 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-1-face) fontified t) 497 523 (fontified t) 523 524 (face (rainbow-delimiters-depth-1-face) fontified t) 524 574 (fontified t) 574 575 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1019) (undo-tree-id1024 . -255) (undo-tree-id1025 . -575) 1594 (t 26471 24029 103399 895000)) nil (26471 24120 746870 824000) 0 nil])
([nil nil ((1021 . 1029) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1020) (undo-tree-id1023 . -8) (1019 . 1029)) nil (26471 24120 746868 974000) 0 nil])
([nil nil ((1029 . 1030)) nil (26471 24120 746867 697000) 0 nil])
([nil nil ((1030 . 1035)) nil (26471 24120 746867 108000) 0 nil])
([nil nil ((1035 . 1044)) nil (26471 24120 746866 628000) 0 nil])
([nil nil ((1044 . 1055)) nil (26471 24120 746866 233000) 0 nil])
([nil nil ((1051 . 1061) (#("QTa" 0 3 (fontified nil)) . -1051) (1051 . 1054) (#("QTabWidget" 0 10 (fontified nil)) . -1051) (1051 . 1061) (#("QTab" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1051) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) 1055) nil (26471 24120 746865 380000) 0 nil])
([nil nil ((1061 . 1063)) nil (26471 24120 746862 169000) 0 nil])
([nil nil ((1063 . 1072)) nil (26471 24120 746861 478000) 0 nil])
([nil nil ((1072 . 1091)) nil (26471 24120 746861 70000) 0 nil])
([nil nil ((1091 . 1102)) nil (26471 24120 746860 602000) 0 nil])
([nil nil ((1102 . 1111)) nil (26471 24120 746860 133000) 0 nil])
([nil nil ((1111 . 1128)) nil (26471 24120 746859 554000) 0 nil])
([nil nil ((1128 . 1144)) nil (26471 24120 746859 63000) 0 nil])
([nil nil ((1144 . 1153)) nil (26471 24120 746858 501000) 0 nil])
([nil nil ((1153 . 1174)) nil (26471 24120 746857 863000) 0 nil])
([nil nil ((1174 . 1177)) nil (26471 24120 746857 222000) 0 nil])
([nil nil ((1177 . 1187)) nil (26471 24120 746856 528000) 0 nil])
([nil nil ((1187 . 1196)) nil (26471 24120 746855 793000) 0 nil])
([nil nil ((1196 . 1197)) nil (26471 24120 746855 105000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1196) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) 1197) nil (26471 24120 746854 426000) 0 nil])
([nil nil ((1196 . 1200)) nil (26471 24120 746851 845000) 0 nil])
([nil nil ((1196 . 1210) (#("top" 0 3 (fontified nil)) . -1196) (1196 . 1199) (#("top_bar_layout" 0 14 (fontified nil)) . -1196) (1196 . 1210) (#("top_" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1196) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) 1200) nil (26471 24120 746850 866000) 0 nil])
([nil nil ((1210 . 1216)) nil (26471 24120 746847 513000) 0 nil])
([nil nil ((1211 . 1220) (#("ad" 0 2 (fontified nil)) . -1211) (1211 . 1213) (#("addWidget" 0 9 (fontified nil)) . -1211) (1211 . 1220) (#("addWi" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1211) (undo-tree-id1007 . -5) (undo-tree-id1008 . -5) (undo-tree-id1009 . -5) (undo-tree-id1010 . -5) 1216) nil (26471 24120 746845 631000) 0 nil])
([nil nil ((1220 . 1226)) nil (26471 24120 746830 855000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -763) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) 764 (t 26471 24120 870614 769000)) nil (26471 24145 716636 87000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -758) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -759) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#("y" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -760) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -761) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("u" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -762) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) 763) nil (26471 24145 716632 912000) 0 nil])
([nil nil ((758 . 764)) nil (26471 24145 716614 471000) 0 nil])
([nil nil ((#("def show_hamburger_menu(self):
        # Create a simple menu for the hamburger button
        menu = QMenu(self)
        settings_action = QAction(\"Settings\", self)
        settings_action.triggered.connect(self.open_settings)
        menu.addAction(settings_action)
        menu.exec(self.mapToGlobal(self.cursor().pos()))" 0 3 (face py-def-class-face fontified t) 3 4 (fontified t) 4 23 (face py-def-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 28 (face py-object-reference-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 38 (fontified t) 38 39 (fontified t) 39 87 (face font-lock-comment-face fontified t) 87 95 (fontified t) 95 99 (face py-variable-name-face fontified t) 99 100 (fontified t) 100 101 (face font-lock-operator-face fontified t) 101 103 (fontified t) 103 104 (fontified t) 104 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t) 108 109 (face py-object-reference-face fontified t) 109 112 (face py-object-reference-face fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 114 (fontified t) 114 122 (fontified t) 122 137 (face py-variable-name-face fontified t) 137 138 (fontified t) 138 139 (face font-lock-operator-face fontified t) 139 140 (fontified t) 140 143 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 143 147 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 147 148 (face (rainbow-delimiters-depth-1-face) fontified t) 148 158 (face font-lock-string-face fontified t) 158 160 (fontified t) 160 164 (face py-object-reference-face fontified t) 164 165 (face (rainbow-delimiters-depth-1-face) fontified t) 165 166 (fontified t) 166 207 (fontified t) 207 208 (face (rainbow-delimiters-depth-1-face) fontified t) 208 212 (face py-object-reference-face fontified t) 212 226 (fontified t) 226 227 (face (rainbow-delimiters-depth-1-face) fontified t) 227 250 (fontified t) 250 251 (face (rainbow-delimiters-depth-1-face) fontified t) 251 266 (fontified t) 266 267 (face (rainbow-delimiters-depth-1-face) fontified t) 267 281 (fontified t) 281 285 (face font-lock-keyword-face fontified t) 285 286 (face (rainbow-delimiters-depth-1-face) fontified t) 286 290 (face py-object-reference-face fontified t) 290 302 (fontified t) 302 303 (face (rainbow-delimiters-depth-2-face) fontified t) 303 307 (face py-object-reference-face fontified t) 307 314 (fontified t) 314 315 (face (rainbow-delimiters-depth-3-face) fontified t) 315 316 (face (rainbow-delimiters-depth-3-face) fontified t) 316 320 (fontified t) 320 321 (face (rainbow-delimiters-depth-3-face) fontified t) 321 322 (face (rainbow-delimiters-depth-3-face) fontified t) 322 323 (face (rainbow-delimiters-depth-2-face) fontified t) 323 324 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1264) (undo-tree-id1669 . -324) (undo-tree-id1670 . -157) (undo-tree-id1671 . -141) (undo-tree-id1672 . -164) (t 26471 24145 845911 357000)) nil (26471 24176 746614 97000) 0 nil])
([nil nil ((1264 . 1267)) nil (26471 24176 746611 971000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1266) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) 1267) nil (26471 24176 746611 291000) 0 nil])
([nil nil ((1266 . 1267)) nil (26471 24176 746608 847000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1264) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (#("e" 0 1 (fontified t)) . -1265) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (#("f" 0 1 (face py-def-class-face fontified t)) . -1266) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) 1267) nil (26471 24176 746592 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2172 . 2173) (nil fontified nil 1264 . 2173) (1264 . 2173)) nil (26471 24176 746185 999000) 0 nil])
([nil nil ((#("
    def open_settings(self):
        # Placeholder for settings functionality
        self.content.setText(\"Settings page placeholder\")

                    " 0 5 (fontified t) 5 8 (face py-def-class-face fontified t) 8 9 (fontified t) 9 22 (face py-def-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 27 (face py-object-reference-face fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 38 (fontified t) 38 79 (face font-lock-comment-face fontified t) 79 87 (fontified t) 87 91 (face py-object-reference-face fontified t) 91 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-1-face) fontified t) 108 109 (face font-lock-string-face fontified t) 109 134 (face font-lock-string-face fontified t) 134 135 (face font-lock-string-face fontified t) 135 136 (face (rainbow-delimiters-depth-1-face) fontified t) 136 137 (fontified t rear-nonsticky t) 137 138 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12)) 138 158 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . 2174) (undo-tree-id1673 . -158) (undo-tree-id1674 . -137) (t 26471 24176 871261 379000)) nil (26471 24226 366515 540000) 0 nil])
([nil nil ((2174 . 2178) (#("                 " 0 17 (fontified t match-data (0 12 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12))) . 2174)) nil (26471 24226 366506 402000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3056 . 3057) (nil fontified nil 2178 . 3057) (2178 . 3057)) nil (26471 24226 366502 72000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -2174) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -3) (undo-tree-id1858 . -3) (undo-tree-id1859 . -3) (undo-tree-id1860 . -3) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) (undo-tree-id1880 . -3) (undo-tree-id1881 . -3) (undo-tree-id1882 . -3) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (undo-tree-id1885 . -3) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -3) (undo-tree-id1889 . -3) (undo-tree-id1890 . -3) (undo-tree-id1891 . -3) (undo-tree-id1892 . -3) (undo-tree-id1893 . -3) (undo-tree-id1894 . -3) (undo-tree-id1895 . -3) (undo-tree-id1896 . -3) (undo-tree-id1897 . -3) (undo-tree-id1898 . -3) (undo-tree-id1899 . -3) (undo-tree-id1900 . -3) (undo-tree-id1901 . -3) (undo-tree-id1902 . -3) (undo-tree-id1903 . -3) (undo-tree-id1904 . -3) (undo-tree-id1905 . -3) (undo-tree-id1906 . -3) (undo-tree-id1907 . -3) (undo-tree-id1908 . -3) (undo-tree-id1909 . -3) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) (undo-tree-id1912 . -3) (undo-tree-id1913 . -3) (undo-tree-id1914 . -3) (undo-tree-id1915 . -3) (undo-tree-id1916 . -3) (undo-tree-id1917 . -3) (undo-tree-id1918 . -3) 2177 (t 26471 24226 493781 614000)) nil (26471 24233 342300 344000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2173) (undo-tree-id1734 . -1) (undo-tree-id1735 . 1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) 2174) nil (26471 24233 342236 291000) 0 nil])
([nil nil ((2174 . 2178) (#(" " 0 1 (fontified nil)) . 2174) (undo-tree-id1732 . 1) (undo-tree-id1733 . -1) (2173 . 2174)) nil (26471 24233 342045 76000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2174) (undo-tree-id1675 . -4) (undo-tree-id1676 . -4) (undo-tree-id1677 . -4) (undo-tree-id1678 . -4) (undo-tree-id1679 . -4) (undo-tree-id1680 . -4) (undo-tree-id1681 . -4) (undo-tree-id1682 . -4) (undo-tree-id1683 . -4) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) (undo-tree-id1691 . -4) (undo-tree-id1692 . -4) (undo-tree-id1693 . -4) (undo-tree-id1694 . -4) (undo-tree-id1695 . -4) (undo-tree-id1696 . -4) (undo-tree-id1697 . -4) (undo-tree-id1698 . -4) (undo-tree-id1699 . -4) (undo-tree-id1700 . -4) (undo-tree-id1701 . -4) (undo-tree-id1702 . -4) (undo-tree-id1703 . -4) (undo-tree-id1704 . -4) (undo-tree-id1705 . -4) (undo-tree-id1706 . -4) (undo-tree-id1707 . -4) (undo-tree-id1708 . -4) (undo-tree-id1709 . -4) (undo-tree-id1710 . -4) (undo-tree-id1711 . -4) (undo-tree-id1712 . -4) (undo-tree-id1713 . -4) (undo-tree-id1714 . -4) (undo-tree-id1715 . -4) (undo-tree-id1716 . -4) (undo-tree-id1717 . -4) (undo-tree-id1718 . -4) (undo-tree-id1719 . -4) (undo-tree-id1720 . -4) (undo-tree-id1721 . -4) (undo-tree-id1722 . -4) (undo-tree-id1723 . -4) (undo-tree-id1724 . -4) (undo-tree-id1725 . -4) (undo-tree-id1726 . -4) (undo-tree-id1727 . -4) (undo-tree-id1728 . -4) (undo-tree-id1729 . -4) (undo-tree-id1730 . -4) (undo-tree-id1731 . -4) 2178) nil (26471 24233 342039 822000) 0 nil])
([nil nil ((2625 . 2629) (t 26471 24233 356849 942000)) nil (26473 41046 498969 829000) 0 nil])
([nil nil ((2650 . 2651)) nil (26473 41046 498968 802000) 0 nil])
([nil nil ((2653 . 2655)) nil (26473 41046 498968 52000) 0 nil])
([nil nil ((2655 . 2657)) nil (26473 41050 437602 578000) 0 nil])
([nil nil ((2678 . 2679)) nil (26473 41056 384876 321000) 0 nil] [nil nil ((#("i" 0 1 (fontified t)) . -2653) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("n" 0 1 (fontified t)) . -2654) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("t" 0 1 (fontified t)) . -2655) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2656) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 2657) ((2653 . 2657)) (26473 41049 964157 305000) 0 nil])
([nil nil ((2527 . 2531) (t 26473 41056 545462 395000)) nil (26473 41078 433457 918000) 0 nil])
([nil nil ((2653 . 2659)) ((#("floor(" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2653) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6)) (26473 41049 588113 770000) 0 nil])
([nil nil ((2569 . 2570)) nil (26473 41078 433456 927000) 0 nil])
([nil nil ((2680 . 2681)) ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2680) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1)) (26473 41049 95438 272000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2658) (undo-tree-id123 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -2659) (undo-tree-id124 . -1) (#("t" 0 1 (face py-builtins-face fontified t)) . -2660) (undo-tree-id125 . -1) 2661) nil (26473 41078 433455 54000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -2653) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("l" 0 1 (fontified t)) . -2654) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t)) . -2655) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (fontified t)) . -2656) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("r" 0 1 (fontified t)) . -2657) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2658) (undo-tree-id20 . -1) 2659) ((2653 . 2659)) (26473 41048 586507 471000) 0 nil])
([nil nil ((2658 . 2661)) nil (26473 41078 433440 871000) 0 nil])
([nil nil ((2653 . 2654)) ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2653)) (26473 41048 205039 190000) 0 nil])
([nil nil ((#("class CircleWidget(QWidget):
    \"\"\"Widget for drawing a placeholder circle.\"\"\"
    def paintEvent(self, event):
        painter = QPainter(self)
        painter.setPen(QPen(Qt.GlobalColor.black, 2))
        painter.setBrush(QBrush(Qt.GlobalColor.lightGray))
        # Draw a circle in the center of the widget
        rect = self.rect()
        size = int(min(rect.width(), rect.height()) * 0.8)
        center = rect.center()
        painter.drawEllipse(int(center.x() - size / 2), int(center.y() - size / 2), size, size)


class RectangleWidget(QWidget):
    \"\"\"Widget for drawing a placeholder rectangle.\"\"\"
    def paintEvent(self, event):
        painter = QPainter(self)
        painter.setPen(QPen(Qt.GlobalColor.black, 2))
        painter.setBrush(QBrush(Qt.GlobalColor.lightGray))
        # Draw a rectangle filling the widget
        rect = self.rect()
        painter.drawRect(rect)" 0 5 (face py-def-class-face fontified t) 5 6 (fontified t) 6 18 (face py-class-name-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 33 (fontified t) 33 34 (face font-lock-string-face syntax-table (15) fontified t) 34 35 (face font-lock-string-face syntax-table nil fontified t) 35 36 (face font-lock-string-face syntax-table nil fontified t) 36 76 (face font-lock-string-face fontified t) 76 77 (face font-lock-string-face syntax-table nil fontified t) 77 78 (face font-lock-string-face syntax-table nil fontified t) 78 79 (face font-lock-string-face syntax-table (15) fontified t) 79 84 (fontified t) 84 87 (face py-def-class-face fontified t) 87 88 (fontified t) 88 98 (face py-def-face fontified t) 98 99 (face (rainbow-delimiters-depth-1-face) fontified t) 99 103 (face py-object-reference-face fontified t) 103 110 (fontified t) 110 111 (face (rainbow-delimiters-depth-1-face) fontified t) 111 121 (fontified t) 121 128 (face py-variable-name-face fontified t) 128 129 (fontified t) 129 130 (face font-lock-operator-face fontified t) 130 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-1-face) fontified t) 140 144 (face py-object-reference-face fontified t) 144 145 (face (rainbow-delimiters-depth-1-face) fontified t) 145 168 (fontified t) 168 169 (face (rainbow-delimiters-depth-1-face) fontified t) 169 173 (fontified t) 173 174 (face (rainbow-delimiters-depth-2-face) fontified t) 174 196 (fontified t) 196 197 (face py-number-face fontified t) 197 198 (face (rainbow-delimiters-depth-2-face) fontified t) 198 199 (face (rainbow-delimiters-depth-1-face) fontified t) 199 224 (fontified t) 224 225 (face (rainbow-delimiters-depth-1-face) fontified t) 225 231 (fontified t) 231 232 (face (rainbow-delimiters-depth-2-face) fontified t) 232 256 (fontified t) 256 257 (face (rainbow-delimiters-depth-2-face) fontified t) 257 258 (face (rainbow-delimiters-depth-1-face) fontified t) 258 267 (fontified t) 267 311 (face font-lock-comment-face fontified t) 311 319 (fontified t) 319 323 (face py-variable-name-face fontified t) 323 324 (fontified t) 324 325 (face font-lock-operator-face fontified t) 325 326 (fontified t) 326 330 (face py-object-reference-face fontified t) 330 335 (fontified t) 335 336 (face (rainbow-delimiters-depth-1-face) fontified t) 336 337 (face (rainbow-delimiters-depth-1-face) fontified t) 337 338 (fontified t) 338 346 (fontified t) 346 350 (face py-variable-name-face fontified t) 350 351 (fontified t) 351 352 (face font-lock-operator-face fontified t) 352 353 (fontified t) 353 356 (face py-builtins-face fontified t) 356 357 (face (rainbow-delimiters-depth-1-face) fontified t) 357 360 (face py-builtins-face fontified t) 360 361 (face (rainbow-delimiters-depth-2-face) fontified t) 361 371 (fontified t) 371 372 (face (rainbow-delimiters-depth-3-face) fontified t) 372 373 (face (rainbow-delimiters-depth-3-face) fontified t) 373 386 (fontified t) 386 387 (face (rainbow-delimiters-depth-3-face) fontified t) 387 388 (face (rainbow-delimiters-depth-3-face) fontified t) 388 389 (face (rainbow-delimiters-depth-2-face) fontified t) 389 392 (fontified t) 392 393 (face py-number-face fontified t) 393 394 (fontified t) 394 395 (face py-number-face fontified t) 395 396 (face (rainbow-delimiters-depth-1-face) fontified t) 396 397 (fontified t) 397 405 (fontified t) 405 411 (face py-variable-name-face fontified t) 411 412 (fontified t) 412 413 (face font-lock-operator-face fontified t) 413 425 (fontified t) 425 426 (face (rainbow-delimiters-depth-1-face) fontified t) 426 427 (face (rainbow-delimiters-depth-1-face) fontified t) 427 428 (fontified t) 428 455 (fontified t) 455 456 (face (rainbow-delimiters-depth-1-face) fontified t) 456 459 (face py-builtins-face fontified t) 459 460 (face (rainbow-delimiters-depth-2-face) fontified t) 460 468 (fontified t) 468 469 (face (rainbow-delimiters-depth-3-face) fontified t) 469 470 (face (rainbow-delimiters-depth-3-face) fontified t) 470 480 (fontified t) 480 481 (face py-number-face fontified t) 481 482 (face (rainbow-delimiters-depth-2-face) fontified t) 482 484 (fontified t) 484 487 (face py-builtins-face fontified t) 487 488 (face (rainbow-delimiters-depth-2-face) fontified t) 488 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-3-face) fontified t) 497 498 (face (rainbow-delimiters-depth-3-face) fontified t) 498 508 (fontified t) 508 509 (face py-number-face fontified t) 509 510 (face (rainbow-delimiters-depth-2-face) fontified t) 510 522 (fontified t) 522 523 (face (rainbow-delimiters-depth-1-face) fontified t) 523 524 (fontified t) 524 526 (fontified t) 526 531 (face py-def-class-face fontified t) 531 532 (fontified t) 532 547 (face py-class-name-face fontified t) 547 548 (face (rainbow-delimiters-depth-1-face) fontified t) 548 555 (fontified t) 555 556 (face (rainbow-delimiters-depth-1-face) fontified t) 556 562 (fontified t) 562 563 (face font-lock-string-face syntax-table (15) fontified t) 563 564 (face font-lock-string-face syntax-table nil fontified t) 564 565 (face font-lock-string-face syntax-table nil fontified t) 565 608 (face font-lock-string-face fontified t) 608 609 (face font-lock-string-face syntax-table nil fontified t) 609 610 (face font-lock-string-face syntax-table nil fontified t) 610 611 (face font-lock-string-face syntax-table (15) fontified t) 611 616 (fontified t) 616 619 (face py-def-class-face fontified t) 619 620 (fontified t) 620 630 (face py-def-face fontified t) 630 631 (face (rainbow-delimiters-depth-1-face) fontified t) 631 635 (face py-object-reference-face fontified t) 635 642 (fontified t) 642 643 (face (rainbow-delimiters-depth-1-face) fontified t) 643 653 (fontified t) 653 660 (face py-variable-name-face fontified t) 660 661 (fontified t) 661 662 (face font-lock-operator-face fontified t) 662 671 (fontified t) 671 672 (face (rainbow-delimiters-depth-1-face) fontified t) 672 676 (face py-object-reference-face fontified t) 676 677 (face (rainbow-delimiters-depth-1-face) fontified t) 677 700 (fontified t) 700 701 (face (rainbow-delimiters-depth-1-face) fontified t) 701 705 (fontified t) 705 706 (face (rainbow-delimiters-depth-2-face) fontified t) 706 728 (fontified t) 728 729 (face py-number-face fontified t) 729 730 (face (rainbow-delimiters-depth-2-face) fontified t) 730 731 (face (rainbow-delimiters-depth-1-face) fontified t) 731 756 (fontified t) 756 757 (face (rainbow-delimiters-depth-1-face) fontified t) 757 763 (fontified t) 763 764 (face (rainbow-delimiters-depth-2-face) fontified t) 764 788 (fontified t) 788 789 (face (rainbow-delimiters-depth-2-face) fontified t) 789 790 (face (rainbow-delimiters-depth-1-face) fontified t) 790 799 (fontified t) 799 837 (face font-lock-comment-face fontified t) 837 845 (fontified t) 845 849 (face py-variable-name-face fontified t) 849 850 (fontified t) 850 851 (face font-lock-operator-face fontified t) 851 852 (fontified t) 852 855 (face py-object-reference-face fontified t) 855 856 (face py-object-reference-face fontified t) 856 861 (fontified t) 861 862 (face (rainbow-delimiters-depth-1-face) fontified t) 862 863 (face (rainbow-delimiters-depth-1-face) fontified t) 863 864 (fontified t) 864 888 (fontified t) 888 889 (face (rainbow-delimiters-depth-1-face) fontified t) 889 893 (fontified t) 893 894 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2174) (undo-tree-id146 . -894) (undo-tree-id147 . -456) (undo-tree-id148 . -484) (undo-tree-id149 . -487) (undo-tree-id150 . -487) (undo-tree-id151 . -353) (undo-tree-id152 . -357) (undo-tree-id153 . 407) (undo-tree-id154 . -456) (undo-tree-id155 . -487) (t 26473 41078 558429 831000)) nil (26473 41133 26077 959000) 0 nil])
([nil nil ((2676 . 2677)) ((#("." 0 1 (fontified t)) . 2676) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1)) (26473 41047 809401 422000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2172) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("
" 0 1 (fontified t)) . -2173) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) 2174) nil (26473 41133 26070 956000) 0 nil])
([nil nil ((2677 . 2684)) ((#("floor()" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-2-face) fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2677) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -1) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5)) (26473 41046 498918 900000) 0 nil])
([nil nil ((#("        column_placeholder = RectangleWidget()" 0 8 (fontified t) 8 26 (face py-variable-name-face fontified t) 26 27 (fontified t) 27 28 (face font-lock-operator-face fontified t) 28 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2037)) nil (26473 41133 26052 660000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 2037)) nil (26473 41133 26052 188000) 0 nil])
([nil nil ((#("        home_layout.addWidget(column_placeholder, stretch=1)" 0 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 58 (fontified t) 58 59 (face py-number-face fontified t) 59 60 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2037)) nil (26473 41133 26051 730000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2037)) nil (26473 41133 26051 231000) 0 nil])
([nil nil ((#("        # Right side: Column (rectangle)" 0 8 (fontified t) 8 40 (face font-lock-comment-face fontified t)) . 1996)) nil (26473 41133 26050 829000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1996)) nil (26473 41133 26050 416000) 0 nil])
([nil nil ((#("        # Placeholder for the pie chart (circle)" 0 8 (fontified t) 8 48 (face font-lock-comment-face fontified t)) . 1764)) nil (26473 41133 26049 927000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1764)) nil (26473 41133 26049 393000) 0 nil])
([nil nil ((#("        pie_chart_placeholder = CircleWidget()" 0 8 (fontified t) 8 29 (face py-variable-name-face fontified t) 29 30 (fontified t) 30 31 (face font-lock-operator-face fontified t) 31 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-1-face) fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1764)) nil (26473 41133 26048 782000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1764)) nil (26473 41133 26047 755000) 0 nil])
([nil nil ((#("        left_layout.addWidget(pie_chart_placeholder, alignment=Qt.AlignmentFlag.AlignLeft)" 0 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1764)) nil (26473 41133 26043 280000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1764) (undo-tree-id159 . -1) (t 26473 41133 151340 385000)) nil (26473 41135 5347 775000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1764) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1)) nil (26473 41135 5343 277000) 0 nil])
([nil nil ((810 . 811) (t 26473 41135 131336 952000)) nil (26503 62636 225773 899000) 0 nil])
([nil current ((#("x" 0 1 (face font-lock-comment-face fontified t)) . -810) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 811) nil (26503 62636 225769 594000) 0 nil])
nil

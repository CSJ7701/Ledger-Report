(undo-tree-save-format-version . 1)
"7a1c26a3c2e773c5787f955daa203422589ec3ff"
[nil nil nil nil (26432 45676 256785 703000) 0 nil]
([nil nil ((1 . 16) (t 26432 45202 996700 955000)) nil (26432 45676 256784 951000) 0 nil])
([nil nil ((8 . 16) (#("argp" 0 4 (fontified nil)) . -8) (8 . 12) (#("argparse" 0 8 (fontified t)) . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) 16) nil (26432 45676 256784 190000) 0 nil])
([nil nil ((16 . 17)) nil (26432 45676 256782 226000) 0 nil])
([nil nil ((17 . 26)) nil (26432 45676 256781 976000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -22) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("e" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -23) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("d" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -24) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("f" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -25) (undo-tree-id128 . -1) 26) nil (26432 45676 256780 643000) 0 nil])
([nil nil ((22 . 43)) nil (26432 45676 256775 514000) 0 nil])
([nil nil ((43 . 64)) nil (26432 45676 256775 63000) 0 nil])
([nil nil ((64 . 66)) nil (26432 45676 256774 652000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -62) (undo-tree-id112 . -1) (#("n" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -63) (undo-tree-id113 . -1) (#("a" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -64) (undo-tree-id114 . -1) (#("l" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -65) (undo-tree-id115 . -1) 66) nil (26432 45676 256773 710000) 0 nil])
([nil nil ((62 . 72)) nil (26432 45676 256769 773000) 0 nil])
([nil nil ((72 . 73)) nil (26432 45676 256769 102000) 0 nil])
([nil nil ((73 . 91)) nil (26432 45676 256768 360000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -90) (undo-tree-id111 . -1) 91) nil (26432 45676 256767 458000) 0 nil])
([nil nil ((90 . 91)) nil (26432 45676 256766 256000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 35)) nil (26432 45676 256765 334000) 0 nil])
([nil nil ((90 . 96)) nil (26432 45676 256764 343000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -90) (undo-tree-id105 . -1) (#("e" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -91) (undo-tree-id106 . -1) (#("p" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -92) (undo-tree-id107 . -1) (#("o" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -93) (undo-tree-id108 . -1) (#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -94) (undo-tree-id109 . -1) (#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -95) (undo-tree-id110 . -1) 96) nil (26432 45676 256762 730000) 0 nil])
([nil nil ((90 . 111)) nil (26432 45676 256758 822000) 0 nil])
([nil nil ((111 . 115)) nil (26432 45676 256757 971000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 114) (undo-tree-id104 . -1) 115) nil (26432 45676 256757 209000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -108) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("m" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -109) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("p" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -110) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("o" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -111) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -112) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("t" 0 1 (face py-import-from-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -113) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) 114) nil (26432 45676 256754 895000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 107) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 108) nil (26432 45676 256729 187000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -97) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("g" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -98) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("e" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -99) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("n" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -100) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -101) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -102) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("a" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -103) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -104) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("o" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -105) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -106) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 107) nil (26432 45676 256725 279000) 0 nil])
([nil nil ((97 . 98)) nil (26432 45676 256676 858000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -97) (undo-tree-id24 . -1) 98) nil (26432 45676 256675 786000) 0 nil])
([nil nil ((97 . 118)) nil (26432 45676 256674 494000) 0 nil])
([nil nil ((118 . 125)) nil (26432 45676 256673 712000) 0 nil])
([nil nil ((125 . 129)) nil (26432 45676 256672 961000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -128) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 129) nil (26432 45676 256671 368000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 127) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 128) nil (26432 45676 256668 843000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -126) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 127) nil (26432 45676 256666 379000) 0 nil])
([nil nil ((126 . 127)) nil (26432 45676 256663 613000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -126) (undo-tree-id9 . -1) 127) nil (26432 45676 256662 531000) 0 nil])
([nil nil ((126 . 134)) nil (26432 45676 256661 199000) 0 nil])
([nil nil ((134 . 136)) nil (26432 45676 256660 427000) 0 nil])
([nil nil ((136 . 146)) nil (26432 45676 256659 606000) 0 nil])
([nil nil ((146 . 147)) nil (26432 45676 256658 724000) 0 nil])
([nil nil ((147 . 152)) nil (26432 45676 256657 392000) 0 nil])
([nil nil ((152 . 173)) nil (26432 45676 256656 630000) 0 nil])
([nil nil ((173 . 184)) nil (26432 45676 256655 829000) 0 nil])
([nil nil ((#("    parser = argparse.ArgumentParser" 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 4 10 (face py-variable-name-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 10 11 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 11 12 (face font-lock-operator-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 12 36 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 148) (undo-tree-id3 . -22) (undo-tree-id4 . -36) (undo-tree-id5 . -36) (undo-tree-id6 . -36) (undo-tree-id7 . -36) (undo-tree-id8 . -36)) nil (26432 45676 256654 737000) 0 nil])
([nil nil ((148 . 152)) nil (26432 45676 256650 419000) 0 nil])
([nil nil ((nil rear-nonsticky nil 649 . 650) (nil fontified nil 152 . 650) (152 . 650)) nil (26432 45676 256649 397000) 0 nil])
([nil nil ((148 . 152) (#("        " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 4 8 (fontified t)) . 148) (undo-tree-id0 . -4) (undo-tree-id1 . -7) (undo-tree-id2 . -7) 155) nil (26432 45676 256647 904000) 0 nil])
([nil nil ((646 . 647) 152) nil (26432 45676 256616 294000) 0 nil])
([nil nil ((601 . 602) (t 26509 4415 859078 519000)) nil (26573 51086 997560 692000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -77) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("e" 0 1 (fontified t)) . -78) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("d" 0 1 (fontified t)) . -79) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("g" 0 1 (fontified t)) . -80) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("e" 0 1 (fontified t)) . -81) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("r" 0 1 (fontified t)) . -82) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("_" 0 1 (fontified t)) . -83) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t)) . -84) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("e" 0 1 (fontified t)) . -85) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("p" 0 1 (fontified t)) . -86) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("o" 0 1 (fontified t)) . -87) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (fontified t)) . -88) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("t" 0 1 (fontified t)) . -89) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 90 (t 26573 51087 117974 62000)) nil (26573 51316 460926 971000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 77)) nil (26573 51316 460895 833000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 22) (#("p" 0 1 (fontified t)) . 22) (#("e" 0 1 (fontified t)) . 22) (#("r" 0 1 (fontified t)) . 22) (#("_" 0 1 (fontified t)) . 22) (#("r" 0 1 (fontified t)) . 22) (#("e" 0 1 (fontified t)) . 22) (#("g" 0 1 (fontified t)) . 22) (#("d" 0 1 (fontified t)) . 22) (#("e" 0 1 (fontified t)) . 22) (#("l" 0 1 (fontified t)) . 22)) nil (26573 51316 460893 711000) 0 nil])
([nil current ((#("." 0 1 (fontified t)) . 22) (#("t" 0 1 (fontified t)) . 22) (#("r" 0 1 (fontified t)) . 22)) nil (26573 51316 460887 378000) 0 nil])
nil

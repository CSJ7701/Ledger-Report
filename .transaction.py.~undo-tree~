(undo-tree-save-format-version . 1)
"72a1a92f99e7cf6b7dbbd64a233e4f17c757d6bc"
[nil nil nil nil (26284 61368 788051 614000) 0 nil]
([nil nil ((1 . 12) (t 26284 61206 191478 52000)) nil (26284 61368 788050 792000) 0 nil])
([nil nil ((#("a" 0 1 (face py-class-name-face fontified t)) . -9) (undo-tree-id6 . -1) (#("n" 0 1 (face py-class-name-face fontified t)) . -10) (undo-tree-id7 . -1) (#("s" 0 1 (face py-class-name-face fontified t)) . -11) (undo-tree-id8 . -1) 12) nil (26284 61368 788049 684000) 0 nil])
([nil nil ((#("class Tr" 0 5 (face py-def-class-face fontified t) 5 6 (fontified t) 6 8 (face py-class-name-face fontified t)) . 1) (undo-tree-id4 . -4) (undo-tree-id5 . -8)) nil (26284 61368 788046 930000) 0 nil])
([nil nil ((1 . 11)) nil (26284 61368 788044 628000) 0 nil])
([nil nil ((8 . 11) (#("sys" 0 3 (fontified nil)) . -8) (8 . 11) (#("sys" 0 3 (fontified t)) . -8) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) 11) nil (26284 61368 788043 256000) 0 nil])
([nil nil ((11 . 13)) nil (26284 61368 788039 224000) 0 nil])
([nil nil ((13 . 34)) nil (26284 61368 788038 499000) 0 nil])
([nil nil ((34 . 39)) nil (26284 61368 788037 729000) 0 nil])
([nil nil ((39 . 43)) nil (26284 61368 788036 975000) 0 nil])
([nil nil ((43 . 49)) nil (26284 61368 788036 289000) 0 nil])
([nil nil ((49 . 55)) nil (26284 61368 788035 517000) 0 nil])
([nil nil ((55 . 58)) nil (26284 61368 788034 737000) 0 nil])
([nil nil ((58 . 63)) nil (26284 61368 788034 42000) 0 nil])
([nil nil ((63 . 74)) nil (26284 61368 788033 27000) 0 nil])
([nil nil ((74 . 91)) nil (26284 61368 788032 387000) 0 nil])
([nil nil ((91 . 97)) nil (26284 61368 788031 337000) 0 nil])
([nil nil ((97 . 98)) nil (26284 61368 788030 682000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -97) (undo-tree-id0 . -1) 98) nil (26284 61368 788029 257000) 0 nil])
([nil nil ((30 . 31)) nil (26284 61368 788008 742000) 0 nil])
([nil nil ((31 . 36)) nil (26284 61368 788007 835000) 0 nil])
([nil nil ((36 . 44)) nil (26284 61368 788007 235000) 0 nil])
([nil nil ((111 . 112)) nil (26284 61368 788006 755000) 0 nil])
([nil nil ((112 . 121)) nil (26284 61368 788005 773000) 0 nil])
([nil nil ((40 . 42)) nil (26284 61368 788005 53000) 0 nil])
([nil nil ((46 . 48)) nil (26284 61368 788003 590000) 0 nil])
([nil nil ((125 . 126) 48) nil (26284 61368 787997 837000) 0 nil])
([nil nil ((125 . 130) (t 26284 61368 908261 687000)) nil (26284 61540 434485 129000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -129) (undo-tree-id178 . -1) 130) nil (26284 61540 434484 333000) 0 nil])
([nil nil ((129 . 137)) nil (26284 61540 434482 942000) 0 nil])
([nil nil ((137 . 140)) nil (26284 61540 434482 542000) 0 nil])
([nil nil ((140 . 149)) nil (26284 61540 434482 142000) 0 nil])
([nil nil ((12 . 13)) nil (26284 61540 434481 657000) 0 nil])
([nil nil ((12 . 27)) nil (26284 61540 434480 811000) 0 nil])
([nil nil ((#("import datetime" 0 6 (face py-import-from-face fontified t match-data (0 3 0 1 1 2 2 3)) 6 15 (fontified t match-data (0 3 0 1 1 2 2 3))) . 12) (undo-tree-id176 . -15) (undo-tree-id177 . -15)) nil (26284 61540 434480 184000) 0 nil])
([nil nil ((12 . 19)) nil (26284 61540 434478 908000) 0 nil])
([nil nil ((19 . 40)) nil (26284 61540 434478 286000) 0 nil])
([nil nil ((40 . 41)) nil (26284 61540 434477 860000) 0 nil])
([nil nil ((33 . 41) (#("dat" 0 3 (fontified nil)) . -33) (33 . 36) (#("datetime" 0 8 (fontified t match-data (0 3 0 1 1 2 2 3))) . -33) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (undo-tree-id175 . -8) 41) nil (26284 61540 434476 832000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -165) (undo-tree-id168 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -166) (undo-tree-id169 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -167) (undo-tree-id170 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -168) (undo-tree-id171 . -1) (#("," 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id172 . -1) 170) nil (26284 61540 434473 970000) 0 nil])
([nil nil ((165 . 172)) nil (26284 61540 434470 519000) 0 nil])
([nil nil ((172 . 174)) nil (26284 61540 434470 85000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -168) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -170) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("m" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -171) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -172) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -173) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 174) nil (26284 61540 434468 640000) 0 nil])
([nil nil ((168 . 171)) nil (26284 61540 434460 8000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -165) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -166) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -167) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -168) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("f" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id148 . -1) (#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -170) (undo-tree-id149 . -1) 171) nil (26284 61540 434458 591000) 0 nil])
([nil nil ((165 . 167)) nil (26284 61540 434448 814000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -165) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -166) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 167) nil (26284 61540 434448 0) 0 nil])
([nil nil ((12 . 13)) nil (26284 61540 434445 64000) 0 nil])
([nil nil ((#("kfrom datetime import datetime" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3)) 1 5 (fontified t match-data (0 3 0 1 1 2 2 3)) 5 15 (fontified t match-data (0 3 0 1 1 2 2 3)) 15 21 (face py-import-from-face fontified t match-data (0 3 0 1 1 2 2 3)) 21 22 (fontified t match-data (0 3 0 1 1 2 2 3)) 22 30 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 12) (undo-tree-id128 . -1) (undo-tree-id129 . -1)) nil (26284 61540 434444 535000) 0 nil])
([nil nil ((12 . 27)) nil (26284 61540 434443 256000) 0 nil])
([nil nil ((19 . 27) (#("date" 0 4 (fontified nil)) . -19) (19 . 23) (#("datetime" 0 8 (fontified t match-data (0 3 0 1 1 2 2 3))) . -19) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) 27) nil (26284 61540 434442 477000) 0 nil])
([nil nil ((151 . 164)) nil (26284 61540 434439 557000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -160) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -161) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -162) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -163) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 164) nil (26284 61540 434438 313000) 0 nil])
([nil nil ((160 . 164)) nil (26284 61540 434431 382000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -160) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -161) (undo-tree-id110 . -1) (#("o" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -162) (undo-tree-id111 . -1) (#("m" 0 1 (face py-import-from-face fontified t match-data (0 3 0 1 1 2 2 3))) . -163) (undo-tree-id112 . -1) 164) nil (26284 61540 434430 339000) 0 nil])
([nil nil ((160 . 163)) nil (26284 61540 434427 267000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -160) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -161) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -162) (undo-tree-id106 . -1) 163) nil (26284 61540 434425 929000) 0 nil])
([nil nil ((160 . 171)) nil (26284 61540 434421 877000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -170) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 171) nil (26284 61540 434421 101000) 0 nil])
([nil nil ((169 . 174)) nil (26284 61540 434268 786000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -170) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -171) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -172) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -173) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 174) nil (26284 61540 434267 633000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -160) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -161) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -162) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -163) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -164) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -165) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("m" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -166) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -167) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -168) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 169) nil (26284 61540 434258 815000) 0 nil])
([nil nil ((160 . 169)) nil (26284 61540 434245 216000) 0 nil])
([nil nil ((169 . 174)) nil (26284 61540 434244 572000) 0 nil])
([nil nil ((12 . 26)) nil (26284 61540 434243 715000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -167) (undo-tree-id31 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -168) (undo-tree-id32 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id33 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -170) (undo-tree-id34 . -1) (#("m" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -171) (undo-tree-id35 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -172) (undo-tree-id36 . -1) (#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -173) (undo-tree-id37 . -1) (#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -174) (undo-tree-id38 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -175) (undo-tree-id39 . -1) (#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -176) (undo-tree-id40 . -1) (#("p" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -177) (undo-tree-id41 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -178) (undo-tree-id42 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -179) (undo-tree-id43 . -1) (#("m" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -180) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -181) (undo-tree-id45 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3))) . -182) (undo-tree-id46 . -1) (#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -183) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -184) (undo-tree-id48 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -185) (undo-tree-id49 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -186) (undo-tree-id50 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 3 0 1 1 2 2 3))) . -187) (undo-tree-id51 . -1) 188) nil (26284 61540 434240 779000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -165) (undo-tree-id29 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -166) (undo-tree-id30 . -1) 167) nil (26284 61540 434228 847000) 0 nil])
([nil nil ((165 . 174)) nil (26284 61540 434227 111000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -173) (undo-tree-id28 . -1) 174) nil (26284 61540 434226 98000) 0 nil])
([nil nil ((173 . 174)) nil (26284 61540 434224 686000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -165) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -166) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("r" 0 1 (face py-builtins-face fontified t match-data (0 3 0 1 1 2 2 3))) . -167) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("p" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -168) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -169) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("i" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -170) (undo-tree-id24 . -1) (#("m" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -171) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -172) (undo-tree-id26 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t match-data (0 3 0 1 1 2 2 3))) . -173) (undo-tree-id27 . -1) 174) nil (26284 61540 434222 20000) 0 nil])
([nil nil ((165 . 186)) nil (26284 61540 434203 455000) 0 nil])
([nil nil ((186 . 187)) nil (26284 61540 434202 49000) 0 nil])
([nil nil ((187 . 188)) nil (26284 61540 434196 980000) 0 nil])
([nil nil ((187 . 190) (t 26284 61540 550846 843000)) nil (26284 61717 893034 620000) 0 nil])
([nil nil ((190 . 201)) nil (26284 61717 893033 847000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -200) (undo-tree-id357 . -1) (undo-tree-id358 . -1) 201) nil (26284 61717 893033 11000) 0 nil])
([nil nil ((200 . 201)) nil (26284 61717 893031 168000) 0 nil])
([nil nil ((202 . 211)) nil (26284 61717 893030 596000) 0 nil])
([nil nil ((211 . 225)) nil (26284 61717 893029 594000) 0 nil])
([nil nil ((221 . 225) (#("cod" 0 3 (fontified nil)) . -221) (221 . 224) (#("code" 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -221) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) 225) nil (26284 61717 893028 538000) 0 nil])
([nil nil ((225 . 234)) nil (26284 61717 893025 925000) 0 nil])
([nil nil ((234 . 238)) nil (26284 61717 893025 405000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -237) (undo-tree-id353 . -1) 238) nil (26284 61717 893024 887000) 0 nil])
([nil nil ((237 . 242)) nil (26284 61717 893023 652000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -239) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -240) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -241) (undo-tree-id352 . -1) 242) nil (26284 61717 893022 659000) 0 nil])
([nil nil ((239 . 245)) nil (26284 61717 893019 20000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -244) (undo-tree-id345 . -1) 245) nil (26284 61717 893017 954000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -97) (undo-tree-id341 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -98) (undo-tree-id342 . -1) (#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -99) (undo-tree-id343 . -1) (#("c" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -100) (undo-tree-id344 . -1) 101) nil (26284 61717 893016 433000) 0 nil])
([nil nil ((97 . 99)) nil (26284 61717 893013 757000) 0 nil])
([nil nil ((99 . 102)) nil (26284 61717 893013 319000) 0 nil])
([nil nil ((245 . 251)) nil (26284 61717 893012 878000) 0 nil])
([nil nil ((246 . 251) (#("pay" 0 3 (fontified nil)) . -246) (246 . 249) (#("payee" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -246) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) 251) nil (26284 61717 893011 859000) 0 nil])
([nil nil ((251 . 260)) nil (26284 61717 893009 488000) 0 nil])
([nil nil ((260 . 273)) nil (26284 61717 893009 41000) 0 nil])
([nil nil ((276 . 284) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 275) (undo-tree-id336 . -8) (275 . 284) (#("        " 0 8 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 274) (undo-tree-id337 . -8) (273 . 283)) nil (26284 61717 893008 50000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 280) (undo-tree-id335 . -4) 284) nil (26284 61717 893006 289000) 0 nil])
([nil nil ((280 . 283)) nil (26284 61717 893005 433000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -282) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 283) nil (26284 61717 893004 728000) 0 nil])
([nil nil ((282 . 302)) nil (26284 61717 893002 863000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -301) (undo-tree-id331 . -1) 302) nil (26284 61717 893002 49000) 0 nil])
([nil nil ((301 . 302)) nil (26284 61717 893001 69000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -301) (undo-tree-id330 . -1) 302) nil (26284 61717 893000 306000) 0 nil])
([nil nil ((301 . 315)) nil (26284 61717 892999 432000) 0 nil])
([nil nil ((315 . 316)) nil (26284 61717 892998 998000) 0 nil])
([nil nil ((316 . 317)) nil (26284 61717 892998 208000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 316) (undo-tree-id329 . -1) 317) nil (26284 61717 892997 685000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -315) (undo-tree-id328 . -1) 316) nil (26284 61717 892996 344000) 0 nil])
([nil nil ((315 . 317)) nil (26284 61717 892995 272000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -315) (undo-tree-id326 . -1) (#(">" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -316) (undo-tree-id327 . -1) 317) nil (26284 61717 892994 183000) 0 nil])
([nil nil ((315 . 316)) nil (26284 61717 892991 896000) 0 nil])
([nil nil ((316 . 335)) nil (26284 61717 892991 339000) 0 nil])
([nil nil ((335 . 336)) nil (26284 61717 892990 766000) 0 nil])
([nil nil ((336 . 345)) nil (26284 61717 892990 177000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -328) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -329) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("r" 0 1 (face py-builtins-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -330) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -331) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -332) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#("g" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -333) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) 334) nil (26284 61717 892988 505000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 327) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 328) nil (26284 61717 892966 883000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -325) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(">" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -326) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) 327) nil (26284 61717 892964 231000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 323) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) 325) nil (26284 61717 892959 580000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -317) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -318) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("r" 0 1 (face py-builtins-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -319) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -320) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -321) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("g" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -322) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 323) nil (26284 61717 892955 717000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 316) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 317) nil (26284 61717 892941 182000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -315) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) 316) nil (26284 61717 892938 606000) 0 nil])
([nil nil ((315 . 316)) nil (26284 61717 892936 148000) 0 nil])
([nil nil ((316 . 323)) nil (26284 61717 892935 404000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -320) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -321) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("g" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -322) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 323) nil (26284 61717 892934 341000) 0 nil])
([nil nil ((301 . 307)) nil (26284 61717 892929 62000) 0 nil])
([nil nil ((327 . 331)) nil (26284 61717 892928 523000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -328) (undo-tree-id242 . -1) (#(">" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -329) (undo-tree-id243 . -1) (#(" " 0 1 (fontified nil)) . 330) (330 . 331) (#(" " 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 330) (undo-tree-id244 . -1) 331) nil (26284 61717 892927 285000) 0 nil])
([nil nil ((328 . 337)) nil (26284 61717 892925 59000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -334) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -335) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("g" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -336) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 337) nil (26284 61717 892924 65000) 0 nil])
([nil nil ((336 . 344) (#("        " 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 336)) nil (26284 61717 892919 567000) 0 nil])
([nil nil ((344 . 351)) nil (26284 61717 892919 3000) 0 nil])
([nil nil ((344 . 358) (#("acc" 0 3 (fontified nil)) . -344) (344 . 347) (#("account_string" 0 14 (fontified nil)) . -344) (344 . 358) (#("account" 0 7 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -344) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -7) 351) nil (26284 61717 892917 772000) 0 nil])
([nil nil ((358 . 366)) nil (26284 61717 892915 215000) 0 nil])
([nil nil ((366 . 367)) nil (26284 61717 892914 799000) 0 nil])
([nil nil ((367 . 369)) nil (26284 61717 892914 370000) 0 nil])
([nil nil ((344 . 349)) nil (26284 61717 892913 916000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -344) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("i" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -345) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -346) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("t" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -347) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -348) (undo-tree-id229 . -1) 349) nil (26284 61717 892912 8000) 0 nil])
([nil nil ((344 . 357)) nil (26284 61717 892736 742000) 0 nil])
([nil nil ((382 . 391)) nil (26284 61717 892735 858000) 0 nil])
([nil nil ((391 . 412)) nil (26284 61717 892735 469000) 0 nil])
([nil nil ((412 . 414)) nil (26284 61717 892734 930000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -413) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 414) nil (26284 61717 892732 663000) 0 nil])
([nil nil ((413 . 414)) nil (26284 61717 892698 671000) 0 nil])
([nil nil ((273 . 283) (t 26284 61718 10473 212000)) nil (26284 61944 878072 920000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -282) (undo-tree-id490 . -1) 283) nil (26284 61944 878071 978000) 0 nil])
([nil nil ((282 . 290)) nil (26284 61944 878070 910000) 0 nil])
([nil nil ((290 . 303)) nil (26284 61944 878070 313000) 0 nil])
([nil nil ((447 . 455) (#("        " 0 8 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 446) (undo-tree-id488 . -8) (446 . 455) (#("        " 0 8 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 445) (undo-tree-id489 . -8) (453 . 454)) nil (26284 61944 878069 578000) 0 nil])
([nil nil ((447 . 451) (#("        " 0 8 (fontified t match-data (0 3 0 1 1 2 2 3))) . -447) (undo-tree-id487 . -8) 455) nil (26284 61944 878067 362000) 0 nil])
([nil nil ((451 . 472)) nil (26284 61944 878066 360000) 0 nil])
([nil nil ((472 . 482)) nil (26284 61944 878065 880000) 0 nil])
([nil nil ((482 . 493)) nil (26284 61944 878065 430000) 0 nil])
([nil nil ((493 . 494)) nil (26284 61944 878065 58000) 0 nil])
([nil nil ((494 . 499)) nil (26284 61944 878064 663000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -498) (undo-tree-id486 . -1) 499) nil (26284 61944 878063 986000) 0 nil])
([nil nil ((498 . 506)) nil (26284 61944 878063 74000) 0 nil])
([nil nil ((506 . 507)) nil (26284 61944 878062 649000) 0 nil])
([nil nil ((507 . 516)) nil (26284 61944 878062 276000) 0 nil])
([nil nil ((516 . 524)) nil (26284 61944 878061 694000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -516) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#("c" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -517) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("c" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -518) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#("o" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -519) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("u" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -520) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("n" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -521) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -522) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("_" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -523) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) 524) nil (26284 61944 878060 212000) 0 nil])
([nil nil ((516 . 529)) nil (26284 61944 878047 395000) 0 nil])
([nil nil ((522 . 533) (#("acc" 0 3 (fontified nil)) . -522) (522 . 525) (#("account_str" 0 11 (fontified nil)) . -522) (522 . 533) (#("account" 0 7 (fontified t match-data (0 3 0 1 1 2 2 3))) . -522) (undo-tree-id459 . -7) (undo-tree-id460 . -7) (undo-tree-id461 . -7) 529) nil (26284 61944 878046 627000) 0 nil])
([nil nil ((533 . 542)) nil (26284 61944 878043 630000) 0 nil])
([nil nil ((542 . 543)) nil (26284 61944 878042 996000) 0 nil])
([nil nil ((543 . 548)) nil (26284 61944 878042 617000) 0 nil])
([nil nil ((548 . 557)) nil (26284 61944 878041 932000) 0 nil])
([nil nil ((557 . 577)) nil (26284 61944 878041 490000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -576) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) 577) nil (26284 61944 878040 746000) 0 nil])
([nil nil ((576 . 587)) nil (26284 61944 878039 94000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -586) (undo-tree-id455 . -1) 587) nil (26284 61944 878038 475000) 0 nil])
([nil nil ((586 . 590)) nil (26284 61944 878037 599000) 0 nil])
([nil nil ((#("2" 0 1 (face py-number-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -589) (undo-tree-id454 . -1) 590) nil (26284 61944 878037 3000) 0 nil])
([nil nil ((589 . 592)) nil (26284 61944 878036 170000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 591) (undo-tree-id453 . -1) 592) nil (26284 61944 878035 626000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -590) (undo-tree-id452 . -1) 591) nil (26284 61944 878034 396000) 0 nil])
([nil nil ((590 . 601)) nil (26284 61944 878032 996000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -596) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -597) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -598) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -599) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#("s" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -600) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) 601) nil (26284 61944 878031 362000) 0 nil])
([nil nil ((596 . 605)) nil (26284 61944 878021 628000) 0 nil])
([nil nil ((596 . 607) (#("acc" 0 3 (fontified nil)) . -596) (596 . 599) (#("account_str" 0 11 (fontified nil)) . -596) (596 . 607) (#("account_s" 0 9 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -596) (undo-tree-id359 . -9) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -8) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -9) (undo-tree-id405 . -9) (undo-tree-id406 . -9) (undo-tree-id407 . -9) (undo-tree-id408 . -9) (undo-tree-id409 . -9) (undo-tree-id410 . -9) (undo-tree-id411 . -9) (undo-tree-id412 . -9) (undo-tree-id413 . -9) (undo-tree-id414 . -9) (undo-tree-id415 . -9) (undo-tree-id416 . -9) (undo-tree-id417 . -9) (undo-tree-id418 . -9) (undo-tree-id419 . -9) (undo-tree-id420 . -9) (undo-tree-id421 . -9) (undo-tree-id422 . -9) (undo-tree-id423 . -9) (undo-tree-id424 . -9) (undo-tree-id425 . -9) (undo-tree-id426 . -9) (undo-tree-id427 . -9) (undo-tree-id428 . -9) (undo-tree-id429 . -9) (undo-tree-id430 . -9) (undo-tree-id431 . -9) (undo-tree-id432 . -9) (undo-tree-id433 . -9) 605) nil (26284 61944 878015 830000) 0 nil])
([nil nil ((304 . 312) (t 26284 61944 996973 104000)) nil (26284 61960 631610 217000) 0 nil])
([nil nil ((312 . 333)) nil (26284 61960 631609 32000) 0 nil])
([nil nil ((333 . 347)) nil (26284 61960 631608 115000) 0 nil])
([nil nil ((331 . 351) (#("ge" 0 2 (fontified nil)) . -331) (331 . 333) (#("get_account_category" 0 20 (fontified nil)) . -331) (331 . 351) (#("get_account_cate" 0 16 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -331) (undo-tree-id491 . -16) (undo-tree-id492 . -16) (undo-tree-id493 . -16) 347) nil (26284 61960 631605 902000) 0 nil])
([nil nil ((351 . 354)) nil (26284 61960 631592 962000) 0 nil])
([nil nil ((354 . 360)) nil (26284 61960 631587 928000) 0 nil])
([nil nil ((360 . 369) (t 26284 61960 748998 320000)) nil (26284 62113 133085 783000) 0 nil])
([nil nil ((369 . 378)) nil (26284 62113 133085 252000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 16 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16))) . -377) (undo-tree-id524 . -1) 378) nil (26284 62113 133084 748000) 0 nil])
([nil nil ((377 . 390)) nil (26284 62113 133083 714000) 0 nil])
([nil nil ((390 . 391)) nil (26284 62113 133083 324000) 0 nil])
([nil nil ((383 . 391) (#("cur" 0 3 (fontified nil)) . -383) (383 . 386) (#("currency" 0 8 (fontified t match-data (0 16 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16))) . -383) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) 391) nil (26284 62113 133082 638000) 0 nil])
([nil nil ((391 . 400)) nil (26284 62113 133079 497000) 0 nil])
([nil nil ((400 . 411)) nil (26284 62113 133079 44000) 0 nil])
([nil nil ((411 . 418)) nil (26284 62113 133078 345000) 0 nil])
([nil nil ((412 . 418) (#("amou" 0 4 (fontified nil)) . -412) (412 . 416) (#("amount" 0 6 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -412) (undo-tree-id518 . -6) (undo-tree-id519 . -6) (undo-tree-id520 . -6) 418) nil (26284 62113 133077 464000) 0 nil])
([nil nil ((418 . 427)) nil (26284 62113 133075 333000) 0 nil])
([nil nil ((427 . 440)) nil (26284 62113 133074 806000) 0 nil])
([nil nil ((744 . 749)) nil (26284 62113 133074 103000) 0 nil])
([nil nil ((749 . 770)) nil (26284 62113 133073 655000) 0 nil])
([nil nil ((770 . 775)) nil (26284 62113 133073 199000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -774) (undo-tree-id517 . -1) 775) nil (26284 62113 133072 284000) 0 nil])
([nil nil ((774 . 775)) nil (26284 62113 133071 333000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -774) (undo-tree-id516 . -1) 775) nil (26284 62113 133070 650000) 0 nil])
([nil nil ((774 . 778)) nil (26284 62113 133069 696000) 0 nil])
([nil nil ((778 . 779)) nil (26284 62113 133069 386000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -778) (undo-tree-id515 . -1) 779) nil (26284 62113 133068 603000) 0 nil])
([nil nil ((777 . 778)) nil (26284 62113 133067 408000) 0 nil])
([nil nil ((778 . 782)) nil (26284 62113 133066 673000) 0 nil])
([nil nil ((783 . 785)) nil (26284 62113 133066 248000) 0 nil])
([nil nil ((#("_" 0 1 (face py-builtins-face fontified t)) . -784) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 785) nil (26284 62113 133065 588000) 0 nil])
([nil nil ((784 . 791)) nil (26284 62113 133063 372000) 0 nil])
([nil nil ((791 . 792)) nil (26284 62113 133062 620000) 0 nil])
([nil nil ((792 . 801)) nil (26284 62113 133062 13000) 0 nil])
([nil nil ((801 . 807)) nil (26284 62113 133061 347000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -801) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("e" 0 1 (fontified t)) . -802) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("t" 0 1 (fontified t)) . -803) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("u" 0 1 (fontified t)) . -804) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("r" 0 1 (fontified t)) . -805) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -806) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 807) nil (26284 62113 133059 214000) 0 nil])
([nil nil ((801 . 814)) nil (26284 62113 133038 892000) 0 nil])
([nil nil ((814 . 822)) nil (26284 62113 133037 864000) 0 nil])
([nil nil ((822 . 823)) nil (26284 62113 133032 651000) 0 nil])
([nil nil ((440 . 448) (t 26284 62113 251193 440000)) nil (26284 62135 745526 975000) 0 nil])
([nil nil ((445 . 455) (#("is" 0 2 (fontified nil)) . -445) (445 . 447) (#("is_cleared" 0 10 (fontified nil)) . -445) (445 . 455) (#("is_" 0 3 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -445) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) 448) nil (26284 62135 745525 886000) 0 nil])
([nil nil ((455 . 461)) nil (26284 62135 745522 892000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -460) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) 461) nil (26284 62135 745522 244000) 0 nil])
([nil nil ((460 . 464)) nil (26284 62135 745520 155000) 0 nil])
([nil nil ((464 . 473)) nil (26284 62135 745519 677000) 0 nil])
([nil nil ((473 . 483)) nil (26284 62135 745519 191000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -482) (undo-tree-id550 . -1) 483) nil (26284 62135 745518 136000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -473) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -474) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("l" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -475) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("f" 0 1 (face py-object-reference-face fontified t match-data (0 3 0 1 1 2 2 3))) . -476) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("." 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -477) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("n" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -478) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (#("o" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -479) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t match-data (0 3 0 1 1 2 2 3))) . -480) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -481) (undo-tree-id549 . -1) 482) nil (26284 62135 745515 886000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 614)) nil (26284 62136 966421 481000) 0 nil])
([nil nil ((855 . 856)) nil (26284 62863 8555 911000) 0 nil] [nil nil ((826 . 834) (#("        " 0 8 (fontified nil)) . 826) (825 . 826)) ((#("
" 0 1 (fontified t)) . 825) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (826 . 834) (#("        " 0 8 (fontified t)) . 826) (undo-tree-id564 . -8) (undo-tree-id565 . -8) (undo-tree-id566 . -8) (undo-tree-id567 . -8) (undo-tree-id568 . -8) (undo-tree-id569 . -8)) (26284 62135 745486 293000) 0 nil])
([nil nil ((856 . 860)) nil (26284 62863 8555 209000) 0 nil])
nil
([nil nil ((860 . 879)) nil (26284 62863 8554 827000) 0 nil])
([nil nil ((879 . 884)) nil (26284 62863 8554 438000) 0 nil])
([nil nil ((884 . 885)) nil (26284 62863 8554 46000) 0 nil])
([nil nil ((885 . 890)) nil (26284 62863 8553 440000) 0 nil])
([nil nil ((856 . 860) (#("    " 0 4 (fontified nil)) . 855) (undo-tree-id689 . -4) (854 . 860)) nil (26284 62863 8552 917000) 0 nil])
([nil nil ((860 . 867)) nil (26284 62863 8551 975000) 0 nil])
([nil nil ((867 . 880)) nil (26284 62863 8551 304000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -905) (undo-tree-id684 . -1) (#("o" 0 1 (fontified t)) . -906) (undo-tree-id685 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -907) (undo-tree-id686 . -1) (#("e" 0 1 (fontified t)) . -908) (undo-tree-id687 . -1) (#("s" 0 1 (fontified t)) . -909) (undo-tree-id688 . -1) 910) nil (26284 62863 8550 458000) 0 nil])
([nil nil ((905 . 910)) nil (26284 62863 8547 543000) 0 nil])
([nil nil ((880 . 885)) nil (26284 62863 8547 181000) 0 nil])
([nil nil ((885 . 886)) nil (26284 62863 8546 774000) 0 nil])
([nil nil ((886 . 887)) nil (26284 62863 8546 406000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -886) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) 887) nil (26284 62863 8545 856000) 0 nil])
([nil nil ((886 . 898)) nil (26284 62863 8544 115000) 0 nil])
([nil nil ((898 . 899)) nil (26284 62863 8543 661000) 0 nil])
([nil nil ((935 . 942)) nil (26284 62863 8543 269000) 0 nil])
([nil nil ((942 . 943)) nil (26284 62863 8542 831000) 0 nil])
([nil nil ((900 . 908)) nil (26284 62863 8542 446000) 0 nil])
([nil nil ((901 . 909) (#("        " 0 8 (fontified nil)) . 900) (undo-tree-id680 . -8) (908 . 909)) nil (26284 62863 8541 938000) 0 nil])
([nil nil ((900 . 908)) nil (26284 62863 8541 8000) 0 nil])
([nil nil ((908 . 928)) nil (26284 62863 8540 637000) 0 nil])
([nil nil ((928 . 929)) nil (26284 62863 8540 238000) 0 nil])
([nil nil ((929 . 930)) nil (26284 62863 8539 784000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -928) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -929) (undo-tree-id678 . -1) (undo-tree-id679 . -1) 930) nil (26284 62863 8539 135000) 0 nil])
([nil nil ((928 . 936)) nil (26284 62863 8536 970000) 0 nil])
([nil nil ((936 . 937)) nil (26284 62863 8536 540000) 0 nil])
([nil nil ((992 . 1000) (#("        " 0 8 (fontified nil)) . 991) (undo-tree-id674 . -8) (991 . 1000) (#("        " 0 8 (fontified nil)) . 990) (undo-tree-id675 . -8) (989 . 999)) nil (26284 62863 8535 711000) 0 nil])
([nil nil ((1000 . 1011)) nil (26284 62863 8533 797000) 0 nil])
([nil nil ((990 . 998)) nil (26284 62863 8533 327000) 0 nil])
([nil nil ((998 . 1005)) nil (26284 62863 8532 909000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1004) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) 1005) nil (26284 62863 8532 303000) 0 nil])
([nil nil ((1004 . 1022)) nil (26284 62863 8530 476000) 0 nil])
([nil nil ((1022 . 1024)) nil (26284 62863 8529 859000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1023) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) 1024) nil (26284 62863 8529 303000) 0 nil])
([nil nil ((1025 . 1033) (#("        " 0 8 (fontified nil)) . 1024) (undo-tree-id667 . -8) (1023 . 1033)) nil (26284 62863 8526 287000) 0 nil])
([nil nil ((1033 . 1038)) nil (26284 62863 8525 22000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1036) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#("a" 0 1 (fontified t)) . -1037) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) 1038) nil (26284 62863 8524 336000) 0 nil])
([nil nil ((1036 . 1050)) nil (26284 62863 8521 24000) 0 nil])
([nil nil ((1050 . 1051)) nil (26284 62863 8520 687000) 0 nil])
([nil nil ((1051 . 1064)) nil (26284 62863 8520 270000) 0 nil])
([nil nil ((1064 . 1067)) nil (26284 62863 8519 655000) 0 nil])
([nil nil ((1067 . 1080)) nil (26284 62863 8519 233000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1076) (undo-tree-id660 . -4) 1080) nil (26284 62863 8518 569000) 0 nil])
([nil nil ((1076 . 1080)) nil (26284 62863 8517 409000) 0 nil])
([nil nil ((1080 . 1081)) nil (26284 62863 8517 12000) 0 nil])
([nil nil ((1081 . 1094)) nil (26284 62863 8516 158000) 0 nil])
([nil nil ((1094 . 1101)) nil (26284 62863 8515 501000) 0 nil])
([nil nil ((#("
    def get_payee(self, payee: str) -> str:
        return payee.split(';', 1)[0]
        " 0 1 (fontified t) 1 5 (fontified t) 5 8 (face py-def-class-face fontified t) 8 9 (fontified t) 9 18 (face py-def-face fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 23 (face py-object-reference-face fontified t) 23 32 (fontified t) 32 35 (face py-builtins-face fontified t) 35 36 (face (rainbow-delimiters-depth-1-face) fontified t) 36 40 (fontified t) 40 43 (face py-builtins-face fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 53 (fontified t) 53 59 (face font-lock-keyword-face fontified t) 59 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-1-face) fontified t) 72 75 (face font-lock-string-face fontified t) 75 77 (fontified t) 77 78 (face py-number-face fontified t) 78 79 (face (rainbow-delimiters-depth-1-face) fontified t) 79 80 (face (rainbow-delimiters-depth-1-face) fontified t) 80 81 (face py-number-face fontified t) 81 82 (face (rainbow-delimiters-depth-1-face) fontified t) 82 83 (fontified t) 83 91 (fontified t)) . 855) (undo-tree-id570 . -91) (undo-tree-id571 . -64) (undo-tree-id572 . -64) (undo-tree-id573 . -64) (undo-tree-id574 . -64) (undo-tree-id575 . -64) (undo-tree-id576 . -64) (undo-tree-id577 . -64) (undo-tree-id578 . -64) (undo-tree-id579 . -64) (undo-tree-id580 . -91) (undo-tree-id581 . -91) (undo-tree-id582 . -91) (undo-tree-id583 . -91) (undo-tree-id584 . -91) (undo-tree-id585 . -91) (undo-tree-id586 . -91) (undo-tree-id587 . -91) (undo-tree-id588 . -91) (undo-tree-id589 . -91) (undo-tree-id590 . -91) (undo-tree-id591 . -91) (undo-tree-id592 . -91) (undo-tree-id593 . -91) (undo-tree-id594 . -91) (undo-tree-id595 . -91) (undo-tree-id596 . -91) (undo-tree-id597 . -91) (undo-tree-id598 . -91) (undo-tree-id599 . -91) (undo-tree-id600 . -91) (undo-tree-id601 . -91) (undo-tree-id602 . -91) (undo-tree-id603 . -91) (undo-tree-id604 . -91) (undo-tree-id605 . -91) (undo-tree-id606 . -91) (undo-tree-id607 . -91) (undo-tree-id608 . -91) (undo-tree-id609 . -91) (undo-tree-id610 . -91) (undo-tree-id611 . -91) (undo-tree-id612 . -91) (undo-tree-id613 . -91) (undo-tree-id614 . -91) (undo-tree-id615 . -91) (undo-tree-id616 . -91) (undo-tree-id617 . -91) (undo-tree-id618 . -91) (undo-tree-id619 . -91) (undo-tree-id620 . -91) (undo-tree-id621 . -91) (undo-tree-id622 . -91) (undo-tree-id623 . -91) (undo-tree-id624 . -91) (undo-tree-id625 . -91) (undo-tree-id626 . -91) (undo-tree-id627 . -91) (undo-tree-id628 . -91) (undo-tree-id629 . -91) (undo-tree-id630 . -91) (undo-tree-id631 . -91) (undo-tree-id632 . -91) (undo-tree-id633 . -91) (undo-tree-id634 . -91) (undo-tree-id635 . -91) (undo-tree-id636 . -91) (undo-tree-id637 . -91) (undo-tree-id638 . -53) (undo-tree-id639 . -53) (undo-tree-id640 . -53) (undo-tree-id641 . -53) (undo-tree-id642 . -53) (undo-tree-id643 . -53) (undo-tree-id644 . -53) (undo-tree-id645 . -53) (undo-tree-id646 . -53) (undo-tree-id647 . -53) (undo-tree-id648 . -53) (undo-tree-id649 . -53) (undo-tree-id650 . -9) (undo-tree-id651 . -9) (undo-tree-id652 . -9) (undo-tree-id653 . -9) (undo-tree-id654 . -9) (undo-tree-id655 . -9) (undo-tree-id656 . -9) (undo-tree-id657 . -9) (undo-tree-id658 . -9) (undo-tree-id659 . -9)) nil (26284 62863 8512 80000) 0 nil])
([nil nil ((1031 . 1032) 855) nil (26284 62863 8310 95000) 0 nil])
([nil nil ((#("        parts=payee.split(';', 1)

        if len(parts) > 1:
            ...
        else:
            tags=''

        return tags
" 0 8 (fontified t) 8 13 (face py-variable-name-face fontified t) 13 14 (face font-lock-operator-face fontified t) 14 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 32 (face py-number-face fontified t) 32 33 (face (rainbow-delimiters-depth-1-face) fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 43 (fontified t) 43 45 (face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 49 (face py-builtins-face fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 59 (fontified t) 59 60 (face py-number-face fontified t) 60 62 (fontified t) 62 78 (fontified t) 78 86 (fontified t) 86 90 (face font-lock-keyword-face fontified t) 90 92 (fontified t) 92 104 (fontified t) 104 108 (face py-variable-name-face fontified t) 108 109 (face font-lock-operator-face fontified t) 109 111 (face font-lock-string-face fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 121 (fontified t) 121 127 (face font-lock-keyword-face fontified t) 127 132 (fontified t) 132 133 (fontified t)) . 899) (undo-tree-id695 . -133) (undo-tree-id696 . -50) (undo-tree-id697 . -133) (t 26284 62863 126393 872000)) nil (26284 63023 458742 188000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -880) (undo-tree-id691 . -1) (#("y" 0 1 (fontified t)) . -881) (undo-tree-id692 . -1) (#("e" 0 1 (fontified t)) . -882) (undo-tree-id693 . -1) (#("e" 0 1 (fontified t)) . -883) (undo-tree-id694 . -1) 884) nil (26284 63023 458738 644000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -879) (undo-tree-id690 . -1) 880) nil (26284 63023 458733 237000) 0 nil])
([nil nil ((879 . 884)) nil (26284 63023 458723 552000) 0 nil])
([nil nil ((899 . 907)) nil (26284 63023 458722 693000) 0 nil])
([nil nil ((907 . 910)) nil (26284 63023 458721 223000) 0 nil])
([nil nil ((910 . 911)) nil (26284 63023 458717 4000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -907) (undo-tree-id699 . -1) (#("." 0 1 (fontified t)) . -908) (undo-tree-id700 . -1) (#("." 0 1 (fontified t)) . -909) (undo-tree-id701 . -1) 910 (t 26284 63023 577353 956000)) nil (26284 64038 184232 667000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1591 . 1592) (nil fontified nil 907 . 1592) (907 . 1592)) nil (26284 64038 184229 170000) 0 nil])
([nil nil ((#("        def process_string(input_str):" 0 8 (fontified t) 8 11 (face py-def-class-face fontified t) 11 12 (fontified t) 12 26 (face py-def-face fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) fontified t) 27 36 (fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t) 37 38 (fontified t)) . 899) (undo-tree-id698 . -8)) nil (26284 64038 184228 206000) 0 nil])
([nil nil ((900 . 908) (#("    " 0 4 (fontified t)) . 900)) nil (26284 64038 184218 826000) 0 nil])
([nil nil ((948 . 956) (#("    " 0 4 (fontified t)) . 948) 956) nil (26284 64038 184218 113000) 0 nil])
([nil nil ((1008 . 1016) (#("    " 0 4 (fontified t)) . 1008) 1020) nil (26284 64038 184217 326000) 0 nil])
([nil nil ((1088 . 1096) (#("    " 0 4 (fontified t)) . 1088) 1104) nil (26284 64038 184216 628000) 0 nil])
([nil nil ((1110 . 1118) (#("    " 0 4 (fontified t)) . 1110) 1130) nil (26284 64038 184215 907000) 0 nil])
([nil nil ((1153 . 1161) (#("    " 0 4 (fontified t)) . 1153) 1177) nil (26284 64038 184214 850000) 0 nil])
([nil nil ((1191 . 1199) (#("    " 0 4 (fontified t)) . 1191) 1219) nil (26284 64038 184214 124000) 0 nil])
([nil nil ((1224 . 1236) (#("        " 0 8 (fontified t)) . 1224) 1256) nil (26284 64038 184213 143000) 0 nil])
([nil nil ((1280 . 1296) (#("            " 0 12 (fontified t)) . 1280) 1316) nil (26284 64038 184212 337000) 0 nil])
([nil nil ((1326 . 1342) (#("            " 0 12 (fontified t)) . 1326) 1366) nil (26284 64038 184211 329000) 0 nil])
([nil nil ((1390 . 1406) (#("            " 0 12 (fontified t)) . 1390) 1432) nil (26284 64038 184210 502000) 0 nil])
([nil nil ((1437 . 1449) (#("        " 0 8 (fontified t)) . 1437) 1483) nil (26284 64038 184209 605000) 0 nil])
([nil nil ((1547 . 1563) (#("            " 0 12 (fontified t)) . 1547) 1582) nil (26284 64038 184208 393000) 0 nil])
([nil nil ((1588 . 1596) (#("    " 0 4 (fontified t)) . 1588) 1605) nil (26284 64038 184202 448000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -894) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#("t" 0 1 (fontified t)) . -895) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (#("r" 0 1 (face py-builtins-face fontified t)) . -896) (undo-tree-id709 . -1) (undo-tree-id710 . -1) 897 (t 26284 64038 302562 511000)) nil (26284 64051 997099 73000) 0 nil])
([nil nil ((894 . 898)) nil (26284 64051 997094 419000) 0 nil])
([nil nil ((894 . 898) (#("lis" 0 3 (fontified nil)) . -894) (894 . 897) (#("list" 0 4 (face py-builtins-face fontified t)) . -894) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) 898) nil (26284 64051 997092 771000) 0 nil])
([nil nil ((1 . 2)) nil (26284 64051 997079 361000) 0 nil])
([nil nil ((1 . 10)) nil (26284 64051 997074 717000) 0 nil])
([nil nil ((1221 . 1222) (t 26284 64052 118580 874000)) nil (26284 64080 830257 603000) 0 nil])
([nil nil ((1222 . 1226)) nil (26284 64080 830252 678000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1223) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (#("t" 0 1 (fontified t)) . -1224) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("r" 0 1 (face py-builtins-face fontified t)) . -1225) (undo-tree-id722 . -1) (undo-tree-id723 . -1) 1226 (t 26284 64080 948617 794000)) nil (26284 64090 546271 114000) 0 nil])
([nil nil ((1222 . 1223) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 1222) (undo-tree-id716 . -1) (undo-tree-id717 . -1) 1223) nil (26284 64090 546267 422000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1220) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#(":" 0 1 (fontified t)) . -1221) (undo-tree-id714 . -1) (undo-tree-id715 . -1) 1222) nil (26284 64090 546263 865000) 0 nil])
([nil nil ((1220 . 1221)) nil (26284 64179 868334 662000) 0 nil])
([nil nil ((#("input_str" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 1183) (undo-tree-id1058 . -9) (undo-tree-id1059 . -9) (undo-tree-id1060 . -9) (undo-tree-id1061 . -9) (undo-tree-id1062 . -9) (undo-tree-id1063 . -9) (undo-tree-id1064 . -9) (undo-tree-id1065 . -9) (undo-tree-id1066 . -9)) ((1183 . 1192)) (26284 64181 426605 544000) 0 nil])
([nil nil ((1183 . 1188)) ((#("notes" 0 5 (fontified t)) . 1183) (undo-tree-id1057 . -5)) (26284 64182 219130 637000) 0 nil])
([nil nil ((#("s" 0 1 (face py-variable-name-face fontified t)) . -1040) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("e" 0 1 (face py-variable-name-face fontified t)) . -1041) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (#("m" 0 1 (face py-variable-name-face fontified t)) . -1042) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (#("i" 0 1 (face py-variable-name-face fontified t)) . -1043) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) 1044) nil (26284 64200 570260 393000) 0 nil] [nil nil ((#("s" 0 1 (face py-variable-name-face fontified t)) . -1040) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (#("e" 0 1 (face py-variable-name-face fontified t)) . -1041) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#("m" 0 1 (face py-variable-name-face fontified t)) . -1042) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (#("i" 0 1 (face py-variable-name-face fontified t)) . -1043) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 1044 (t 26284 64113 812657 684000)) ((1040 . 1044)) (26284 64178 21026 492000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1470) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (#("e" 0 1 (fontified t)) . -1471) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (#("m" 0 1 (fontified t)) . -1472) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (#("i" 0 1 (fontified t)) . -1473) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) 1474 (t 26284 64200 610752 816000)) nil (26284 64209 599839 397000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1470) (undo-tree-id755 . -1) (undo-tree-id757 . -1) (undo-tree-id759 . -1) (undo-tree-id761 . -1) (undo-tree-id763 . -1) (undo-tree-id765 . -1) (undo-tree-id767 . -1) (undo-tree-id769 . -1) (undo-tree-id771 . -1) (undo-tree-id773 . -1) (undo-tree-id775 . -1) (undo-tree-id777 . -1) (undo-tree-id779 . -1) (undo-tree-id781 . -1) (undo-tree-id783 . -1) (undo-tree-id785 . -1) (undo-tree-id787 . -1) (undo-tree-id789 . -1) (undo-tree-id791 . -1) (undo-tree-id793 . -1) (undo-tree-id795 . -1) (undo-tree-id797 . -1) (undo-tree-id799 . -1) (undo-tree-id801 . -1) (undo-tree-id803 . -1) (undo-tree-id805 . -1) (undo-tree-id807 . -1) (undo-tree-id809 . -1) (undo-tree-id811 . -1) (undo-tree-id813 . -1) (undo-tree-id815 . -1) (undo-tree-id817 . -1) (undo-tree-id819 . -1) (undo-tree-id821 . -1) (undo-tree-id823 . -1) (undo-tree-id825 . -1) (undo-tree-id827 . -1) (undo-tree-id829 . -1) (undo-tree-id831 . -1) (undo-tree-id833 . -1) (undo-tree-id835 . -1) (undo-tree-id837 . -1) (undo-tree-id839 . -1) (undo-tree-id841 . -1) (undo-tree-id843 . -1) (undo-tree-id845 . -1) (undo-tree-id847 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (#("e" 0 1 (fontified t)) . -1471) (undo-tree-id855 . -1) (undo-tree-id857 . -1) (undo-tree-id859 . -1) (undo-tree-id861 . -1) (undo-tree-id863 . -1) (undo-tree-id865 . -1) (undo-tree-id867 . -1) (undo-tree-id869 . -1) (undo-tree-id871 . -1) (undo-tree-id873 . -1) (undo-tree-id875 . -1) (undo-tree-id877 . -1) (undo-tree-id879 . -1) (undo-tree-id881 . -1) (undo-tree-id883 . -1) (undo-tree-id885 . -1) (undo-tree-id887 . -1) (undo-tree-id889 . -1) (undo-tree-id891 . -1) (undo-tree-id893 . -1) (undo-tree-id895 . -1) (undo-tree-id897 . -1) (undo-tree-id899 . -1) (undo-tree-id901 . -1) (undo-tree-id903 . -1) (undo-tree-id905 . -1) (undo-tree-id907 . -1) (undo-tree-id909 . -1) (undo-tree-id911 . -1) (undo-tree-id913 . -1) (undo-tree-id915 . -1) (undo-tree-id917 . -1) (undo-tree-id919 . -1) (undo-tree-id921 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id926 . -1) (#("m" 0 1 (fontified t)) . -1472) (undo-tree-id928 . -1) (undo-tree-id930 . -1) (undo-tree-id932 . -1) (undo-tree-id934 . -1) (undo-tree-id936 . -1) (undo-tree-id938 . -1) (undo-tree-id940 . -1) (undo-tree-id942 . -1) (undo-tree-id944 . -1) (undo-tree-id946 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id983 . -1) (#("i" 0 1 (fontified t)) . -1473) (undo-tree-id985 . -1) (undo-tree-id987 . -1) (undo-tree-id989 . -1) (undo-tree-id991 . -1) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1024 . -1) 1474 (t 26284 64148 63696 919000)) ((1470 . 1474) (t 26284 64151 796701 57000)) (26284 64162 63921 381000) 0 nil])
([nil nil ((908 . 913) (t 26284 64209 720762 12000)) nil (26284 64246 688599 8000) 0 nil])
([nil nil ((#("_" 0 1 (face py-variable-name-face fontified t)) . -1039) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) 1040 (t 26284 64151 796701 57000)) ((1039 . 1040)) (26284 64161 320549 829000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -908) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -909) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -910) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (#("r" 0 1 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -911) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -912) (undo-tree-id1427 . -1) 913) nil (26284 64246 688597 760000) 0 nil])
([nil nil ((1039 . 1040)) ((#("-" 0 1 (fontified t)) . 1039)) (26284 64160 960356 543000) 0 nil])
([nil nil ((908 . 909)) nil (26284 64246 688589 116000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1045) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) 1046) ((1045 . 1046)) (26284 64160 623551 644000) 0 nil])
([nil nil ((909 . 911)) nil (26284 64246 688588 132000) 0 nil])
([nil nil ((1045 . 1046)) ((#("-" 0 1 (fontified t)) . 1045) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1)) (26284 64159 907856 801000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -910) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) 911) nil (26284 64246 688587 164000) 0 nil])
nil
([nil nil ((#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -908) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (#(" " 0 1 (fontified nil)) . 909) (909 . 910) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 909) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) 910) nil (26284 64246 688583 945000) 0 nil])
([nil nil ((908 . 914)) nil (26284 64246 688578 693000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -909) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -910) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -911) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (#("r" 0 1 (face py-builtins-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -912) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -913) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) 914) nil (26284 64246 688576 681000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 908) (908 . 909) (#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 908) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) 909) nil (26284 64246 688564 519000) 0 nil])
([nil nil ((908 . 914)) nil (26284 64246 688559 344000) 0 nil])
([nil nil ((#("]" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -913) (undo-tree-id1386 . -1) 914) nil (26284 64246 688555 233000) 0 nil])
([nil nil ((474 . 483) (t 26284 64246 697797 926000)) nil (26284 64260 523017 271000) 0 nil])
([nil nil ((483 . 484)) nil (26284 64260 523016 2000) 0 nil])
([nil nil ((484 . 505)) nil (26284 64260 523014 480000) 0 nil])
([nil nil ((505 . 513)) nil (26284 64260 523008 563000) 0 nil])
([nil nil ((#("import sys" 0 6 (face py-import-from-face fontified t) 6 7 (fontified t) 7 10 (fontified t match-data (0 3 0 1 1 2 2 3))) . 11) (undo-tree-id1429 . -10) (undo-tree-id1430 . -10) (undo-tree-id1431 . -10) (undo-tree-id1432 . -10) (undo-tree-id1433 . -10) (undo-tree-id1434 . -10) (undo-tree-id1435 . -10) (undo-tree-id1436 . -10) (undo-tree-id1437 . -10) (undo-tree-id1438 . -10) (undo-tree-id1439 . -10) (undo-tree-id1440 . -10) (undo-tree-id1441 . -10) (undo-tree-id1442 . -10) (undo-tree-id1443 . -10) (undo-tree-id1444 . -10) (undo-tree-id1445 . -10) (undo-tree-id1446 . -10) (undo-tree-id1447 . -10) (undo-tree-id1448 . -10) (undo-tree-id1449 . -10) (undo-tree-id1450 . -10) (t 26284 64260 642810 901000)) nil (26284 64678 204895 988000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 11) (undo-tree-id1428 . -1)) nil (26284 64678 204878 979000) 0 nil])
([nil nil ((1 . 9) (t 26284 64678 327091 733000)) nil (26284 64709 327828 535000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -16) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (#("e" 0 1 (fontified t)) . -17) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) 18) nil (26284 64709 327827 530000) 0 nil])
([nil nil ((16 . 23)) nil (26284 64709 327825 373000) 0 nil])
([nil nil ((16 . 23) (#("com" 0 3 (fontified nil)) . -16) (16 . 19) (#("compile" 0 7 (face py-builtins-face fontified t)) . -16) (undo-tree-id1519 . -7) (undo-tree-id1520 . -7) (undo-tree-id1521 . -7) 23) nil (26284 64709 327824 683000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1040) (undo-tree-id1516 . -1) (#("e" 0 1 (fontified t)) . -1041) (undo-tree-id1517 . -1) (#("." 0 1 (fontified t)) . -1042) (undo-tree-id1518 . -1) 1043) nil (26284 64709 327822 37000) 0 nil])
([nil nil ((1040 . 1043)) nil (26284 64709 327819 858000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -16) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -17) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (#("m" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -18) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (#("p" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -19) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (#("i" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -20) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (#("l" 0 1 (face py-builtins-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -21) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) 22) nil (26284 64709 327818 492000) 0 nil])
([nil nil ((16 . 17)) nil (26284 64709 327811 981000) 0 nil])
([nil current ((#("from re " 0 4 (face py-import-from-face fontified t) 4 8 (fontified t)) . -1) (undo-tree-id1451 . -8) (undo-tree-id1452 . -8) (undo-tree-id1453 . -8) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) (undo-tree-id1460 . -8) (undo-tree-id1461 . -8) (undo-tree-id1462 . -8) (undo-tree-id1463 . -8) (undo-tree-id1464 . -8) (undo-tree-id1465 . -8) (undo-tree-id1466 . -8) (undo-tree-id1467 . -8) (undo-tree-id1468 . -8) (undo-tree-id1469 . -8) (undo-tree-id1470 . -8) (undo-tree-id1471 . -8) (undo-tree-id1472 . -8) (undo-tree-id1473 . -8) (undo-tree-id1474 . -8) (undo-tree-id1475 . -8) (undo-tree-id1476 . -8) (undo-tree-id1477 . -8) (undo-tree-id1478 . -8) (undo-tree-id1479 . -8) (undo-tree-id1480 . -8) (undo-tree-id1481 . -8) (undo-tree-id1482 . -8) (undo-tree-id1483 . -8) (undo-tree-id1484 . -8) (undo-tree-id1485 . -8) (undo-tree-id1486 . -8) (undo-tree-id1487 . -8) (undo-tree-id1488 . -8) (undo-tree-id1489 . -8) (undo-tree-id1490 . -8) (undo-tree-id1491 . -8) (undo-tree-id1492 . -8) (undo-tree-id1493 . -8) (undo-tree-id1494 . -8) (undo-tree-id1495 . -8) (undo-tree-id1496 . -8) (undo-tree-id1497 . -8) (undo-tree-id1498 . -8) (undo-tree-id1499 . -8) (undo-tree-id1500 . -8) (undo-tree-id1501 . -8) (undo-tree-id1502 . -8) (undo-tree-id1503 . -8) 9) nil (26284 64709 327807 209000) 0 nil])
nil

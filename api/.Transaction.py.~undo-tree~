(undo-tree-save-format-version . 1)
"59c46403297a57a38b77c0d1b140d024edccec35"
[nil nil nil nil (26509 12592 247336 542000) 0 nil]
([nil nil ((1 . 7) (t 26509 12562 877740 877000)) nil (26509 12592 247335 697000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6) (undo-tree-id33 . -1) 7) nil (26509 12592 247334 880000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("t" 0 1 (fontified t)) . -5) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 6) nil (26509 12592 247333 603000) 0 nil])
([nil nil ((4 . 6)) nil (26509 12592 247328 637000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("p" 0 1 (fontified t)) . -4) (undo-tree-id23 . -1) (#("o" 0 1 (fontified t)) . -5) (undo-tree-id24 . -1) 6) nil (26509 12592 247327 775000) 0 nil])
([nil nil ((3 . 14)) nil (26509 12592 247324 959000) 0 nil])
([nil nil ((8 . 14) (#("led" 0 3 (fontified nil)) . -8) (8 . 11) (#("ledger" 0 6 (fontified t)) . -8) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) 14) nil (26509 12592 247324 93000) 0 nil])
([nil nil ((14 . 16)) nil (26509 12592 247321 441000) 0 nil])
([nil nil ((16 . 33)) nil (26509 12592 247321 134000) 0 nil])
([nil nil ((33 . 34)) nil (26509 12592 247320 730000) 0 nil])
([nil nil ((34 . 39)) nil (26509 12592 247320 249000) 0 nil])
([nil nil ((39 . 52)) nil (26509 12592 247319 830000) 0 nil])
([nil nil ((52 . 72)) nil (26509 12592 247319 383000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -71) (undo-tree-id14 . -1) 72) nil (26509 12592 247318 770000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -58) (undo-tree-id1 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -59) (undo-tree-id2 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -60) (undo-tree-id3 . -1) (#("g" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -61) (undo-tree-id4 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -62) (undo-tree-id5 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -63) (undo-tree-id6 . -1) (#("_" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -64) (undo-tree-id7 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -65) (undo-tree-id8 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -66) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -67) (undo-tree-id10 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -68) (undo-tree-id11 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -69) (undo-tree-id12 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -70) (undo-tree-id13 . -1) 71) nil (26509 12592 247316 185000) 0 nil])
([nil nil ((58 . 70)) nil (26509 12592 247308 597000) 0 nil])
([nil nil ((70 . 71)) nil (26509 12592 247308 178000) 0 nil])
([nil nil ((71 . 80)) nil (26509 12592 247307 769000) 0 nil])
([nil nil ((69 . 70)) nil (26509 12592 247307 379000) 0 nil])
([nil nil ((70 . 80)) nil (26509 12592 247306 893000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -79) (undo-tree-id0 . -1) 80) nil (26509 12592 247305 612000) 0 nil])
([nil nil ((79 . 85)) nil (26509 12592 247289 416000) 0 nil])
([nil nil ((96 . 97) 85) nil (26509 12592 247285 184000) 0 nil])
([nil nil ((96 . 99) (t 26509 12592 365637 637000)) nil (26509 12601 741878 952000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -96) (undo-tree-id167 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -97) (undo-tree-id168 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -98) (undo-tree-id169 . -1) 99) nil (26509 12601 741877 820000) 0 nil])
([nil nil ((96 . 110)) nil (26509 12601 741875 644000) 0 nil])
([nil nil ((110 . 126)) nil (26509 12601 741874 920000) 0 nil])
([nil nil ((122 . 133) (#("tra" 0 3 (fontified nil)) . -122) (122 . 125) (#("transaction" 0 11 (fontified nil)) . -122) (122 . 133) (#("tran" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -122) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) 126) nil (26509 12601 741868 866000) 0 nil])
([nil nil ((135 . 143) (#("        " 0 8 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 134) (undo-tree-id184 . -8) (133 . 143) (t 26509 12601 861605 665000)) nil (26509 12643 169923 168000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 139) (undo-tree-id183 . -4) 143) nil (26509 12643 169921 762000) 0 nil])
([nil nil ((139 . 143)) nil (26509 12643 169920 676000) 0 nil])
([nil nil ((#("e" 0 1 (face py-decorators-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -141) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("o" 0 1 (face py-decorators-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -142) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 143) nil (26509 12643 169919 748000) 0 nil])
([nil nil ((141 . 148)) nil (26509 12643 169915 582000) 0 nil])
([nil nil ((140 . 148) (#("pro" 0 3 (fontified nil)) . -140) (140 . 143) (#("property" 0 8 (face py-decorators-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -140) (undo-tree-id171 . -8) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -8) 148) nil (26509 12643 169914 675000) 0 nil])
([nil nil ((148 . 153)) nil (26509 12643 169911 259000) 0 nil])
([nil nil ((153 . 174)) nil (26509 12643 169910 648000) 0 nil])
([nil nil ((174 . 184)) nil (26509 12643 169910 246000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -183) (undo-tree-id170 . -1) 184) nil (26509 12643 169909 95000) 0 nil])
([nil nil ((183 . 184)) nil (26509 12643 169901 954000) 0 nil])
([nil nil ((14 . 15)) nil (26509 12643 169901 138000) 0 nil])
([nil nil ((15 . 30)) nil (26509 12643 169896 616000) 0 nil])
([nil nil ((200 . 201) (t 26509 12643 292473 74000)) nil (26509 12650 213283 78000) 0 nil])
([nil nil ((201 . 210)) nil (26509 12650 213282 321000) 0 nil])
([nil nil ((210 . 224)) nil (26509 12650 213281 874000) 0 nil])
([nil nil ((224 . 225)) nil (26509 12650 213281 221000) 0 nil])
([nil nil ((222 . 240) (#("le" 0 2 (fontified nil)) . -222) (222 . 224) (#("ledger_transaction" 0 18 (fontified nil)) . -222) (222 . 240) (#("led" 0 3 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -222) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) 225) nil (26509 12650 213279 346000) 0 nil])
([nil nil ((240 . 245)) nil (26509 12650 213265 995000) 0 nil])
([nil nil ((247 . 251) (#("    " 0 4 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 246) (undo-tree-id221 . -4) (245 . 251) (t 26509 12650 334451 610000)) nil (26509 12762 834655 752000) 0 nil])
([nil nil ((251 . 260)) nil (26509 12762 834654 716000) 0 nil])
([nil nil ((149 . 158)) nil (26509 12762 834654 295000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -84) (undo-tree-id220 . -1) 85) nil (26509 12762 834653 822000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -74) (undo-tree-id210 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -75) (undo-tree-id211 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -76) (undo-tree-id212 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -77) (undo-tree-id213 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -78) (undo-tree-id214 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -79) (undo-tree-id215 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -80) (undo-tree-id216 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -81) (undo-tree-id217 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -82) (undo-tree-id218 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -83) (undo-tree-id219 . -1) 84) nil (26509 12762 834651 493000) 0 nil])
([nil nil ((74 . 81)) nil (26509 12762 834646 512000) 0 nil])
([nil nil ((#("t" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -120) (undo-tree-id199 . -1) (#("r" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -121) (undo-tree-id200 . -1) (#("a" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -122) (undo-tree-id201 . -1) (#("n" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -123) (undo-tree-id202 . -1) (#("s" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -124) (undo-tree-id203 . -1) (#("a" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -125) (undo-tree-id204 . -1) (#("c" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -126) (undo-tree-id205 . -1) (#("t" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -127) (undo-tree-id206 . -1) (#("i" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -128) (undo-tree-id207 . -1) (#("o" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -129) (undo-tree-id208 . -1) (#("n" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -130) (undo-tree-id209 . -1) 131) nil (26509 12762 834644 693000) 0 nil])
([nil nil ((120 . 127)) nil (26509 12762 834638 796000) 0 nil])
([nil nil ((141 . 150)) nil (26509 12762 834638 333000) 0 nil])
([nil nil ((#("transaction" 0 11 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -130) (undo-tree-id198 . -11) 141) nil (26509 12762 834637 650000) 0 nil])
([nil nil ((130 . 137)) nil (26509 12762 834636 599000) 0 nil])
([nil nil ((130 . 137) (#("pos" 0 3 (fontified nil)) . -130) (130 . 133) (#("posting" 0 7 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -130) (undo-tree-id194 . -7) (undo-tree-id195 . -7) (undo-tree-id196 . -7) (undo-tree-id197 . -7) 137) nil (26509 12762 834635 560000) 0 nil])
([nil nil ((137 . 146)) nil (26509 12762 834633 75000) 0 nil])
([nil nil ((146 . 151)) nil (26509 12762 834632 732000) 0 nil])
([nil nil ((151 . 152)) nil (26509 12762 834632 293000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -151) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) 152) nil (26509 12762 834631 568000) 0 nil])
([nil nil ((151 . 165)) nil (26509 12762 834628 76000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -164) (undo-tree-id189 . -1) 165) nil (26509 12762 834626 671000) 0 nil])
([nil nil ((164 . 184)) nil (26509 12762 834615 349000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -202) (undo-tree-id270 . -1) 203 (t 26509 12762 955146 613000)) nil (26509 12790 782536 282000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 198) (undo-tree-id269 . -4) 202) nil (26509 12790 782535 90000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -194) (undo-tree-id268 . -4) 198) nil (26509 12790 782534 38000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -193) (undo-tree-id267 . -1) 194) nil (26509 12790 782533 38000) 0 nil])
([nil nil ((303 . 308)) nil (26509 12790 782532 121000) 0 nil])
([nil nil ((308 . 323)) nil (26509 12790 782531 680000) 0 nil])
([nil nil ((323 . 324)) nil (26509 12790 782531 203000) 0 nil])
([nil nil ((324 . 333)) nil (26509 12790 782530 773000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . 329) (undo-tree-id266 . -4) 333) nil (26509 12790 782530 256000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 3 0 1 1 2 2 3))) . -325) (undo-tree-id265 . -4) 329) nil (26509 12790 782529 72000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -323) (undo-tree-id263 . -1) (#("
" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -324) (undo-tree-id264 . -1) 325) nil (26509 12790 782527 882000) 0 nil])
([nil nil ((323 . 327)) nil (26509 12790 782526 514000) 0 nil])
([nil nil ((327 . 333)) nil (26509 12790 782526 63000) 0 nil])
([nil nil ((327 . 340) (#("Stri" 0 4 (fontified nil)) . -327) (327 . 331) (#("SyntaxWarning" 0 13 (fontified nil)) . -327) (327 . 340) (#("String" 0 6 (fontified t match-data (0 3 0 1 1 2 2 3))) . -327) (undo-tree-id259 . -6) (undo-tree-id260 . -6) (undo-tree-id261 . -6) (undo-tree-id262 . -6) 333) nil (26509 12790 782525 123000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -327) (undo-tree-id246 . -1) (#("y" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -328) (undo-tree-id247 . -1) (#("n" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -329) (undo-tree-id248 . -1) (#("t" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -330) (undo-tree-id249 . -1) (#("a" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -331) (undo-tree-id250 . -1) (#("x" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -332) (undo-tree-id251 . -1) (#("W" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -333) (undo-tree-id252 . -1) (#("a" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -334) (undo-tree-id253 . -1) (#("r" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -335) (undo-tree-id254 . -1) (#("n" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -336) (undo-tree-id255 . -1) (#("i" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -337) (undo-tree-id256 . -1) (#("n" 0 1 (fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -338) (undo-tree-id257 . -1) (#("g" 0 1 (face py-exception-name-face fontified t match-data (0 13 0 1 3 4 8 9 10 11 11 12 12 13))) . -339) (undo-tree-id258 . -1) 340) nil (26509 12790 782520 957000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 326) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 327) nil (26509 12790 782513 271000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -324) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#(">" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -325) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 326) nil (26509 12790 782510 361000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 323) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 324) nil (26509 12790 782503 788000) 0 nil])
([nil nil ((323 . 324)) nil (26509 12790 782500 962000) 0 nil])
([nil nil ((324 . 333)) nil (26509 12790 782500 488000) 0 nil])
([nil nil ((333 . 351)) nil (26509 12790 782499 902000) 0 nil])
([nil nil ((345 . 363) (#("le" 0 2 (fontified nil)) . -345) (345 . 347) (#("ledger_transaction" 0 18 (fontified nil)) . -345) (345 . 363) (#("ledger" 0 6 (fontified t match-data (0 3 0 1 1 2 2 3))) . -345) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) 351) nil (26509 12790 782498 91000) 0 nil])
([nil nil ((363 . 368)) nil (26509 12790 782487 508000) 0 nil])
([nil nil ((368 . 369)) nil (26509 12790 782483 715000) 0 nil])
([nil nil ((371 . 375) (#("    " 0 4 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 370) (undo-tree-id308 . -4) (369 . 375) (t 26509 12790 792081 307000)) nil (26509 12817 838161 672000) 0 nil])
([nil nil ((375 . 383)) nil (26509 12817 838160 647000) 0 nil])
([nil nil ((376 . 384) (#("pro" 0 3 (fontified nil)) . -376) (376 . 379) (#("property" 0 8 (fontified nil)) . -376) (376 . 384) (#("propert" 0 7 (face py-decorators-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -376) (undo-tree-id304 . -7) (undo-tree-id305 . -7) (undo-tree-id306 . -7) (undo-tree-id307 . -7) 383) nil (26509 12817 838159 528000) 0 nil])
([nil nil ((384 . 389)) nil (26509 12817 838121 947000) 0 nil])
([nil nil ((389 . 403)) nil (26509 12817 838121 459000) 0 nil])
([nil nil ((403 . 404)) nil (26509 12817 838121 50000) 0 nil])
([nil nil ((404 . 413)) nil (26509 12817 838120 549000) 0 nil])
([nil nil ((413 . 426)) nil (26509 12817 838120 62000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -425) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 426) nil (26509 12817 838119 240000) 0 nil])
([nil nil ((425 . 428)) nil (26509 12817 838117 64000) 0 nil])
([nil nil ((425 . 439) (#("le" 0 2 (fontified nil)) . -425) (425 . 427) (#("ledger_posting" 0 14 (fontified nil)) . -425) (425 . 439) (#("led" 0 3 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -425) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) 428) nil (26509 12817 838114 837000) 0 nil])
([nil nil ((439 . 444)) nil (26509 12817 838086 620000) 0 nil])
([nil nil ((446 . 450) (#("    " 0 4 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 445) (undo-tree-id394 . -4) (444 . 450) (t 26509 12817 958021 23000)) nil (26509 13217 35481 703000) 0 nil])
([nil nil ((450 . 458)) nil (26509 13217 35480 257000) 0 nil])
([nil nil ((458 . 459)) nil (26509 13217 35479 740000) 0 nil])
([nil nil ((451 . 459) (#("pro" 0 3 (fontified nil)) . -451) (451 . 454) (#("property" 0 8 (face py-decorators-face fontified t match-data (0 3 0 1 1 2 2 3))) . -451) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) 459) nil (26509 13217 35478 968000) 0 nil])
([nil nil ((459 . 461)) nil (26509 13217 35476 622000) 0 nil])
([nil nil ((#("d" 0 1 (face py-decorators-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -459) (undo-tree-id388 . -1) (#("e" 0 1 (face py-decorators-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -460) (undo-tree-id389 . -1) 461) nil (26509 13217 35475 894000) 0 nil])
([nil nil ((459 . 464)) nil (26509 13217 35474 555000) 0 nil])
([nil nil ((464 . 478)) nil (26509 13217 35474 140000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -477) (undo-tree-id387 . -1) 478) nil (26509 13217 35473 537000) 0 nil])
([nil nil ((477 . 480)) nil (26509 13217 35472 611000) 0 nil])
([nil nil ((480 . 481)) nil (26509 13217 35472 26000) 0 nil])
([nil nil ((481 . 490)) nil (26509 13217 35471 586000) 0 nil])
([nil nil ((482 . 490) (#("        " 0 8 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 482)) nil (26509 13217 35471 69000) 0 nil])
([nil nil ((490 . 505)) nil (26509 13217 35470 461000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -504) (undo-tree-id386 . -1) 505) nil (26509 13217 35470 27000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -497) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("." 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -498) (undo-tree-id380 . -1) (#("a" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -499) (undo-tree-id381 . -1) (#("m" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -500) (undo-tree-id382 . -1) (#("o" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -501) (undo-tree-id383 . -1) (#("u" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -502) (undo-tree-id384 . -1) (#("n" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -503) (undo-tree-id385 . -1) 504) nil (26509 13217 35467 988000) 0 nil])
([nil nil ((497 . 505)) nil (26509 13217 35462 92000) 0 nil])
([nil nil ((502 . 516) (#("led" 0 3 (fontified nil)) . -502) (502 . 505) (#("ledger_posting" 0 14 (fontified nil)) . -502) (502 . 516) (#("led" 0 3 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -502) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) 505) nil (26509 13217 35459 12000) 0 nil])
([nil nil ((516 . 523)) nil (26509 13217 35297 599000) 0 nil])
([nil nil ((525 . 529) (#("    " 0 4 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 524) (undo-tree-id399 . -4) (523 . 529) (t 26509 13217 155432 439000)) nil (26509 13247 754486 970000) 0 nil])
([nil nil ((529 . 538)) nil (26509 13247 754485 731000) 0 nil])
([nil nil ((530 . 538) (#("pro" 0 3 (fontified nil)) . -530) (530 . 533) (#("property" 0 8 (face py-decorators-face fontified t match-data (0 3 0 1 1 2 2 3))) . -530) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) 538) nil (26509 13247 754484 742000) 0 nil])
([nil nil ((538 . 543)) nil (26509 13247 754474 445000) 0 nil])
([nil nil ((543 . 553)) nil (26509 13247 754474 91000) 0 nil])
([nil nil ((553 . 560)) nil (26509 13247 754473 683000) 0 nil])
([nil nil ((560 . 561)) nil (26509 13247 754473 223000) 0 nil])
([nil nil ((561 . 570)) nil (26509 13247 754472 747000) 0 nil])
([nil nil ((570 . 576)) nil (26509 13247 754472 315000) 0 nil])
([nil nil ((576 . 582)) nil (26509 13247 754471 760000) 0 nil])
([nil nil ((582 . 596) (#("ledger_posting" 0 14 (fontified nil)) . -582) (582 . 596)) nil (26509 13247 754470 216000) 0 nil])
([nil nil ((596 . 602)) nil (26509 13247 754465 983000) 0 nil])
([nil nil ((602 . 604) (t 26509 13247 875404 294000)) nil (26509 13260 811353 881000) 0 nil])
([nil nil ((604 . 605)) nil (26509 13260 811353 338000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 0))) . -603) (undo-tree-id402 . -1) (#("-" 0 1 (fontified t match-data (0 0))) . -604) (undo-tree-id403 . -1) 605) nil (26509 13260 811352 742000) 0 nil])
([nil nil ((603 . 607)) nil (26509 13260 811350 649000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 0))) . -606) (undo-tree-id401 . -1) 607) nil (26509 13260 811349 778000) 0 nil])
([nil nil ((606 . 612)) nil (26509 13260 811348 395000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 0))) . -611) (undo-tree-id400 . -1) 612) nil (26509 13260 811346 890000) 0 nil])
([nil nil ((611 . 626)) nil (26509 13260 811335 303000) 0 nil])
([nil nil ((628 . 632) (#("    " 0 4 (fontified nil match-data (0 0))) . 627) (undo-tree-id425 . -4) (626 . 632) (t 26509 13260 932392 877000)) nil (26509 13305 771921 271000) 0 nil])
([nil nil ((632 . 641)) nil (26509 13305 771918 562000) 0 nil])
([nil nil ((#("r" 0 1 (face py-def-face fontified t match-data (0 0))) . -640) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 641) nil (26509 13305 771917 857000) 0 nil])
([nil nil ((640 . 644)) nil (26509 13305 771915 706000) 0 nil])
([nil nil ((659 . 667) (#("    " 0 4 (fontified nil)) . 659) (636 . 667) (#("__re" 0 4 (fontified nil)) . 636) (636 . 640) (#("__repr__" 0 8 (face py-def-face fontified t match-data (0 0))) . -636) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) 644) nil (26509 13305 771914 851000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . -670) (undo-tree-id416 . -1) 671) nil (26509 13305 771911 786000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -667) (undo-tree-id413 . -1) (#("a" 0 1 (fontified t)) . -668) (undo-tree-id414 . -1) (#("s" 0 1 (fontified t)) . -669) (undo-tree-id415 . -1) 670) nil (26509 13305 771910 434000) 0 nil])
([nil nil ((667 . 676)) nil (26509 13305 771908 392000) 0 nil])
([nil nil ((676 . 697)) nil (26509 13305 771907 897000) 0 nil])
([nil nil ((697 . 711)) nil (26509 13305 771907 546000) 0 nil])
([nil nil ((711 . 732)) nil (26509 13305 771907 91000) 0 nil])
([nil nil ((732 . 736)) nil (26509 13305 771906 627000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -734) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -735) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) 736) nil (26509 13305 771905 719000) 0 nil])
([nil nil ((734 . 740)) nil (26509 13305 771901 70000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -739) (undo-tree-id404 . -1) 740) nil (26509 13305 771899 911000) 0 nil])
([nil nil ((739 . 747)) nil (26509 13305 771891 297000) 0 nil])
([nil nil ((747 . 749)) nil (26509 13305 771887 325000) 0 nil])
([nil nil ((747 . 748) (t 26509 13305 900355 910000)) nil (26509 13309 635306 304000) 0 nil])
([nil nil ((#("a" 0 1 (face py-def-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -219) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) 220 (t 26509 13309 755352 904000)) nil (26509 13316 750753 895000) 0 nil])
([nil current ((219 . 220)) nil (26509 13316 750723 875000) 0 nil])
nil

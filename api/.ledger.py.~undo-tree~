(undo-tree-save-format-version . 1)
"be3a76c62003ce74d3f0b0fee1445094013ad84d"
[nil nil nil nil (26478 42465 191489 220000) 0 nil]
([nil nil ((1 . 19) (t 26478 42265 766468 307000)) nil (26478 42465 191488 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 18) (undo-tree-id82 . -1) (19 . 20)) nil (26478 42465 191486 898000) 0 nil])
([nil nil ((19 . 40)) nil (26478 42465 191485 604000) 0 nil])
([nil nil ((40 . 42)) nil (26478 42465 191484 795000) 0 nil])
([nil nil ((42 . 52)) nil (26478 42465 191483 886000) 0 nil])
([nil nil ((44 . 52) (#("Opt" 0 3 (fontified nil)) . -44) (44 . 47) (#("Optional" 0 8 (fontified t)) . -44) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) 52) nil (26478 42465 191482 713000) 0 nil])
([nil nil ((52 . 54)) nil (26478 42465 191480 3000) 0 nil])
([nil nil ((54 . 66)) nil (26478 42465 191479 601000) 0 nil])
([nil nil ((66 . 67)) nil (26478 42465 191478 978000) 0 nil])
([nil nil ((67 . 72)) nil (26478 42465 191478 171000) 0 nil])
([nil nil ((72 . 90)) nil (26478 42465 191477 14000) 0 nil])
([nil nil ((89 . 95)) nil (26478 42465 191476 407000) 0 nil])
([nil nil ((95 . 102)) nil (26478 42465 191475 834000) 0 nil])
([nil nil ((102 . 103)) nil (26478 42465 191475 330000) 0 nil])
([nil nil ((103 . 107)) nil (26478 42465 191474 675000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -104) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("t" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -105) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("r" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -106) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 107) nil (26478 42465 191473 375000) 0 nil])
([nil nil ((104 . 107)) nil (26478 42465 191467 44000) 0 nil])
([nil nil ((108 . 109)) nil (26478 42465 191466 308000) 0 nil])
([nil nil ((109 . 118)) nil (26478 42465 191465 561000) 0 nil])
([nil nil ((nil rear-nonsticky nil 285 . 286) (nil fontified nil 118 . 286) (118 . 286)) nil (26478 42465 191464 788000) 0 nil])
([nil nil ((110 . 118) (#("                " 0 8 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 8 16 (fontified t)) . 110) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -11) 121) nil (26478 42465 191463 973000) 0 nil])
([nil nil ((278 . 287)) nil (26478 42465 191460 409000) 0 nil])
([nil nil ((287 . 303)) nil (26478 42465 191459 720000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -300) (undo-tree-id60 . -1) (#("l" 0 1 (fontified t)) . -301) (undo-tree-id61 . -1) (#("e" 0 1 (fontified t)) . -302) (undo-tree-id62 . -1) 303) nil (26478 42465 191458 807000) 0 nil])
([nil nil ((300 . 313)) nil (26478 42465 191456 359000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -312) (undo-tree-id59 . -1) 313) nil (26478 42465 191455 545000) 0 nil])
([nil nil ((312 . 316)) nil (26478 42465 191454 122000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -314) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("e" 0 1 (fontified t)) . -315) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 316) nil (26478 42465 191451 467000) 0 nil])
([nil nil ((314 . 317)) nil (26478 42465 191405 460000) 0 nil])
([nil nil ((317 . 318)) nil (26478 42465 191401 447000) 0 nil])
([nil nil ((319 . 327) (#("        " 0 8 (fontified nil)) . 318) (undo-tree-id113 . -8) (317 . 327) (t 26478 42465 238322 363000)) nil (26478 42487 865394 78000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 323) (undo-tree-id112 . -4) 327) nil (26478 42487 865391 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1017 . 1018) (nil fontified nil 323 . 1018) (323 . 1018)) nil (26478 42487 865390 91000) 0 nil])
([nil nil ((319 . 323) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 319) (undo-tree-id83 . -4) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) (undo-tree-id102 . -8) (undo-tree-id103 . -8) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) 327) nil (26478 42487 865385 355000) 0 nil])
([nil nil ((1017 . 1025) (#("        " 0 8 (fontified nil)) . 1016) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) (undo-tree-id229 . -8) (undo-tree-id230 . -8) (undo-tree-id231 . -8) (undo-tree-id232 . -8) (undo-tree-id233 . -8) (undo-tree-id234 . -8) (undo-tree-id235 . -8) (undo-tree-id236 . -8) (undo-tree-id237 . -8) (undo-tree-id238 . -8) (undo-tree-id239 . -8) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . -8) (undo-tree-id249 . -8) (undo-tree-id250 . -8) (undo-tree-id251 . -8) (undo-tree-id252 . -8) (undo-tree-id253 . -8) (undo-tree-id254 . -8) (undo-tree-id255 . -8) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (1015 . 1025) (t 26478 42487 984210 765000)) nil (26478 42527 689797 244000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1021) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) 1025) nil (26478 42527 689770 75000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1393 . 1394) (nil fontified nil 1021 . 1394) (1021 . 1394)) nil (26478 42527 689761 604000) 0 nil])
([nil nil ((1017 . 1021) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 1017) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) (undo-tree-id168 . -8) (undo-tree-id169 . -8) (undo-tree-id170 . -8) (undo-tree-id171 . -8) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -8) (undo-tree-id182 . -8) (undo-tree-id183 . -8) (undo-tree-id184 . -8) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -8) (undo-tree-id191 . -8) (undo-tree-id192 . -8) (undo-tree-id193 . -8) (undo-tree-id194 . -8) (undo-tree-id195 . -8) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -8) (undo-tree-id200 . -8) (undo-tree-id201 . -8) 1025) nil (26478 42527 689758 16000) 0 nil])
([nil nil ((1390 . 1391) 1021) nil (26478 42527 689551 745000) 0 nil])
([nil nil ((#("    def balance(self, account: Optional[str] = None) -> str:
        \"\"\"
        Get the balance of the ledger or a specific account.
        
        :param account: The account to query (optional).
        :return: Balance as a string.
        \"\"\"
        command = [\"bal\"]
        if account:
            command.append(account)
        return self.run_command(*command)
" 0 4 (fontified t) 4 7 (face py-def-class-face fontified t) 7 8 (fontified t) 8 15 (face py-def-face fontified t) 15 16 (face (rainbow-delimiters-depth-1-face) fontified t) 16 20 (face py-object-reference-face fontified t) 20 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 43 (face py-builtins-face fontified t) 43 44 (face (rainbow-delimiters-depth-2-face) fontified t) 44 47 (fontified t) 47 51 (face py-pseudo-keyword-face fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 56 (fontified t) 56 59 (face py-builtins-face fontified t) 59 61 (fontified t) 61 69 (fontified t) 69 70 (face font-lock-string-face syntax-table (15) fontified t) 70 71 (face font-lock-string-face syntax-table nil fontified t) 71 72 (face font-lock-string-face syntax-table nil fontified t) 72 246 (face font-lock-string-face fontified t) 246 247 (face font-lock-string-face syntax-table nil fontified t) 247 248 (face font-lock-string-face syntax-table nil fontified t) 248 249 (face font-lock-string-face syntax-table (15) fontified t) 249 258 (fontified t) 258 265 (face py-variable-name-face fontified t) 265 266 (fontified t) 266 267 (face font-lock-operator-face fontified t) 267 268 (fontified t) 268 269 (face (rainbow-delimiters-depth-1-face) fontified t) 269 274 (face font-lock-string-face fontified t) 274 275 (face (rainbow-delimiters-depth-1-face) fontified t) 275 284 (fontified t) 284 286 (face font-lock-keyword-face fontified t) 286 322 (fontified t) 322 323 (face (rainbow-delimiters-depth-1-face) fontified t) 323 330 (fontified t) 330 331 (face (rainbow-delimiters-depth-1-face) fontified t) 331 332 (fontified t) 332 340 (fontified t) 340 346 (face font-lock-keyword-face fontified t) 346 347 (fontified t) 347 351 (face py-object-reference-face fontified t) 351 363 (fontified t) 363 364 (face (rainbow-delimiters-depth-1-face) fontified t) 364 372 (fontified t) 372 373 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 373 374 (fontified t)) . 1017) (undo-tree-id326 . -374) (undo-tree-id327 . -374) (undo-tree-id328 . -374) (undo-tree-id329 . -4) (t 26478 42527 808023 269000)) nil (26478 42803 215126 529000) 0 nil])
([nil nil ((1017 . 1025)) nil (26478 42803 215124 234000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1021) (undo-tree-id325 . -4) 1025) nil (26478 42803 215123 297000) 0 nil])
([nil nil ((1021 . 1022)) nil (26478 42803 215122 1000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -1021) (undo-tree-id324 . -1) 1022) nil (26478 42803 215121 225000) 0 nil])
([nil nil ((1021 . 1042)) nil (26478 42803 215120 302000) 0 nil])
([nil nil ((1042 . 1043)) nil (26478 42803 215119 988000) 0 nil])
([nil nil ((1043 . 1044)) nil (26478 42803 215119 464000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1043) (undo-tree-id323 . -1) 1044) nil (26478 42803 215118 791000) 0 nil])
([nil nil ((1043 . 1046)) nil (26478 42803 215117 733000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t)) . -1044) (undo-tree-id321 . -1) (#(">" 0 1 (fontified t)) . -1045) (undo-tree-id322 . -1) 1046) nil (26478 42803 215116 991000) 0 nil])
([nil nil ((1044 . 1051)) nil (26478 42803 215115 451000) 0 nil])
([nil nil ((#("    def get_accounts(self) -> List" 0 4 (fontified t) 4 7 (face py-def-class-face fontified t) 7 8 (fontified t) 8 20 (face py-def-face fontified t) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t) 21 25 (face py-object-reference-face fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) fontified t) 26 34 (fontified t)) . 1017) (undo-tree-id317 . -30) (undo-tree-id318 . -34) (undo-tree-id319 . -34) (undo-tree-id320 . -34)) nil (26478 42803 215114 663000) 0 nil])
([nil nil ((1017 . 1025)) nil (26478 42803 215111 933000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1021) (undo-tree-id316 . -4) 1025) nil (26478 42803 215110 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1054 . 1055) (nil fontified nil 1047 . 1055) (nil fontified nil 1046 . 1047) (nil fontified nil 1042 . 1046) (nil fontified nil 1041 . 1042) (nil fontified nil 1029 . 1041) (nil fontified nil 1028 . 1029) (nil fontified nil 1025 . 1028) (nil fontified nil 1021 . 1025) (1021 . 1055)) nil (26478 42803 215109 111000) 0 nil])
([nil nil ((#("        def get_accounts(self) -> List" 0 4 (fontified t) 4 8 (fontified t) 8 11 (face py-def-class-face fontified t) 11 12 (fontified t) 12 24 (face py-def-face fontified t) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t) 25 29 (face py-object-reference-face fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 37 (fontified t) 37 38 (rear-nonsticky t fontified t)) . 1017) (undo-tree-id314 . -4) (undo-tree-id315 . -38)) nil (26478 42803 215106 652000) 0 nil])
([nil nil ((1017 . 1025)) nil (26478 42803 215104 647000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1021) (undo-tree-id313 . -4) 1025) nil (26478 42803 215102 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1339 . 1340) (nil fontified nil 1021 . 1340) (1021 . 1340)) nil (26478 42803 215100 576000) 0 nil])
([nil nil ((1017 . 1021) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 1017) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) 1059) nil (26478 42803 215097 708000) 0 nil])
([nil nil ((1336 . 1337) 1021) nil (26478 42803 214919 725000) 0 nil])
([nil nil ((1337 . 1342) (t 26478 42803 224949 135000)) nil (26478 43101 91877 498000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2178 . 2179) (nil fontified nil 1342 . 2179) (1342 . 2179)) nil (26478 43101 91875 985000) 0 nil])
([nil current ((2179 . 2180) 1342) nil (26478 43101 91870 710000) 0 nil])
nil

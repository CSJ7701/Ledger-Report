(undo-tree-save-format-version . 1)
"7851a9ba4f77e1950ef0e3cd36090eafd4173c8a"
[nil nil nil nil (26509 11527 483244 712000) 0 nil]
([nil nil ((1 . 13) (t 26509 11479 422978 31000)) nil (26509 11527 483243 797000) 0 nil])
([nil nil ((13 . 14)) nil (26509 11527 483243 264000) 0 nil])
([nil nil ((#("L" 0 1 (face py-class-name-face fontified t)) . -7) (undo-tree-id40 . -1) (#("e" 0 1 (face py-class-name-face fontified t)) . -8) (undo-tree-id41 . -1) (#("d" 0 1 (face py-class-name-face fontified t)) . -9) (undo-tree-id42 . -1) (#("g" 0 1 (face py-class-name-face fontified t)) . -10) (undo-tree-id43 . -1) (#("e" 0 1 (face py-class-name-face fontified t)) . -11) (undo-tree-id44 . -1) (#("r" 0 1 (face py-class-name-face fontified t)) . -12) (undo-tree-id45 . -1) (#(":" 0 1 (fontified t)) . -13) (undo-tree-id46 . -1) 14) nil (26509 11527 483242 88000) 0 nil])
([nil nil ((7 . 14)) nil (26509 11527 483238 266000) 0 nil])
([nil nil ((14 . 15)) nil (26509 11527 483237 844000) 0 nil])
([nil nil ((15 . 20)) nil (26509 11527 483237 433000) 0 nil])
([nil nil ((20 . 24)) nil (26509 11527 483237 29000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -23) (undo-tree-id39 . -1) 24) nil (26509 11527 483236 441000) 0 nil])
([nil nil ((23 . 30)) nil (26509 11527 483235 483000) 0 nil])
([nil nil ((30 . 51)) nil (26509 11527 483235 83000) 0 nil])
([nil nil ((51 . 52)) nil (26509 11527 483234 497000) 0 nil])
([nil nil ((52 . 61)) nil (26509 11527 483234 99000) 0 nil])
([nil nil ((61 . 68)) nil (26509 11527 483233 554000) 0 nil])
([nil nil ((#("        import " 0 8 (fontified t) 8 14 (face py-import-from-face fontified t) 14 15 (fontified t)) . 53) (undo-tree-id35 . -8) (undo-tree-id36 . -14) (undo-tree-id37 . -14) (undo-tree-id38 . -14)) nil (26509 11527 483233 11000) 0 nil])
([nil nil ((1 . 2) (1 . 2)) nil (26509 11527 483230 809000) 0 nil])
([nil nil ((1 . 8)) nil (26509 11527 483230 308000) 0 nil])
([nil nil ((8 . 14)) nil (26509 11527 483229 864000) 0 nil])
([nil nil ((8 . 14) (#("led" 0 3 (fontified nil)) . -8) (8 . 11) (#("ledger" 0 6 (fontified t)) . -8) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) 14) nil (26509 11527 483229 99000) 0 nil])
([nil nil ((68 . 76)) nil (26509 11527 483226 770000) 0 nil])
([nil nil ((76 . 82)) nil (26509 11527 483226 273000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -81) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 82) nil (26509 11527 483225 611000) 0 nil])
([nil nil ((81 . 102)) nil (26509 11527 483223 567000) 0 nil])
([nil nil ((102 . 121)) nil (26509 11527 483222 963000) 0 nil])
([nil nil ((#("9" 0 1 (face py-number-face fontified t)) . -111) (undo-tree-id17 . -1) (#("l" 0 1 (fontified t)) . -112) (undo-tree-id18 . -1) (#("e" 0 1 (fontified t)) . -113) (undo-tree-id19 . -1) (#("d" 0 1 (fontified t)) . -114) (undo-tree-id20 . -1) (#("g" 0 1 (fontified t)) . -115) (undo-tree-id21 . -1) (#("e" 0 1 (fontified t)) . -116) (undo-tree-id22 . -1) (#("r" 0 1 (fontified t)) . -117) (undo-tree-id23 . -1) (#("_" 0 1 (fontified t)) . -118) (undo-tree-id24 . -1) (#("f" 0 1 (fontified t)) . -119) (undo-tree-id25 . -1) (#("i" 0 1 (fontified t)) . -120) (undo-tree-id26 . -1) 121) nil (26509 11527 483221 311000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 110) (undo-tree-id16 . -1) 111) nil (26509 11527 483215 588000) 0 nil])
([nil nil ((110 . 113)) nil (26509 11527 483214 460000) 0 nil])
([nil nil ((111 . 122) (#("le" 0 2 (fontified nil)) . -111) (111 . 113) (#("ledger_file" 0 11 (fontified nil)) . -111) (111 . 122) (#("le" 0 2 (fontified t)) . -111) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) 113) nil (26509 11527 483212 665000) 0 nil])
([nil nil ((122 . 123)) nil (26509 11527 483188 429000) 0 nil])
([nil nil ((123 . 124)) nil (26509 11527 483184 729000) 0 nil])
([nil nil ((123 . 132) (t 26509 11527 587061 985000)) nil (26509 11536 372860 980000) 0 nil])
([nil nil ((132 . 153)) nil (26509 11536 372859 611000) 0 nil])
([nil nil ((153 . 168)) nil (26509 11536 372855 418000) 0 nil])
([nil nil ((170 . 178) (#("        " 0 8 (fontified nil match-data (0 2 0 1 1 2))) . 169) (undo-tree-id48 . -8) (168 . 178) (t 26509 11536 493077 945000)) nil (26509 11553 187317 363000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 2 0 1 1 2))) . 174) (undo-tree-id47 . -4) 178) nil (26509 11553 187314 757000) 0 nil])
([nil nil ((174 . 179)) nil (26509 11553 187306 28000) 0 nil])
([nil nil ((179 . 200)) nil (26509 11553 187305 212000) 0 nil])
([nil nil ((200 . 209)) nil (26509 11553 187304 470000) 0 nil])
([nil nil ((209 . 210)) nil (26509 11553 187303 911000) 0 nil])
([nil nil ((210 . 219)) nil (26509 11553 187303 221000) 0 nil])
([nil nil ((219 . 240)) nil (26509 11553 187302 167000) 0 nil])
([nil nil ((240 . 257)) nil (26509 11553 187298 219000) 0 nil])
([nil nil ((164 . 165) (t 26509 11553 306108 428000)) nil (26509 11559 981695 133000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -164) (undo-tree-id49 . -1) 165) nil (26509 11559 981693 262000) 0 nil])
([nil nil ((144 . 145)) nil (26509 11559 981682 308000) 0 nil])
([nil nil ((260 . 264) (#("    " 0 4 (fontified nil match-data (0 2 0 1 1 2))) . 259) (undo-tree-id59 . -4) (258 . 264) (t 26509 11559 995120 681000)) nil (26509 11682 93872 929000) 0 nil])
([nil nil ((264 . 267)) nil (26509 11682 93871 685000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -266) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 267) nil (26509 11682 93870 905000) 0 nil])
([nil nil ((266 . 287)) nil (26509 11682 93868 889000) 0 nil])
([nil nil ((287 . 296)) nil (26509 11682 93868 459000) 0 nil])
([nil nil ((#("u" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -293) (undo-tree-id52 . -1) (#("n" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -294) (undo-tree-id53 . -1) (#("t" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -295) (undo-tree-id54 . -1) 296) nil (26509 11682 93867 614000) 0 nil])
([nil nil ((293 . 295)) nil (26509 11682 93865 579000) 0 nil])
([nil nil ((#("n" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -293) (undo-tree-id50 . -1) (#("t" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -294) (undo-tree-id51 . -1) 295) nil (26509 11682 93864 408000) 0 nil])
([nil nil ((293 . 314)) nil (26509 11682 93855 514000) 0 nil])
([nil nil ((314 . 316)) nil (26509 11682 93855 127000) 0 nil])
([nil nil ((316 . 317)) nil (26509 11682 93854 722000) 0 nil])
([nil nil ((317 . 326)) nil (26509 11682 93854 335000) 0 nil])
([nil nil ((326 . 347)) nil (26509 11682 93853 939000) 0 nil])
([nil nil ((347 . 352)) nil (26509 11682 93853 542000) 0 nil])
([nil nil ((352 . 366)) nil (26509 11682 93853 162000) 0 nil])
([nil nil ((366 . 375)) nil (26509 11682 93852 770000) 0 nil])
([nil nil ((375 . 385)) nil (26509 11682 93852 378000) 0 nil])
([nil nil ((385 . 386)) nil (26509 11682 93851 994000) 0 nil])
([nil nil ((386 . 399)) nil (26509 11682 93851 529000) 0 nil])
([nil nil ((399 . 415)) nil (26509 11682 93850 841000) 0 nil])
([nil nil ((415 . 426)) nil (26509 11682 93850 382000) 0 nil])
([nil nil ((426 . 435)) nil (26509 11682 93849 399000) 0 nil])
([nil nil ((435 . 444)) nil (26509 11682 93845 579000) 0 nil])
([nil nil ((386 . 399) (t 26509 11682 213356 60000)) nil (26509 11751 525148 130000) 0 nil])
([nil nil ((399 . 400)) nil (26509 11751 525147 570000) 0 nil])
([nil nil ((400 . 421)) nil (26509 11751 525147 84000) 0 nil])
([nil nil ((421 . 433)) nil (26509 11751 525146 700000) 0 nil])
([nil nil ((258 . 263)) nil (26509 11751 525146 233000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 2 0 1 1 2))) . 259) (undo-tree-id70 . -4) 263) nil (26509 11751 525145 735000) 0 nil])
([nil nil ((259 . 263)) nil (26509 11751 525144 762000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 2 0 1 1 2))) . 259) (undo-tree-id69 . -4) 263) nil (26509 11751 525144 202000) 0 nil])
([nil nil ((259 . 263)) nil (26509 11751 525143 131000) 0 nil])
([nil nil ((211 . 220)) nil (26509 11751 525142 739000) 0 nil])
([nil nil ((220 . 221)) nil (26509 11751 525142 338000) 0 nil])
([nil nil ((221 . 233)) nil (26509 11751 525141 912000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2))) . -230) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2))) . -231) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2))) . -232) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 233) nil (26509 11751 525140 334000) 0 nil])
([nil nil ((230 . 251)) nil (26509 11751 525128 802000) 0 nil])
([nil nil ((251 . 254)) nil (26509 11751 525125 11000) 0 nil])
([nil nil ((541 . 545) (#("    " 0 4 (fontified nil match-data (0 2 0 1 1 2))) . 540) (undo-tree-id82 . -4) (539 . 545) (t 26509 11751 644498 316000)) nil (26509 11800 897654 595000) 0 nil])
([nil nil ((545 . 554)) nil (26509 11800 897653 373000) 0 nil])
([nil nil ((#("u" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -552) (undo-tree-id80 . -1) (#("c" 0 1 (face py-def-face fontified t match-data (0 2 0 1 1 2))) . -553) (undo-tree-id81 . -1) 554) nil (26509 11800 897652 552000) 0 nil])
([nil nil ((552 . 573)) nil (26509 11800 897651 214000) 0 nil])
([nil nil ((573 . 586)) nil (26509 11800 897650 814000) 0 nil])
([nil nil ((586 . 587)) nil (26509 11800 897650 431000) 0 nil])
([nil nil ((587 . 596)) nil (26509 11800 897650 36000) 0 nil])
([nil nil ((596 . 597)) nil (26509 11800 897649 455000) 0 nil])
([nil nil ((597 . 618)) nil (26509 11800 897649 44000) 0 nil])
([nil nil ((618 . 622)) nil (26509 11800 897648 580000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -620) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("n" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -621) (undo-tree-id79 . -1) 622) nil (26509 11800 897647 692000) 0 nil])
([nil nil ((620 . 631)) nil (26509 11800 897643 264000) 0 nil])
([nil nil ((623 . 635) (#("acc" 0 3 (fontified nil)) . -623) (623 . 626) (#("account_name" 0 12 (fontified nil)) . -623) (623 . 635) (#("account_" 0 8 (fontified t match-data (0 2 0 1 1 2))) . -623) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) 631) nil (26509 11800 897641 653000) 0 nil])
([nil nil ((635 . 636)) nil (26509 11800 897631 162000) 0 nil])
([nil nil ((636 . 645)) nil (26509 11800 897630 768000) 0 nil])
([nil nil ((645 . 655)) nil (26509 11800 897630 200000) 0 nil])
([nil nil ((655 . 656)) nil (26509 11800 897629 545000) 0 nil])
([nil nil ((656 . 669)) nil (26509 11800 897629 43000) 0 nil])
([nil nil ((669 . 689)) nil (26509 11800 897628 554000) 0 nil])
([nil nil ((689 . 698)) nil (26509 11800 897627 617000) 0 nil])
([nil nil ((698 . 706)) nil (26509 11800 897623 464000) 0 nil])
([nil nil ((#("i" 0 1 (face py-import-from-face fontified t)) . 1) (t 26509 11801 36602 724000)) nil (26509 11894 336126 695000) 0 nil])
([nil nil ((#("mport ledger

class Journal:
    def __init__(self, ledger_file):
        self.journal = ledger.read_journal(ledger_file)
        self.accounts = self.journal.accounts

    def get_account(self, account_name):
        # Need to fetch accounts manually.
        return self.accounts.get(account_name)
    

    def get_transactions_for_account(self, account_name):
        account = self.get_account(account_name)
        if account:
            # account.posts() returns iterator
            return account.transactions
        return []

    def calculate_balance(self, account_name):
        account = self.get_account(account_name)
        if account:
            return account.total
        return 0
" 0 5 (fontified t) 5 6 (fontified t) 6 12 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 12 13 (fontified t) 13 14 (fontified t) 14 19 (face py-def-class-face fontified t) 19 20 (fontified t) 20 27 (face py-class-name-face fontified t) 27 29 (fontified t) 29 33 (fontified t) 33 36 (face py-def-class-face fontified t) 36 37 (fontified t) 37 45 (face py-def-face fontified t) 45 46 (face (rainbow-delimiters-depth-1-face) fontified t) 46 50 (face py-object-reference-face fontified t) 50 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-1-face) fontified t) 64 66 (fontified t) 66 74 (fontified t) 74 78 (face py-object-reference-face fontified t) 78 79 (fontified t) 79 86 (face py-variable-name-face fontified t) 86 87 (fontified t) 87 88 (face font-lock-operator-face fontified t) 88 108 (fontified t) 108 109 (face (rainbow-delimiters-depth-1-face) fontified t) 109 120 (fontified t match-data (0 2 0 1 1 2)) 120 121 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 121 122 (fontified t match-data (0 2 0 1 1 2)) 122 130 (fontified t match-data (0 2 0 1 1 2)) 130 134 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 134 135 (fontified t match-data (0 2 0 1 1 2)) 135 143 (face py-variable-name-face fontified t match-data (0 2 0 1 1 2)) 143 144 (fontified t match-data (0 2 0 1 1 2)) 144 145 (face font-lock-operator-face fontified t match-data (0 2 0 1 1 2)) 145 146 (fontified t match-data (0 2 0 1 1 2)) 146 150 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 150 168 (fontified t match-data (0 2 0 1 1 2)) 168 169 (fontified t match-data (0 2 0 1 1 2)) 169 173 (fontified t match-data (0 2 0 1 1 2)) 173 176 (face py-def-class-face fontified t match-data (0 2 0 1 1 2)) 176 177 (fontified t match-data (0 2 0 1 1 2)) 177 188 (face py-def-face fontified t match-data (0 2 0 1 1 2)) 188 189 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 189 193 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 193 207 (fontified t match-data (0 2 0 1 1 2)) 207 208 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 208 210 (fontified t match-data (0 2 0 1 1 2)) 210 218 (fontified t match-data (0 2 0 1 1 2)) 218 253 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2)) 253 261 (fontified t match-data (0 2 0 1 1 2)) 261 267 (face font-lock-keyword-face fontified t match-data (0 2 0 1 1 2)) 267 268 (fontified t match-data (0 2 0 1 1 2)) 268 272 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 272 285 (fontified t match-data (0 2 0 1 1 2)) 285 286 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 286 298 (fontified t match-data (0 2 0 1 1 2)) 298 299 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 299 300 (fontified t match-data (0 2 0 1 1 2)) 300 304 (fontified t match-data (0 2 0 1 1 2)) 304 305 (fontified t match-data (0 2 0 1 1 2)) 305 306 (fontified t match-data (0 2 0 1 1 2)) 306 310 (fontified t match-data (0 2 0 1 1 2)) 310 313 (face py-def-class-face fontified t match-data (0 2 0 1 1 2)) 313 314 (fontified t match-data (0 2 0 1 1 2)) 314 342 (face py-def-face fontified t match-data (0 2 0 1 1 2)) 342 343 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 343 347 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 347 361 (fontified t match-data (0 2 0 1 1 2)) 361 362 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 362 364 (fontified t match-data (0 2 0 1 1 2)) 364 372 (fontified t match-data (0 2 0 1 1 2)) 372 379 (face py-variable-name-face fontified t match-data (0 2 0 1 1 2)) 379 380 (fontified t match-data (0 2 0 1 1 2)) 380 381 (face font-lock-operator-face fontified t match-data (0 2 0 1 1 2)) 381 382 (fontified t match-data (0 2 0 1 1 2)) 382 386 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 386 398 (fontified t match-data (0 2 0 1 1 2)) 398 399 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 399 411 (fontified t match-data (0 2 0 1 1 2)) 411 412 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 412 413 (fontified t match-data (0 2 0 1 1 2)) 413 421 (fontified t match-data (0 2 0 1 1 2)) 421 423 (face font-lock-keyword-face fontified t match-data (0 2 0 1 1 2)) 423 433 (fontified t match-data (0 2 0 1 1 2)) 433 445 (fontified t match-data (0 2 0 1 1 2)) 445 480 (face font-lock-comment-face fontified t match-data (0 2 0 1 1 2)) 480 492 (fontified t match-data (0 2 0 1 1 2)) 492 498 (face font-lock-keyword-face fontified t match-data (0 2 0 1 1 2)) 498 520 (fontified t match-data (0 2 0 1 1 2)) 520 528 (fontified t match-data (0 2 0 1 1 2)) 528 534 (face font-lock-keyword-face fontified t match-data (0 2 0 1 1 2)) 534 535 (fontified t match-data (0 2 0 1 1 2)) 535 536 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 536 537 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 537 538 (fontified t match-data (0 2 0 1 1 2)) 538 539 (fontified t match-data (0 2 0 1 1 2)) 539 543 (fontified t match-data (0 2 0 1 1 2)) 543 546 (face py-def-class-face fontified t match-data (0 2 0 1 1 2)) 546 547 (fontified t match-data (0 2 0 1 1 2)) 547 564 (face py-def-face fontified t match-data (0 2 0 1 1 2)) 564 565 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 565 569 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 569 583 (fontified t match-data (0 2 0 1 1 2)) 583 584 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 584 586 (fontified t match-data (0 2 0 1 1 2)) 586 594 (fontified t match-data (0 2 0 1 1 2)) 594 601 (face py-variable-name-face fontified t match-data (0 2 0 1 1 2)) 601 602 (fontified t match-data (0 2 0 1 1 2)) 602 603 (face font-lock-operator-face fontified t match-data (0 2 0 1 1 2)) 603 604 (fontified t match-data (0 2 0 1 1 2)) 604 608 (face py-object-reference-face fontified t match-data (0 2 0 1 1 2)) 608 620 (fontified t match-data (0 2 0 1 1 2)) 620 621 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2)) 621 633 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 633 634 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 634 635 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 635 643 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 643 645 (face font-lock-keyword-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 645 655 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 655 667 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 667 673 (face font-lock-keyword-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 673 688 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 688 696 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 696 702 (face font-lock-keyword-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 702 703 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 703 704 (face py-number-face fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 704 705 (fontified t)) . 1) (undo-tree-id83 . -696) (undo-tree-id84 . -702) (undo-tree-id85 . -702) (undo-tree-id86 . -705) (undo-tree-id87 . -519) (undo-tree-id88 . -621) (undo-tree-id89 . 1) (undo-tree-id90 . -519) (undo-tree-id91 . -704) (undo-tree-id92 . -705) (undo-tree-id93 . -702)) nil (26509 11894 336122 429000) 0 nil])
([nil nil ((1 . 14) (t 26509 11894 455765 447000)) nil (26509 11955 723459 165000) 0 nil])
([nil nil ((8 . 14) (#("led" 0 3 (fontified nil)) . -8) (8 . 11) (#("ledger" 0 6 (fontified t)) . -8) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) 14) nil (26509 11955 723458 254000) 0 nil])
([nil nil ((14 . 16)) nil (26509 11955 723455 892000) 0 nil])
([nil nil ((16 . 18)) nil (26509 11955 723455 477000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -17) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 18) nil (26509 11955 723454 885000) 0 nil])
([nil nil ((17 . 29)) nil (26509 11955 723452 917000) 0 nil])
([nil nil ((29 . 30)) nil (26509 11955 723452 617000) 0 nil])
([nil nil ((30 . 35)) nil (26509 11955 723452 225000) 0 nil])
([nil nil ((35 . 47)) nil (26509 11955 723451 900000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -45) (undo-tree-id121 . -1) (#("-" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -46) (undo-tree-id122 . -1) 47) nil (26509 11955 723451 263000) 0 nil])
([nil nil ((45 . 50)) nil (26509 11955 723450 8000) 0 nil])
([nil nil ((50 . 66)) nil (26509 11955 723449 587000) 0 nil])
([nil nil ((66 . 67)) nil (26509 11955 723449 229000) 0 nil])
([nil nil ((67 . 76)) nil (26509 11955 723448 807000) 0 nil])
([nil nil ((76 . 84)) nil (26509 11955 723448 406000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -81) (undo-tree-id118 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -82) (undo-tree-id119 . -1) (#("u" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -83) (undo-tree-id120 . -1) 84) nil (26509 11955 723447 546000) 0 nil])
([nil nil ((81 . 85)) nil (26509 11955 723445 685000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -81) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -82) (undo-tree-id115 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -83) (undo-tree-id116 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -84) (undo-tree-id117 . -1) 85) nil (26509 11955 723444 720000) 0 nil])
([nil nil ((81 . 88)) nil (26509 11955 723441 364000) 0 nil])
([nil nil ((88 . 96)) nil (26509 11955 723441 61000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -91) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -92) (undo-tree-id107 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -93) (undo-tree-id108 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -94) (undo-tree-id109 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -95) (undo-tree-id110 . -1) 96) nil (26509 11955 723439 925000) 0 nil])
([nil nil ((91 . 112)) nil (26509 11955 723365 802000) 0 nil])
([nil nil ((112 . 115)) nil (26509 11955 723365 417000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -114) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 115) nil (26509 11955 723364 768000) 0 nil])
([nil nil ((114 . 117)) nil (26509 11955 723362 298000) 0 nil])
([nil nil ((117 . 126)) nil (26509 11955 723361 913000) 0 nil])
([nil nil ((126 . 138)) nil (26509 11955 723361 513000) 0 nil])
([nil nil ((138 . 147)) nil (26509 11955 723361 109000) 0 nil])
([nil nil ((147 . 148)) nil (26509 11955 723360 664000) 0 nil])
([nil nil ((#("        self.accounts = {name:" 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 8 12 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 12 13 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 13 21 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 21 22 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 22 23 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 23 24 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 24 25 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 25 30 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 118) (undo-tree-id95 . -25) (undo-tree-id96 . -29) (undo-tree-id97 . -29) (undo-tree-id98 . -29)) nil (26509 11955 723359 994000) 0 nil])
([nil nil ((118 . 126)) nil (26509 11955 723356 724000) 0 nil])
([nil nil ((126 . 127)) nil (26509 11955 723356 302000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -126) (undo-tree-id94 . -1) 127) nil (26509 11955 723355 203000) 0 nil])
([nil nil ((126 . 127)) nil (26509 11955 723347 584000) 0 nil])
([nil nil ((127 . 144)) nil (26509 11955 723346 621000) 0 nil])
([nil nil ((144 . 145)) nil (26509 11955 723342 339000) 0 nil])
([nil nil ((146 . 154) (#("        " 0 8 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 145) (undo-tree-id132 . -8) (144 . 154) (t 26509 11955 843982 951000)) nil (26509 11973 828004 320000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 150) (undo-tree-id131 . -4) 154) nil (26509 11973 828001 965000) 0 nil])
([nil nil ((150 . 161)) nil (26509 11973 827994 140000) 0 nil])
([nil nil ((161 . 182)) nil (26509 11973 827993 680000) 0 nil])
([nil nil ((182 . 186)) nil (26509 11973 827993 369000) 0 nil])
([nil nil ((186 . 187)) nil (26509 11973 827992 977000) 0 nil])
([nil nil ((187 . 196)) nil (26509 11973 827992 409000) 0 nil])
([nil nil ((196 . 217)) nil (26509 11973 827991 965000) 0 nil])
([nil nil ((217 . 219)) nil (26509 11973 827991 81000) 0 nil])
([nil nil ((219 . 234)) nil (26509 11973 827986 762000) 0 nil])
([nil nil ((236 . 240) (#("    " 0 4 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 235) (undo-tree-id133 . -4) (234 . 240) (t 26509 11973 949769 639000)) nil (26509 11982 830677 987000) 0 nil])
([nil nil ((118 . 126) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 118) (t 26509 11982 951666 382000)) nil (26509 13999 158360 219000) 0 nil])
([nil nil ((#("    def get_accounts(self, account_name):
        return self.accounts.get(account_name)
" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 4 7 (face py-def-class-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 7 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 8 20 (face py-def-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 20 21 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 21 25 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 25 39 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 40 42 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 42 50 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 50 56 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 56 57 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 57 61 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 61 74 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 75 87 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 87 88 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 88 89 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -146) (undo-tree-id203 . -75) (undo-tree-id204 . -87) (undo-tree-id205 . -89) 235) nil (26509 13999 158359 321000) 0 nil])
([nil nil ((146 . 154)) nil (26509 13999 158357 589000) 0 nil])
([nil nil ((146 . 150) (#("        " 0 8 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 146) (undo-tree-id202 . -8) 154) nil (26509 13999 158356 919000) 0 nil])
([nil nil ((150 . 155)) nil (26509 13999 158356 21000) 0 nil])
([nil nil ((155 . 166)) nil (26509 13999 158355 593000) 0 nil])
([nil nil ((#("n" 0 1 (face py-def-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -165) (undo-tree-id201 . -1) 166) nil (26509 13999 158355 77000) 0 nil])
([nil nil ((165 . 175)) nil (26509 13999 158354 176000) 0 nil])
([nil nil ((175 . 176)) nil (26509 13999 158353 735000) 0 nil])
([nil nil ((176 . 185)) nil (26509 13999 158353 292000) 0 nil])
([nil nil ((185 . 198)) nil (26509 13999 158352 982000) 0 nil])
([nil nil ((198 . 207)) nil (26509 13999 158352 668000) 0 nil])
([nil nil ((207 . 228)) nil (26509 13999 158352 273000) 0 nil])
([nil nil ((228 . 243)) nil (26509 13999 158351 866000) 0 nil])
([nil nil ((243 . 245)) nil (26509 13999 158351 451000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -243) (undo-tree-id199 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -244) (undo-tree-id200 . -1) 245) nil (26509 13999 158350 794000) 0 nil])
([nil nil ((243 . 244)) nil (26509 13999 158349 274000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -243) (undo-tree-id198 . -1) 244) nil (26509 13999 158348 577000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -231) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -232) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -233) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -234) (undo-tree-id189 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -235) (undo-tree-id190 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -236) (undo-tree-id191 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -237) (undo-tree-id192 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -238) (undo-tree-id193 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -239) (undo-tree-id194 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -240) (undo-tree-id195 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -241) (undo-tree-id196 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -242) (undo-tree-id197 . -1) 243) nil (26509 13999 158344 668000) 0 nil])
([nil nil ((231 . 238)) nil (26509 13999 158177 246000) 0 nil])
([nil nil ((238 . 239)) nil (26509 13999 158173 11000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -224) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -225) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -226) (undo-tree-id230 . -1) (#("g" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -227) (undo-tree-id231 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -228) (undo-tree-id232 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -229) (undo-tree-id233 . -1) 230 (t 26509 13999 278063 491000)) nil (26509 14041 624745 201000) 0 nil])
([nil nil ((224 . 225)) nil (26509 14041 624739 690000) 0 nil])
([nil nil ((234 . 247)) nil (26509 14041 624739 280000) 0 nil])
([nil nil ((247 . 256)) nil (26509 14041 624738 893000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 255) (undo-tree-id221 . -1) 256) nil (26509 14041 624738 258000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -252) (undo-tree-id218 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -253) (undo-tree-id219 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -254) (undo-tree-id220 . -1) 255) nil (26509 14041 624736 932000) 0 nil])
([nil nil ((252 . 271)) nil (26509 14041 624734 771000) 0 nil])
([nil nil ((271 . 272)) nil (26509 14041 624734 391000) 0 nil])
([nil nil ((272 . 289)) nil (26509 14041 624733 937000) 0 nil])
([nil nil ((289 . 293)) nil (26509 14041 624733 556000) 0 nil])
([nil nil ((293 . 314)) nil (26509 14041 624733 70000) 0 nil])
([nil nil ((314 . 325)) nil (26509 14041 624732 599000) 0 nil])
([nil nil ((325 . 342)) nil (26509 14041 624732 162000) 0 nil])
([nil nil ((342 . 357)) nil (26509 14041 624731 733000) 0 nil])
([nil nil ((357 . 373)) nil (26509 14041 624731 322000) 0 nil])
([nil nil ((373 . 374)) nil (26509 14041 624730 922000) 0 nil])
([nil nil ((374 . 395)) nil (26509 14041 624730 507000) 0 nil])
([nil nil ((395 . 416)) nil (26509 14041 624730 78000) 0 nil])
([nil nil ((416 . 423)) nil (26509 14041 624729 543000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -420) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -421) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -422) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) 423) nil (26509 14041 624727 948000) 0 nil])
([nil nil ((420 . 421)) nil (26509 14041 624713 489000) 0 nil])
([nil nil ((421 . 441)) nil (26509 14041 624709 226000) 0 nil])
([nil nil ((15 . 16) (t 26509 14041 746044 642000)) nil (26509 14050 334986 536000) 0 nil])
([nil nil ((15 . 22)) nil (26509 14050 334985 904000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -20) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -21) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 22) nil (26509 14050 334984 797000) 0 nil])
([nil nil ((20 . 21)) nil (26509 14050 334980 587000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -20) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 21) nil (26509 14050 334979 336000) 0 nil])
([nil nil ((20 . 25)) nil (26509 14050 334968 809000) 0 nil])
([nil nil ((25 . 42)) nil (26509 14050 334964 799000) 0 nil])
([nil nil ((469 . 490) (t 26509 14050 456040 970000)) nil (26509 14060 40948 988000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 486) (undo-tree-id248 . -4) 490) nil (26509 14060 40948 153000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 482) (undo-tree-id247 . -4) 486) nil (26509 14060 40946 875000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 478) (undo-tree-id246 . -4) 482) nil (26509 14060 40945 84000) 0 nil])
([nil nil ((478 . 479)) nil (26509 14060 40936 680000) 0 nil])
([nil nil ((479 . 493)) nil (26509 14060 40932 460000) 0 nil])
([nil nil ((353 . 355) (t 26509 14060 161036 954000)) nil (26509 14108 190071 180000) 0 nil])
([nil nil ((497 . 501) (#("    " 0 4 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 496) (undo-tree-id325 . -4) (495 . 501) (t 26509 14108 200018 194000)) nil (26509 14225 416854 239000) 0 nil])
([nil nil ((501 . 522)) nil (26509 14225 416853 156000) 0 nil])
([nil nil ((522 . 536)) nil (26509 14225 416852 797000) 0 nil])
([nil nil ((536 . 537)) nil (26509 14225 416852 378000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -536) (undo-tree-id324 . -1) 537) nil (26509 14225 416851 972000) 0 nil])
([nil nil ((536 . 538)) nil (26509 14225 416850 979000) 0 nil])
([nil nil ((#("_" 0 1 (face py-builtins-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -537) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 538) nil (26509 14225 416850 514000) 0 nil])
([nil nil ((537 . 547)) nil (26509 14225 416848 511000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -540) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -541) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -542) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("g" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -543) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -544) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -545) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -546) (undo-tree-id319 . -1) 547) nil (26509 14225 416847 22000) 0 nil])
([nil nil ((540 . 547)) nil (26509 14225 416834 618000) 0 nil])
([nil nil ((540 . 547) (#("Acc" 0 3 (fontified nil)) . -540) (540 . 543) (#("Account" 0 7 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -540) (undo-tree-id291 . -7) (undo-tree-id292 . -7) (undo-tree-id293 . -7) (undo-tree-id294 . -7) 547) nil (26509 14225 416833 876000) 0 nil])
([nil nil ((547 . 556)) nil (26509 14225 416831 676000) 0 nil])
([nil nil ((547 . 548)) nil (26509 14225 416831 287000) 0 nil])
([nil nil ((557 . 565)) nil (26509 14225 416830 885000) 0 nil])
([nil nil ((565 . 586)) nil (26509 14225 416830 577000) 0 nil])
([nil nil ((586 . 595)) nil (26509 14225 416830 265000) 0 nil])
([nil nil ((549 . 557) (#("        " 0 8 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 549)) nil (26509 14225 416829 739000) 0 nil])
([nil nil ((550 . 558) (#("        " 0 8 (fontified nil match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 549) (undo-tree-id290 . -8) (557 . 558)) nil (26509 14225 416829 75000) 0 nil])
([nil nil ((549 . 557)) nil (26509 14225 416828 29000) 0 nil])
([nil nil ((557 . 560)) nil (26509 14225 416827 632000) 0 nil])
([nil nil ((560 . 581)) nil (26509 14225 416827 221000) 0 nil])
([nil nil ((581 . 589)) nil (26509 14225 416826 816000) 0 nil])
([nil nil ((589 . 590)) nil (26509 14225 416826 456000) 0 nil])
([nil nil ((590 . 591)) nil (26509 14225 416826 81000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -590) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) 591) nil (26509 14225 416825 511000) 0 nil])
([nil nil ((591 . 603) (#("        " 0 8 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 591) 632) nil (26509 14225 416823 325000) 0 nil])
([nil nil ((641 . 650)) nil (26509 14225 416822 718000) 0 nil])
([nil nil ((650 . 652)) nil (26509 14225 416822 285000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -650) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("l" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -651) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 652) nil (26509 14225 416821 432000) 0 nil])
([nil nil ((650 . 661)) nil (26509 14225 416724 190000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -655) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -656) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -657) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("u" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -658) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -659) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -660) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 661) nil (26509 14225 416722 597000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 654) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 655) nil (26509 14225 416709 218000) 0 nil])
([nil nil ((654 . 655)) nil (26509 14225 416698 645000) 0 nil])
([nil nil ((655 . 668)) nil (26509 14225 416697 798000) 0 nil])
([nil nil ((668 . 679)) nil (26509 14225 416694 158000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -675) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("o" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -676) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("n" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -677) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("e" 0 1 (face py-pseudo-keyword-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -678) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 679 (t 26509 14225 543979 349000)) nil (26509 14265 495512 660000) 0 nil])
([nil nil ((675 . 679)) nil (26509 14265 495504 511000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -675) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("u" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -676) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (#("l" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -677) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("l" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -678) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) 679) nil (26509 14265 495503 205000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 674) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) 675) nil (26509 14265 495493 887000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-keyword-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -673) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 674) nil (26509 14265 495441 586000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -668) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("e" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -669) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("t" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -670) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("u" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -671) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("r" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -672) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) 673) nil (26509 14265 495437 735000) 0 nil])
([nil nil ((668 . 673)) nil (26509 14265 495426 732000) 0 nil])
([nil nil ((668 . 673) (#("rai" 0 3 (fontified nil)) . -668) (668 . 671) (#("raise" 0 5 (face font-lock-keyword-face fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -668) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) 673) nil (26509 14265 495425 897000) 0 nil])
([nil nil ((673 . 678)) nil (26509 14265 495423 478000) 0 nil])
([nil nil ((675 . 685) (#("Val" 0 3 (fontified nil)) . -675) (675 . 678) (#("ValueError" 0 10 (fontified nil)) . -675) (675 . 685) (#("Val" 0 3 (face font-lock-string-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -675) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) 678) nil (26509 14265 495422 181000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -674) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("V" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -675) (undo-tree-id339 . -1) (#("a" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -676) (undo-tree-id340 . -1) (#("l" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -677) (undo-tree-id341 . -1) (#("u" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -678) (undo-tree-id342 . -1) (#("e" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -679) (undo-tree-id343 . -1) (#("E" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -680) (undo-tree-id344 . -1) (#("r" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -681) (undo-tree-id345 . -1) (#("r" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -682) (undo-tree-id346 . -1) (#("o" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -683) (undo-tree-id347 . -1) (#("r" 0 1 (face font-lock-string-face fontified t match-data (0 3 0 1 1 2 2 3))) . -684) (undo-tree-id348 . -1) 685) nil (26509 14265 495418 32000) 0 nil])
([nil nil ((674 . 676)) nil (26509 14265 495409 246000) 0 nil])
([nil nil ((674 . 684) (#("Va" 0 2 (fontified nil)) . -674) (674 . 676) (#("ValueError" 0 10 (fontified nil)) . -674) (674 . 684) (#("Va" 0 2 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -674) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) 676) nil (26509 14265 495408 56000) 0 nil])
([nil nil ((684 . 686)) nil (26509 14265 495404 758000) 0 nil])
([nil nil ((686 . 687)) nil (26509 14265 495404 301000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t match-data (0 2 0 1 1 2))) . -686) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) 687) nil (26509 14265 495402 879000) 0 nil])
([nil nil ((686 . 702)) nil (26509 14265 495393 233000) 0 nil])
([nil nil ((702 . 703)) nil (26509 14265 495392 716000) 0 nil])
([nil nil ((703 . 705)) nil (26509 14265 495392 59000) 0 nil])
([nil nil ((685 . 686)) nil (26509 14265 495391 581000) 0 nil])
([nil nil ((706 . 719)) nil (26509 14265 495390 325000) 0 nil])
([nil nil ((719 . 722)) nil (26509 14265 495386 50000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -154) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#(" " 0 1 (fontified nil)) . 155) (155 . 156) (#(" " 0 1 (face font-lock-comment-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 155) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 156 (t 26509 14265 615968 68000)) nil (26509 14279 145792 427000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -167) (undo-tree-id439 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -168) (undo-tree-id440 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -169) (undo-tree-id441 . -1) 170) nil (26509 14279 145787 413000) 0 nil])
([nil nil ((167 . 169)) nil (26509 14279 145784 994000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 167) (undo-tree-id438 . -2) 169) nil (26509 14279 145784 23000) 0 nil])
([nil nil ((167 . 169)) nil (26509 14279 145782 446000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 168) (undo-tree-id437 . -1) 169) nil (26509 14279 145781 495000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -167) (undo-tree-id436 . -1) 168) nil (26509 14279 145780 287000) 0 nil])
([nil nil ((167 . 170)) nil (26509 14279 145779 194000) 0 nil])
([nil nil ((170 . 178)) nil (26509 14279 145778 693000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -176) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -177) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) 178) nil (26509 14279 145777 831000) 0 nil])
([nil nil ((176 . 179)) nil (26509 14279 145773 501000) 0 nil])
([nil nil ((175 . 190) (#("_fe" 0 3 (fontified nil)) . -175) (175 . 178) (#("_fetch_accounts" 0 15 (fontified nil)) . -175) (175 . 190) (#("_fet" 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -175) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) 179) nil (26509 14279 145771 590000) 0 nil])
([nil nil ((190 . 192)) nil (26509 14279 145755 586000) 0 nil])
([nil nil ((223 . 225) (t 26509 14279 273964 430000)) nil (26509 14314 868471 738000) 0 nil])
([nil nil ((#("0" 0 1 (face py-number-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -224) (undo-tree-id472 . -1) 225) nil (26509 14314 868470 836000) 0 nil])
([nil nil ((224 . 227)) nil (26509 14314 868469 647000) 0 nil])
([nil nil ((227 . 232)) nil (26509 14314 868468 984000) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -231) (undo-tree-id471 . -1) 232) nil (26509 14314 868468 46000) 0 nil])
([nil nil ((231 . 232)) nil (26509 14314 868466 719000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -231) (undo-tree-id470 . -1) 232) nil (26509 14314 868465 988000) 0 nil])
([nil nil ((231 . 240)) nil (26509 14314 868464 367000) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -239) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 240) nil (26509 14314 868462 306000) 0 nil])
([nil nil ((239 . 240)) nil (26509 14314 868437 877000) 0 nil])
([nil nil ((42 . 44) (t 26509 14314 993955 384000)) nil (26509 14326 600197 290000) 0 nil])
([nil nil ((44 . 65)) nil (26509 14326 600195 741000) 0 nil])
([nil nil ((65 . 67)) nil (26509 14326 600191 759000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -49) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#("y" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -50) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) 51 (t 26509 14326 720952 556000)) nil (26509 14332 168113 155000) 0 nil])
([nil nil ((49 . 51)) nil (26509 14332 168070 73000) 0 nil])
([nil nil ((288 . 297) (t 26509 14332 297951 235000)) nil (26509 14524 230952 994000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -252) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -253) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -254) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -255) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 256) nil (26509 14524 230950 688000) 0 nil])
([nil nil ((252 . 256)) nil (26509 14524 230935 967000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -252) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -253) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (#("c" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -254) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("t" 0 1 (face py-builtins-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -255) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) 256 (t 26509 14524 352913 902000)) nil (26509 14531 423542 360000) 0 nil])
([nil nil ((252 . 256)) nil (26509 14531 423521 823000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -252) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -253) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -254) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -255) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) 256 (t 26509 14531 545912 775000)) nil (26509 14545 807260 395000) 0 nil])
([nil nil ((252 . 256)) nil (26509 14545 807250 189000) 0 nil])
([nil nil ((257 . 260)) nil (26509 14545 807249 482000) 0 nil])
([nil nil ((257 . 260) (#("str" 0 3 (fontified nil)) . -257) (257 . 260) (#("str" 0 3 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -257) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) 260) nil (26509 14545 807247 834000) 0 nil])
([nil nil ((260 . 262)) nil (26509 14545 807234 366000) 0 nil])
([nil nil ((431 . 448) (t 26509 14545 930910 570000)) nil (26509 14686 737838 185000) 0 nil])
([nil nil ((448 . 469)) nil (26509 14686 737837 272000) 0 nil])
([nil nil ((469 . 484)) nil (26509 14686 737836 512000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -481) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -482) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -483) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) 484) nil (26509 14686 737832 728000) 0 nil])
([nil nil ((481 . 484)) nil (26509 14686 737625 502000) 0 nil])
([nil nil ((484 . 485)) nil (26509 14686 737624 518000) 0 nil])
([nil nil ((485 . 487)) nil (26509 14686 737620 296000) 0 nil])
([nil nil ((489 . 505) (#("                " 0 16 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 488) (undo-tree-id706 . -16) (487 . 505) (t 26509 14686 858892 193000)) nil (26509 14721 863034 636000) 0 nil])
([nil nil ((505 . 520)) nil (26509 14721 863033 463000) 0 nil])
([nil nil ((520 . 521)) nil (26509 14721 863032 908000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -520) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 521) nil (26509 14721 863032 6000) 0 nil])
([nil nil ((520 . 532)) nil (26509 14721 863029 429000) 0 nil])
([nil nil ((527 . 540) (#("acc" 0 3 (fontified nil)) . -527) (527 . 530) (#("account_parts" 0 13 (fontified nil)) . -527) (527 . 540) (#("accou" 0 5 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -527) (undo-tree-id698 . -5) (undo-tree-id699 . -5) (undo-tree-id700 . -5) (undo-tree-id701 . -5) 532) nil (26509 14721 863028 573000) 0 nil])
([nil nil ((540 . 541)) nil (26509 14721 863024 743000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -540) (undo-tree-id697 . -1) 541) nil (26509 14721 863023 786000) 0 nil])
([nil nil ((540 . 546)) nil (26509 14721 863020 589000) 0 nil])
([nil nil ((546 . 547)) nil (26509 14721 863019 983000) 0 nil])
([nil nil ((547 . 568)) nil (26509 14721 863019 411000) 0 nil])
([nil nil ((568 . 589)) nil (26509 14721 863018 812000) 0 nil])
([nil nil ((589 . 591)) nil (26509 14721 863018 169000) 0 nil])
([nil nil ((591 . 592)) nil (26509 14721 863017 711000) 0 nil])
([nil nil ((592 . 598)) nil (26509 14721 863017 52000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -596) (undo-tree-id695 . -1) (#("n" 0 1 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -597) (undo-tree-id696 . -1) 598) nil (26509 14721 863016 309000) 0 nil])
([nil nil ((596 . 598)) nil (26509 14721 863014 498000) 0 nil])
([nil nil ((598 . 607)) nil (26509 14721 863013 749000) 0 nil])
([nil nil ((599 . 612) (#("acc" 0 3 (fontified nil)) . -599) (599 . 602) (#("account_parts" 0 13 (fontified nil)) . -599) (599 . 612) (#("account_" 0 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -599) (undo-tree-id691 . -8) (undo-tree-id692 . -8) (undo-tree-id693 . -8) (undo-tree-id694 . -8) 607) nil (26509 14721 863011 562000) 0 nil])
([nil nil ((612 . 613)) nil (26509 14721 863000 927000) 0 nil])
([nil nil ((613 . 614)) nil (26509 14721 862999 967000) 0 nil])
([nil nil ((614 . 617)) nil (26509 14721 862995 753000) 0 nil])
([nil nil ((618 . 638) (#("                " 0 16 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 618) 666 (t 26509 14721 984888 414000)) nil (26509 14733 279297 526000) 0 nil])
([nil nil ((671 . 695) (#("                    " 0 20 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 671) 723) nil (26509 14733 279295 468000) 0 nil])
([nil nil ((641 . 648)) nil (26509 14733 279290 901000) 0 nil])
([nil nil ((711 . 718) (t 26509 14733 400887 246000)) nil (26509 34012 945719 853000) 0 nil])
([nil nil ((677 . 702)) nil (26509 34012 945719 268000) 0 nil])
([nil nil ((702 . 703)) nil (26509 34012 945718 698000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -702) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) 703) nil (26509 34012 945717 735000) 0 nil])
([nil nil ((702 . 718)) nil (26509 34012 945715 398000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 716) (undo-tree-id796 . -2) 718) nil (26509 34012 945714 564000) 0 nil])
([nil nil ((716 . 718)) nil (26509 34012 945713 541000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 717) (undo-tree-id795 . -1) 718) nil (26509 34012 945712 946000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -716) (undo-tree-id794 . -1) 717) nil (26509 34012 945711 629000) 0 nil])
([nil nil ((716 . 737)) nil (26509 34012 945710 450000) 0 nil])
([nil nil ((737 . 739)) nil (26509 34012 945709 703000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -727) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -728) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -729) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (#("f" 0 1 (face py-object-reference-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -730) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -731) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -732) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -733) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -734) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (#("g" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -735) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -736) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -737) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -738) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) 739) nil (26509 34012 945706 976000) 0 nil])
([nil nil ((#("_" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -400) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("n" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -401) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (#("a" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -402) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("m" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -403) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (#("e" 0 1 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -404) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 405) nil (26509 34012 945646 884000) 0 nil])
([nil nil ((#("                account_parts = account_name.split(\":\")" 0 16 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 16 29 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 29 30 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 30 31 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 31 50 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 50 51 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 51 54 (face font-lock-string-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 54 55 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 427) (undo-tree-id709 . -23) (undo-tree-id710 . -23) (undo-tree-id711 . -23) (undo-tree-id712 . -23) (undo-tree-id713 . -23) (undo-tree-id714 . -23) (undo-tree-id715 . -23) (undo-tree-id716 . -23) (undo-tree-id717 . -23) (undo-tree-id718 . -55)) nil (26509 34012 945637 917000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 427) (undo-tree-id708 . -1)) nil (26509 34012 945630 186000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 427) (undo-tree-id707 . -1)) nil (26509 34012 945625 641000) 0 nil])
([nil nil ((#("                for i in range(1, len(account_parts) + 1):
                    parent_account_name = \":\".join(account_parts[:i])
                    if parent_account_name not in accounts:
                        parent_account = Account(
                        accounts[parent_account_name] = Account(post.account)
" 0 16 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 16 19 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 19 22 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 22 24 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 24 25 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 25 30 (face py-builtins-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 30 31 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 31 32 (face py-number-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 32 34 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 34 37 (face py-builtins-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 37 38 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 38 51 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 51 52 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 52 55 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 55 56 (face py-number-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 57 59 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 59 79 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 79 98 (face py-variable-name-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 98 99 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 99 100 (face font-lock-operator-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 100 101 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 101 104 (face font-lock-string-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 104 109 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 109 110 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 110 123 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 123 124 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 124 126 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 126 127 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 127 128 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8)) 128 129 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 129 149 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 149 151 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 151 159 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 159 172 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 172 175 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 175 176 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 176 178 (face font-lock-keyword-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 178 189 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 189 213 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 213 227 (face py-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 227 228 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 228 229 (face font-lock-operator-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 229 237 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 237 238 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 238 239 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 239 263 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 263 271 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 271 272 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 272 279 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 279 291 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 291 292 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 292 293 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 293 294 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 294 302 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 302 303 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 303 315 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 315 316 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 316 317 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -427) (undo-tree-id805 . -238) (undo-tree-id806 . -238) (undo-tree-id807 . -238) (undo-tree-id808 . -316) (undo-tree-id809 . -238) (undo-tree-id810 . -317) 744 (t 26509 34013 67791 590000)) nil (26509 34094 171245 657000) 0 nil])
([nil nil ((427 . 428)) nil (26509 34094 171241 684000) 0 nil])
([nil nil ((427 . 443)) nil (26509 34094 171241 299000) 0 nil])
([nil nil ((443 . 444)) nil (26509 34094 171240 577000) 0 nil])
([nil nil ((444 . 464)) nil (26509 34094 171240 117000) 0 nil])
([nil nil ((464 . 480)) nil (26509 34094 171239 734000) 0 nil])
([nil nil ((480 . 481)) nil (26509 34094 171239 328000) 0 nil])
([nil nil ((481 . 502)) nil (26509 34094 171238 810000) 0 nil])
([nil nil ((502 . 523)) nil (26509 34094 171238 192000) 0 nil])
([nil nil ((523 . 528)) nil (26509 34094 171237 567000) 0 nil])
([nil nil ((528 . 532)) nil (26509 34094 171237 90000) 0 nil])
([nil nil ((513 . 514)) nil (26509 34094 171236 589000) 0 nil])
([nil nil ((533 . 534)) nil (26509 34094 171235 997000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -533) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) 534) nil (26509 34094 171234 189000) 0 nil])
([nil nil ((533 . 549)) nil (26509 34094 171220 723000) 0 nil])
([nil nil ((551 . 571) (#("                    " 0 20 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 550) (undo-tree-id818 . -20) (549 . 571) (t 26509 34094 293764 574000)) nil (26509 34148 238089 160000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 567) (undo-tree-id817 . -4) 571) nil (26509 34148 238087 848000) 0 nil])
([nil nil ((567 . 568)) nil (26509 34148 238086 623000) 0 nil])
([nil nil ((568 . 589)) nil (26509 34148 238086 2000) 0 nil])
([nil nil ((589 . 593)) nil (26509 34148 238085 295000) 0 nil])
([nil nil ((593 . 614)) nil (26509 34148 238084 666000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 610) (undo-tree-id816 . -4) 614) nil (26509 34148 238083 912000) 0 nil])
([nil nil ((610 . 631)) nil (26509 34148 238082 648000) 0 nil])
([nil nil ((631 . 641)) nil (26509 34148 238082 151000) 0 nil])
([nil nil ((641 . 658)) nil (26509 34148 238081 452000) 0 nil])
([nil nil ((658 . 660)) nil (26509 34148 238080 566000) 0 nil])
([nil nil ((660 . 678)) nil (26509 34148 238080 7000) 0 nil])
([nil nil ((678 . 679)) nil (26509 34148 238079 63000) 0 nil])
([nil nil ((679 . 700)) nil (26509 34148 238078 343000) 0 nil])
([nil nil ((700 . 721)) nil (26509 34148 238077 940000) 0 nil])
([nil nil ((721 . 722)) nil (26509 34148 238077 355000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -719) (undo-tree-id813 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -720) (undo-tree-id814 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -721) (undo-tree-id815 . -1) 722) nil (26509 34148 238076 205000) 0 nil])
([nil nil ((719 . 729)) nil (26509 34148 238073 416000) 0 nil])
([nil nil ((729 . 744)) nil (26509 34148 238072 874000) 0 nil])
([nil nil ((744 . 745)) nil (26509 34148 238072 478000) 0 nil])
([nil nil ((745 . 770)) nil (26509 34148 238071 970000) 0 nil])
([nil nil ((770 . 791)) nil (26509 34148 238071 323000) 0 nil])
([nil nil ((791 . 805)) nil (26509 34148 238070 751000) 0 nil])
([nil nil ((805 . 826)) nil (26509 34148 238070 192000) 0 nil])
([nil nil ((826 . 831)) nil (26509 34148 238069 603000) 0 nil])
([nil nil ((831 . 856)) nil (26509 34148 238068 988000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 852) (undo-tree-id812 . -4) 856) nil (26509 34148 238068 196000) 0 nil])
([nil nil ((852 . 859)) nil (26509 34148 238066 379000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -858) (undo-tree-id811 . -1) 859) nil (26509 34148 238065 188000) 0 nil])
([nil nil ((858 . 873)) nil (26509 34148 238056 577000) 0 nil])
([nil nil ((873 . 890)) nil (26509 34148 238052 314000) 0 nil])
([nil nil ((890 . 911) (t 26509 34148 360745 483000)) nil (26509 34151 300783 133000) 0 nil])
([nil nil ((975 . 976) (t 26509 34151 423744 377000)) nil (26509 34184 625875 245000) 0 nil])
([nil nil ((976 . 980)) nil (26509 34184 625870 856000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -424) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -425) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 426 (t 26509 34184 708732 207000)) nil (26509 34233 566898 363000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -423) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) 424) nil (26509 34233 566895 420000) 0 nil])
([nil nil ((#("." 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -415) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (#("f" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -416) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("u" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -417) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -418) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -419) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("n" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -420) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -421) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#("m" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -422) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) 423) nil (26509 34233 566889 802000) 0 nil])
([nil nil ((981 . 988) (t 26509 34233 689713 803000)) nil (26509 37519 559109 96000) 0 nil])
([nil nil ((1165 . 1173) (#("        " 0 8 (fontified nil match-data (0 2 0 1 1 2))) . 1164) (undo-tree-id873 . -8) (1163 . 1173) (t 26509 37519 682320 746000)) nil (26509 37578 839429 967000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 2 0 1 1 2))) . 1169) (undo-tree-id872 . -4) 1173) nil (26509 37578 839428 442000) 0 nil])
([nil nil ((1169 . 1190)) nil (26509 37578 839427 412000) 0 nil])
([nil nil ((1190 . 1204)) nil (26509 37578 839426 702000) 0 nil])
([nil nil ((1204 . 1205)) nil (26509 37578 839426 55000) 0 nil])
([nil nil ((1205 . 1210)) nil (26509 37578 839425 453000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1209) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) 1210) nil (26509 37578 839424 744000) 0 nil])
([nil nil ((1209 . 1210)) nil (26509 37578 839421 395000) 0 nil])
([nil nil ((1210 . 1222)) nil (26509 37578 839420 689000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1221) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) 1222) nil (26509 37578 839418 833000) 0 nil])
([nil nil ((1221 . 1227)) nil (26509 37578 839401 774000) 0 nil])
([nil nil ((1227 . 1228) (t 26509 37578 962343 541000)) nil (26509 37603 122791 682000) 0 nil])
([nil nil ((1228 . 1237)) nil (26509 37603 122791 42000) 0 nil])
([nil nil ((1237 . 1258)) nil (26509 37603 122790 675000) 0 nil])
([nil nil ((1258 . 1264)) nil (26509 37603 122790 201000) 0 nil])
([nil nil ((1264 . 1278)) nil (26509 37603 122789 458000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1252) (undo-tree-id874 . -1) (#("c" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1253) (undo-tree-id875 . -1) (#("c" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1254) (undo-tree-id876 . -1) (#("o" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1255) (undo-tree-id877 . -1) (#("u" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1256) (undo-tree-id878 . -1) (#("n" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1257) (undo-tree-id879 . -1) (#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1258) (undo-tree-id880 . -1) (#("s" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1259) (undo-tree-id881 . -1) (#("." 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1260) (undo-tree-id882 . -1) (#("g" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1261) (undo-tree-id883 . -1) (#("e" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1262) (undo-tree-id884 . -1) (#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1263) (undo-tree-id885 . -1) 1264) nil (26509 37603 122786 425000) 0 nil])
([nil nil ((1252 . 1263)) nil (26509 37603 122765 473000) 0 nil])
([nil nil ((1277 . 1286) (t 26509 37603 245352 850000)) nil (26509 37616 998812 496000) 0 nil])
([nil nil ((1286 . 1300)) nil (26509 37616 998811 996000) 0 nil])
([nil nil ((1300 . 1301)) nil (26509 37616 998811 600000) 0 nil])
([nil nil ((1301 . 1314)) nil (26509 37616 998811 130000) 0 nil])
([nil nil ((1314 . 1322)) nil (26509 37616 998810 409000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 2 0 1 1 2))) . -1321) (undo-tree-id886 . -1) 1322) nil (26509 37616 998791 159000) 0 nil])
([nil nil ((1321 . 1323)) nil (26509 37616 998776 251000) 0 nil])
([nil nil ((1325 . 1333) (#("        " 0 8 (fontified nil match-data (0 2 0 1 1 2))) . 1324) (undo-tree-id887 . -8) (1323 . 1333) (t 26509 37617 119358 162000)) nil (26509 37632 413152 539000) 0 nil])
([nil nil ((1333 . 1341)) nil (26509 37632 413144 289000) 0 nil])
([nil nil ((1341 . 1354)) nil (26509 37632 413143 873000) 0 nil])
([nil nil ((1354 . 1359)) nil (26509 37632 413143 450000) 0 nil])
([nil nil ((1359 . 1372)) nil (26509 37632 413142 928000) 0 nil])
([nil nil ((1372 . 1393)) nil (26509 37632 413142 254000) 0 nil])
([nil nil ((1393 . 1406)) nil (26509 37632 413141 397000) 0 nil])
([nil nil ((1406 . 1409)) nil (26509 37632 413137 225000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1399) (undo-tree-id891 . -1) (#("c" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1400) (undo-tree-id892 . -1) (#("c" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1401) (undo-tree-id893 . -1) (#("o" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1402) (undo-tree-id894 . -1) (#("u" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1403) (undo-tree-id895 . -1) (#("n" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1404) (undo-tree-id896 . -1) (#("t" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1405) (undo-tree-id897 . -1) (#("s" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1406) (undo-tree-id898 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 2 0 1 1 2))) . -1407) (undo-tree-id899 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 2 0 1 1 2))) . -1408) (undo-tree-id900 . -1) 1409 (t 26509 37632 537364 59000)) nil (26509 37657 767720 525000) 0 nil])
([nil nil ((1399 . 1406)) nil (26509 37657 767714 720000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 2 0 1 1 2))) . -1404) (undo-tree-id889 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t match-data (0 2 0 1 1 2))) . -1405) (undo-tree-id890 . -1) 1406) nil (26509 37657 767713 816000) 0 nil])
([nil nil ((1404 . 1407)) nil (26509 37657 767711 921000) 0 nil])
([nil nil ((1407 . 1420)) nil (26509 37657 767711 346000) 0 nil])
([nil nil ((1420 . 1429)) nil (26509 37657 767710 866000) 0 nil])
([nil nil ((1429 . 1450)) nil (26509 37657 767710 481000) 0 nil])
([nil nil ((1450 . 1463)) nil (26509 37657 767710 33000) 0 nil])
([nil nil ((1463 . 1484)) nil (26509 37657 767709 640000) 0 nil])
([nil nil ((1484 . 1496)) nil (26509 37657 767709 196000) 0 nil])
([nil nil ((1496 . 1502)) nil (26509 37657 767708 701000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 2 0 1 1 2))) . -1501) (undo-tree-id888 . -1) 1502) nil (26509 37657 767707 374000) 0 nil])
([nil nil ((1501 . 1521)) nil (26509 37657 767695 939000) 0 nil])
([nil nil ((1521 . 1534) (t 26509 37657 890373 741000)) nil (26509 37662 468726 823000) 0 nil])
([nil nil ((1534 . 1535)) nil (26509 37662 468725 775000) 0 nil])
([nil nil ((1522 . 1530) (#("            " 0 12 (fontified t match-data (0 2 0 1 1 2))) . 1522) (undo-tree-id901 . -12) (undo-tree-id902 . -12) (undo-tree-id903 . -12) (undo-tree-id904 . -12) (undo-tree-id905 . -12) (undo-tree-id906 . -12) (undo-tree-id907 . -12) (undo-tree-id908 . -12) (undo-tree-id909 . -12) (undo-tree-id910 . -12) (undo-tree-id911 . -12) (undo-tree-id912 . -12) (undo-tree-id913 . -12) (undo-tree-id914 . -12) (undo-tree-id915 . -12) (undo-tree-id916 . -12) (undo-tree-id917 . -12) (undo-tree-id918 . -12) (undo-tree-id919 . -12) (undo-tree-id920 . -12) (undo-tree-id921 . -12) (undo-tree-id922 . -12) (undo-tree-id923 . -12) (undo-tree-id924 . -12) (undo-tree-id925 . -12) (undo-tree-id926 . -12) (undo-tree-id927 . -12) (undo-tree-id928 . -12) (undo-tree-id929 . -12) (undo-tree-id930 . -12) (undo-tree-id931 . -12) (undo-tree-id932 . -12) (undo-tree-id933 . -12) (undo-tree-id934 . -12) (undo-tree-id935 . -12) (undo-tree-id936 . -12) (undo-tree-id937 . -12) (undo-tree-id938 . -12) (undo-tree-id939 . -12) (undo-tree-id940 . -12) (undo-tree-id941 . -12) 1535) nil (26509 37662 468721 675000) 0 nil])
([nil nil ((1524 . 1532) (#("        " 0 8 (fontified nil match-data (0 2 0 1 1 2))) . 1523) (undo-tree-id966 . -8) (1523 . 1532) (#("        " 0 8 (fontified nil match-data (0 2 0 1 1 2))) . 1522) (undo-tree-id967 . -8) (1530 . 1531) (t 26509 37662 596375 537000)) nil (26509 37693 210674 769000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 2 0 1 1 2))) . 1523)) nil (26509 37693 210672 762000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 2 0 1 1 2))) . 1522)) nil (26509 37693 210672 137000) 0 nil])
([nil nil ((1533 . 1537) (#("    " 0 4 (fontified nil match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1533) (1532 . 1533)) nil (26509 37693 210671 620000) 0 nil])
([nil nil ((1537 . 1557)) nil (26509 37693 210671 1000) 0 nil])
([nil nil ((1557 . 1571)) nil (26509 37693 210670 592000) 0 nil])
([nil nil ((1571 . 1572)) nil (26509 37693 210670 184000) 0 nil])
([nil nil ((1572 . 1573)) nil (26509 37693 210669 647000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1572) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) 1573) nil (26509 37693 210668 922000) 0 nil])
([nil nil ((1572 . 1582)) nil (26509 37693 210666 675000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1581) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) 1582) nil (26509 37693 210665 970000) 0 nil])
([nil nil ((1581 . 1587)) nil (26509 37693 210663 663000) 0 nil])
([nil nil ((1587 . 1588)) nil (26509 37693 210663 252000) 0 nil])
([nil nil ((1588 . 1597)) nil (26509 37693 210662 837000) 0 nil])
([nil nil ((1597 . 1607)) nil (26509 37693 210662 329000) 0 nil])
([nil nil ((1607 . 1615)) nil (26509 37693 210661 867000) 0 nil])
([nil nil ((1612 . 1623) (#("ge" 0 2 (fontified nil)) . -1612) (1612 . 1614) (#("get_account" 0 11 (fontified nil)) . -1612) (1612 . 1623) (#("get" 0 3 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1612) (undo-tree-id954 . -3) (undo-tree-id955 . -3) (undo-tree-id956 . -3) (undo-tree-id957 . -3) 1615) nil (26509 37693 210660 955000) 0 nil])
([nil nil ((1623 . 1637)) nil (26509 37693 210657 951000) 0 nil])
([nil nil ((1637 . 1646)) nil (26509 37693 210657 139000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1586) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) 1587) nil (26509 37693 210653 575000) 0 nil])
([nil nil ((1645 . 1650) (t 26509 37693 333387 251000)) nil (26509 37744 731420 992000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1649) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) 1650) nil (26509 37744 731420 86000) 0 nil])
([nil nil ((1649 . 1664)) nil (26509 37744 731417 719000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1660) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("e" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1661) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1662) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("u" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1663) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 1664) nil (26509 37744 731416 322000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1659) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) 1660) nil (26509 37744 731407 970000) 0 nil])
([nil nil ((1659 . 1660)) nil (26509 37744 731405 509000) 0 nil])
([nil nil ((1660 . 1673)) nil (26509 37744 731405 96000) 0 nil])
([nil nil ((1673 . 1683)) nil (26509 37744 731404 675000) 0 nil])
([nil nil ((1685 . 1693) (#("        " 0 8 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 1684) (undo-tree-id1024 . -8) (1683 . 1693)) nil (26509 37744 731404 103000) 0 nil])
([nil nil ((1693 . 1694)) nil (26509 37744 731403 104000) 0 nil])
([nil nil ((1694 . 1715)) nil (26509 37744 731402 657000) 0 nil])
([nil nil ((1715 . 1725)) nil (26509 37744 731402 209000) 0 nil])
([nil nil ((1718 . 1725) (#("ba" 0 2 (fontified nil)) . -1718) (1718 . 1720) (#("balance" 0 7 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1718) (undo-tree-id1020 . -7) (undo-tree-id1021 . -7) (undo-tree-id1022 . -7) (undo-tree-id1023 . -7) 1725) nil (26509 37744 731401 449000) 0 nil])
([nil nil ((1725 . 1734)) nil (26509 37744 731398 798000) 0 nil])
([nil nil ((1734 . 1751)) nil (26509 37744 731398 386000) 0 nil])
([nil nil ((1751 . 1752)) nil (26509 37744 731397 949000) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1751) (undo-tree-id1019 . -1) 1752) nil (26509 37744 731397 274000) 0 nil])
([nil nil ((1751 . 1757)) nil (26509 37744 731396 326000) 0 nil])
([nil nil ((1757 . 1759)) nil (26509 37744 731395 912000) 0 nil])
([nil nil ((1759 . 1767)) nil (26509 37744 731395 490000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1766) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) 1767) nil (26509 37744 731394 727000) 0 nil])
([nil nil ((1766 . 1768)) nil (26509 37744 731391 850000) 0 nil])
([nil nil ((1760 . 1771) (#("get" 0 3 (fontified nil)) . -1760) (1760 . 1763) (#("get_balance" 0 11 (fontified nil)) . -1760) (1760 . 1771) (#("get_bala" 0 8 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . -1760) (undo-tree-id1011 . -8) (undo-tree-id1012 . -8) (undo-tree-id1013 . -8) (undo-tree-id1014 . -8) 1768) nil (26509 37744 731390 853000) 0 nil])
([nil nil ((1771 . 1792)) nil (26509 37744 731388 187000) 0 nil])
([nil nil ((1792 . 1813)) nil (26509 37744 731387 794000) 0 nil])
([nil nil ((1813 . 1814)) nil (26509 37744 731387 431000) 0 nil])
([nil nil ((1814 . 1818)) nil (26509 37744 731386 957000) 0 nil])
([nil nil ((1818 . 1823)) nil (26509 37744 731386 403000) 0 nil])
([nil nil ((1819 . 1831) (#("acc" 0 3 (fontified nil)) . -1819) (1819 . 1822) (#("account_name" 0 12 (fontified nil)) . -1819) (1819 . 1831) (#("acco" 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -1819) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) 1823) nil (26509 37744 731383 576000) 0 nil])
([nil nil ((1831 . 1832)) nil (26509 37744 731309 724000) 0 nil])
([nil nil ((1832 . 1845) (t 26509 37744 863406 844000)) nil (26509 37765 591100 987000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1841) (undo-tree-id1189 . -4) 1845) nil (26509 37765 591100 147000) 0 nil])
([nil nil ((1841 . 1848)) nil (26509 37765 591099 195000) 0 nil])
([nil nil ((1832 . 1833)) nil (26509 37765 591098 800000) 0 nil])
([nil nil ((1849 . 1853)) nil (26509 37765 591098 294000) 0 nil])
([nil nil ((1849 . 1863) (#("dir" 0 3 (fontified nil)) . -1849) (1849 . 1852) (#("direct_balance" 0 14 (fontified nil)) . -1849) (1849 . 1863) (#("dire" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1849) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) 1853) nil (26509 37765 591097 230000) 0 nil])
([nil nil ((1863 . 1871)) nil (26509 37765 591094 284000) 0 nil])
([nil nil ((1866 . 1880) (#("chil" 0 4 (fontified nil)) . -1866) (1866 . 1870) (#("child_balances" 0 14 (fontified nil)) . -1866) (1866 . 1880) (#("child" 0 5 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1866) (undo-tree-id1050 . -5) (undo-tree-id1051 . -5) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -2) (undo-tree-id1061 . -2) (undo-tree-id1062 . -2) (undo-tree-id1063 . -2) (undo-tree-id1064 . -2) (undo-tree-id1065 . -3) (undo-tree-id1066 . -3) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) (undo-tree-id1071 . -3) (undo-tree-id1072 . -3) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -3) (undo-tree-id1085 . -3) (undo-tree-id1086 . -3) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) (undo-tree-id1099 . -3) (undo-tree-id1100 . -3) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (undo-tree-id1103 . -3) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -3) (undo-tree-id1107 . -3) (undo-tree-id1108 . -3) (undo-tree-id1109 . -3) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -3) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (undo-tree-id1115 . -3) (undo-tree-id1116 . -3) (undo-tree-id1117 . -3) (undo-tree-id1118 . -3) (undo-tree-id1119 . -3) (undo-tree-id1120 . -3) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -5) (undo-tree-id1156 . -5) (undo-tree-id1157 . -5) (undo-tree-id1158 . -5) (undo-tree-id1159 . -5) (undo-tree-id1160 . -5) (undo-tree-id1161 . -5) (undo-tree-id1162 . -5) (undo-tree-id1163 . -5) (undo-tree-id1164 . -5) (undo-tree-id1165 . -5) (undo-tree-id1166 . -5) (undo-tree-id1167 . -5) (undo-tree-id1168 . -5) (undo-tree-id1169 . -5) (undo-tree-id1170 . -5) (undo-tree-id1171 . -5) (undo-tree-id1172 . -5) (undo-tree-id1173 . -5) (undo-tree-id1174 . -5) (undo-tree-id1175 . -5) (undo-tree-id1176 . -5) (undo-tree-id1177 . -5) (undo-tree-id1178 . -5) (undo-tree-id1179 . -5) (undo-tree-id1180 . -5) (undo-tree-id1181 . -5) (undo-tree-id1182 . -5) (undo-tree-id1183 . -5) (undo-tree-id1184 . -5) 1871) nil (26509 37765 591088 240000) 0 nil])
([nil nil ((1882 . 1886) (#("    " 0 4 (fontified nil match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 1881) (undo-tree-id1199 . -4) (1880 . 1886) (t 26509 37765 716414 757000)) nil (26509 41331 547122 529000) 0 nil])
([nil nil ((1886 . 1902)) nil (26509 41331 547121 517000) 0 nil])
([nil nil ((1902 . 1906)) nil (26509 41331 547121 111000) 0 nil])
([nil nil ((#("t" 0 1 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1902) (undo-tree-id1195 . -1) (#("i" 0 1 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1903) (undo-tree-id1196 . -1) (#("m" 0 1 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1904) (undo-tree-id1197 . -1) (#("e" 0 1 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1905) (undo-tree-id1198 . -1) 1906) nil (26509 41331 547120 98000) 0 nil])
([nil nil ((1902 . 1908)) nil (26509 41331 547116 638000) 0 nil])
([nil nil ((#("d" 0 1 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . -1907) (undo-tree-id1194 . -1) 1908) nil (26509 41331 547116 21000) 0 nil])
([nil nil ((1907 . 1913)) nil (26509 41331 547114 976000) 0 nil])
([nil nil ((#("    def get_balance_date_filter" 0 4 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 4 7 (face py-def-class-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 7 8 (fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5)) 8 31 (face py-def-face fontified t match-data (0 5 0 1 1 2 2 3 3 4 4 5))) . 1882) (undo-tree-id1190 . -8) (undo-tree-id1191 . -12) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12)) nil (26509 41331 547113 924000) 0 nil])
([nil nil ((1576 . 1583)) nil (26509 41331 547104 429000) 0 nil])
([nil nil ((1583 . 1584)) nil (26509 41331 547103 993000) 0 nil])
([nil nil ((1584 . 1601)) nil (26509 41331 547103 229000) 0 nil])
([nil nil ((67 . 77)) nil (26509 41331 547099 171000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face) match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1603) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) 1604 (t 26509 41331 562587 123000)) nil (26509 41339 451263 412000) 0 nil])
([nil nil ((1603 . 1604)) nil (26509 41339 451261 582000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1608) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) 1609) nil (26509 41339 451259 890000) 0 nil])
([nil nil ((1608 . 1609)) nil (26509 41339 451178 471000) 0 nil])
([nil nil ((77 . 78) (t 26509 41339 575583 498000)) nil (26509 41349 962531 570000) 0 nil])
([nil nil ((78 . 98)) nil (26509 41349 962530 446000) 0 nil])
([nil nil ((98 . 103)) nil (26509 41349 962526 633000) 0 nil])
([nil nil ((1635 . 1642) (t 26509 41350 79578 609000)) nil (26509 41373 135270 409000) 0 nil])
([nil nil ((1643 . 1647) (t 26509 41373 260567 291000)) nil (26509 41383 970019 648000) 0 nil])
([nil nil ((1647 . 1648)) nil (26509 41383 970019 23000) 0 nil])
([nil nil ((1648 . 1659)) nil (26509 41383 970018 159000) 0 nil])
([nil nil ((1659 . 1670)) nil (26509 41383 970014 174000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 1670) (undo-tree-id1238 . 1) (t 26509 41384 93561 760000)) nil (26509 41393 70825 331000) 0 nil])
([nil nil ((1647 . 1652)) nil (26509 41393 70824 194000) 0 nil])
([nil nil ((1619 . 1620)) nil (26509 41393 70823 763000) 0 nil])
([nil nil ((1620 . 1621)) nil (26509 41393 70823 61000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -1620) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) 1621) nil (26509 41393 70821 205000) 0 nil])
([nil nil ((1620 . 1624)) nil (26509 41393 70796 308000) 0 nil])
([nil nil ((1788 . 1796) (t 26509 41393 194556 996000)) nil (26509 41442 650097 660000) 0 nil])
([nil nil ((1789 . 1797) (#("        " 0 8 (fontified nil match-data (0 3 0 1 1 2 2 3))) . 1788) (undo-tree-id1263 . -8) (1796 . 1797)) nil (26509 41442 650097 33000) 0 nil])
([nil nil ((1797 . 1806)) nil (26509 41442 650095 971000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1800) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1801) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (#("a" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1802) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (#("r" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1803) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (#("t" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1804) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (#("_" 0 1 (fontified t match-data (0 3 0 1 1 2 2 3))) . -1805) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) 1806) nil (26509 41442 650094 268000) 0 nil])
([nil nil ((1800 . 1821)) nil (26509 41442 650074 611000) 0 nil])
([nil nil ((1821 . 1831)) nil (26509 41442 650074 217000) 0 nil])
([nil nil ((1831 . 1832)) nil (26509 41442 650073 704000) 0 nil])
([nil nil ((1833 . 1845) (#("        " 0 8 (fontified t match-data (0 3 0 1 1 2 2 3))) . 1833) 1873) nil (26509 41442 650073 3000) 0 nil])
([nil nil ((1878 . 1890) (#("        " 0 8 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7))) . 1878) 1922) nil (26509 41442 650071 636000) 0 nil])
([nil nil ((1990 . 2002) (#("        " 0 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1990) 2012) nil (26509 41442 650066 879000) 0 nil])
([nil nil ((1990 . 1998) (#("            " 0 12 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1990) 2016 (t 26509 41442 774529 257000)) nil (26509 41477 172439 811000) 0 nil])
([nil nil ((1989 . 2002)) nil (26509 41477 172439 55000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 1998) (undo-tree-id1323 . -4) 2002) nil (26509 41477 172438 503000) 0 nil])
([nil nil ((1998 . 2001)) nil (26509 41477 172437 541000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2000) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) 2001) nil (26509 41477 172436 853000) 0 nil])
([nil nil ((2000 . 2006)) nil (26509 41477 172433 893000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2005) (undo-tree-id1318 . -1) 2006) nil (26509 41477 172433 488000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2003) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2004) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) 2005) nil (26509 41477 172432 48000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2002) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) 2003) nil (26509 41477 172426 556000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2001) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) 2002) nil (26509 41477 172423 347000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2000) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) 2001) nil (26509 41477 172418 601000) 0 nil])
([nil nil ((2000 . 2003)) nil (26509 41477 172415 975000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2002) (undo-tree-id1294 . -1) 2003) nil (26509 41477 172415 504000) 0 nil])
([nil nil ((2002 . 2003)) nil (26509 41477 172414 658000) 0 nil])
([nil nil ((2003 . 2016)) nil (26509 41477 172414 271000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2012) (undo-tree-id1293 . -4) 2016) nil (26509 41477 172413 699000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2008) (undo-tree-id1292 . -4) 2012) nil (26509 41477 172412 568000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2004) (undo-tree-id1291 . -4) 2008) nil (26509 41477 172411 499000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2002) (undo-tree-id1289 . -1) (#("
" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2003) (undo-tree-id1290 . -1) 2004) nil (26509 41477 172410 382000) 0 nil])
([nil nil ((2002 . 2017)) nil (26509 41477 172408 897000) 0 nil])
([nil nil ((2017 . 2018)) nil (26509 41477 172408 221000) 0 nil])
([nil nil ((2018 . 2031)) nil (26509 41477 172407 735000) 0 nil])
([nil nil ((2031 . 2037)) nil (26509 41477 172407 212000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2036) (undo-tree-id1288 . -1) 2037) nil (26509 41477 172406 607000) 0 nil])
([nil nil ((2036 . 2048)) nil (26509 41477 172405 482000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2044) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2045) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2046) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2047) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 2048) nil (26509 41477 172404 108000) 0 nil])
([nil nil ((103 . 110)) nil (26509 41477 172395 100000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -109) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) 110) nil (26509 41477 172393 521000) 0 nil])
([nil nil ((109 . 110)) nil (26509 41477 172377 490000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -105) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (#("o" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -106) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (#("d" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -107) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (#("a" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -108) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (#("y" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -109) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) 110 (t 26509 41477 185508 336000)) nil (26509 41479 181947 26000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . 104) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) 105) nil (26509 41479 181793 132000) 0 nil])
([nil nil ((#("," 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -103) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) 104) nil (26509 41479 181735 189000) 0 nil])
([nil nil ((2044 . 2056) (t 26509 41479 306507 4000)) nil (26509 41484 583856 138000) 0 nil])
([nil nil ((2000 . 2002) (t 26509 41484 714503 587000)) nil (26509 41510 497879 278000) 0 nil])
([nil nil ((1998 . 2002) (#("else" 0 4 (fontified nil)) . -1998) (1998 . 2002) (#("else" 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -1998) (undo-tree-id1847 . -4) (undo-tree-id1848 . -4) (undo-tree-id1849 . -4) (undo-tree-id1850 . -4) 2002) nil (26509 41510 497878 292000) 0 nil])
([nil nil ((2002 . 2011)) nil (26509 41510 497875 394000) 0 nil])
([nil nil ((2003 . 2007) (#("        " 0 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2003) (undo-tree-id1846 . -8) 2011) nil (26509 41510 497874 448000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2003) (undo-tree-id1845 . -4) 2007) nil (26509 41510 497870 993000) 0 nil])
([nil nil ((2003 . 2011)) nil (26509 41510 497869 683000) 0 nil])
([nil nil ((2002 . 2003)) nil (26509 41510 497869 283000) 0 nil])
([nil nil ((2004 . 2016) (#("        " 0 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2004) 2017) nil (26509 41510 497868 542000) 0 nil])
([nil nil ((2035 . 2051) (#("            " 0 12 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2035) 2052) nil (26509 41510 497867 810000) 0 nil])
([nil nil ((2076 . 2093)) nil (26509 41510 497867 194000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2089) (undo-tree-id1844 . -4) 2093) nil (26509 41510 497866 666000) 0 nil])
([nil nil ((2089 . 2096)) nil (26509 41510 497865 643000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2095) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) 2096) nil (26509 41510 497865 63000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2094) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) 2095) nil (26509 41510 497843 448000) 0 nil])
([nil nil ((2094 . 2104)) nil (26509 41510 497840 12000) 0 nil])
([nil nil ((2104 . 2105)) nil (26509 41510 497839 616000) 0 nil])
([nil nil ((2105 . 2122)) nil (26509 41510 497839 158000) 0 nil])
([nil nil ((2122 . 2139)) nil (26509 41510 497838 559000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2138) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) 2139) nil (26509 41510 497836 913000) 0 nil])
([nil nil ((2138 . 2145)) nil (26509 41510 497823 877000) 0 nil])
([nil nil ((2076 . 2077) (t 26509 41510 622486 795000)) nil (26509 41595 706183 72000) 0 nil])
([nil nil ((2077 . 2078)) nil (26509 41595 706182 195000) 0 nil])
([nil nil ((2078 . 2099)) nil (26509 41595 706181 711000) 0 nil])
([nil nil ((2099 . 2120)) nil (26509 41595 706181 88000) 0 nil])
([nil nil ((2120 . 2134)) nil (26509 41595 706180 581000) 0 nil])
([nil nil ((2205 . 2221) (#("                " 0 16 (fontified nil match-data (0 4 0 1 1 2 2 3 3 4))) . 2204) (undo-tree-id1864 . -16) (2203 . 2221)) nil (26509 41595 706179 873000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2217) (undo-tree-id1863 . -4) 2221) nil (26509 41595 706178 748000) 0 nil])
([nil nil ((2217 . 2234)) nil (26509 41595 706177 696000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2232) (undo-tree-id1862 . -2) 2234) nil (26509 41595 706177 85000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2230) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2231) (undo-tree-id1861 . -1) 2232) nil (26509 41595 706175 927000) 0 nil])
([nil nil ((2230 . 2232)) nil (26509 41595 706173 239000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2231) (undo-tree-id1856 . -1) 2232) nil (26509 41595 706172 571000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2230) (undo-tree-id1855 . -1) 2231) nil (26509 41595 706171 338000) 0 nil])
([nil nil ((2230 . 2234)) nil (26509 41595 706170 58000) 0 nil])
([nil nil ((2234 . 2249)) nil (26509 41595 706169 645000) 0 nil])
([nil nil ((2249 . 2250)) nil (26509 41595 706169 187000) 0 nil])
([nil nil ((2242 . 2261) (#("balance_" 0 8 (fontified nil)) . -2242) (2242 . 2250) (#("balance_date_filter" 0 19 (fontified nil)) . -2242) (2242 . 2261) (#("balance_" 0 8 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2242) (undo-tree-id1851 . -8) (undo-tree-id1852 . -8) (undo-tree-id1853 . -8) (undo-tree-id1854 . -8) 2250) nil (26509 41595 706167 636000) 0 nil])
([nil nil ((2261 . 2262)) nil (26509 41595 706157 196000) 0 nil])
([nil nil ((2262 . 2283)) nil (26509 41595 706153 246000) 0 nil])
([nil nil ((2283 . 2296) (t 26509 41595 833426 995000)) nil (26509 41641 218994 784000) 0 nil])
([nil nil ((2296 . 2299)) nil (26509 41641 218994 125000) 0 nil])
([nil nil ((2299 . 2317)) nil (26509 41641 218993 618000) 0 nil])
([nil nil ((2317 . 2334)) nil (26509 41641 218993 148000) 0 nil])
([nil nil ((2334 . 2350)) nil (26509 41641 218992 721000) 0 nil])
([nil nil ((2350 . 2365)) nil (26509 41641 218992 316000) 0 nil])
([nil nil ((2365 . 2386)) nil (26509 41641 218991 781000) 0 nil])
([nil nil ((2386 . 2388)) nil (26509 41641 218991 366000) 0 nil])
([nil nil ((2388 . 2405)) nil (26509 41641 218990 976000) 0 nil])
([nil nil ((2405 . 2422)) nil (26509 41641 218990 552000) 0 nil])
([nil nil ((2422 . 2443)) nil (26509 41641 218990 177000) 0 nil])
([nil nil ((2443 . 2449)) nil (26509 41641 218989 748000) 0 nil])
([nil nil ((2449 . 2466)) nil (26509 41641 218989 299000) 0 nil])
([nil nil ((2466 . 2467)) nil (26509 41641 218988 554000) 0 nil])
([nil nil ((2450 . 2462) (#("                " 0 16 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 2450) (undo-tree-id1865 . -16) (undo-tree-id1866 . -16) (undo-tree-id1867 . -16) (undo-tree-id1868 . -16) (undo-tree-id1869 . -16) (undo-tree-id1870 . -16) (undo-tree-id1871 . -16) (undo-tree-id1872 . -16) (undo-tree-id1873 . -16) (undo-tree-id1874 . -16) (undo-tree-id1875 . -16) (undo-tree-id1876 . -16) (undo-tree-id1877 . -16) (undo-tree-id1878 . -16) (undo-tree-id1879 . -16) (undo-tree-id1880 . -16) (undo-tree-id1881 . -16) (undo-tree-id1882 . -16) (undo-tree-id1883 . -16) (undo-tree-id1884 . -16) (undo-tree-id1885 . -16) (undo-tree-id1886 . -16) (undo-tree-id1887 . -16) (undo-tree-id1888 . -16) (undo-tree-id1889 . -16) (undo-tree-id1890 . -16) (undo-tree-id1891 . -16) (undo-tree-id1892 . -16) (undo-tree-id1893 . -16) 2467) nil (26509 41641 218984 747000) 0 nil])
([nil nil ((2451 . 2463) (#("            " 0 12 (fontified nil match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 2450) (undo-tree-id1910 . -12) (2462 . 2463) (t 26509 41641 346392 463000)) nil (26509 41650 600824 721000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 2459) (undo-tree-id1909 . -4) 2463) nil (26509 41650 600823 279000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 2455) (undo-tree-id1908 . -4) 2459) nil (26509 41650 600821 121000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -2451) (undo-tree-id1907 . -4) 2455) nil (26509 41650 600820 65000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -2449) (undo-tree-id1905 . -1) (#("
" 0 1 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . -2450) (undo-tree-id1906 . -1) 2451) nil (26509 41650 600818 777000) 0 nil])
([nil nil ((2449 . 2466)) nil (26509 41650 600817 97000) 0 nil])
([nil nil ((2450 . 2462) (#("                " 0 16 (fontified t match-data (0 8 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8))) . 2450) (undo-tree-id1894 . -16) (undo-tree-id1895 . -16) (undo-tree-id1896 . -16) (undo-tree-id1897 . -16) (undo-tree-id1898 . -16) (undo-tree-id1899 . -16) (undo-tree-id1900 . -16) (undo-tree-id1901 . -16) (undo-tree-id1902 . -16) (undo-tree-id1903 . -16) (undo-tree-id1904 . -16) 2466) nil (26509 41650 600815 482000) 0 nil])
([nil nil ((2463 . 2476)) nil (26509 41650 600797 382000) 0 nil])
([nil nil ((#("date.today() # Should actually be the date of the first transaction..." 0 10 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 12 13 (fontified t match-data (0 4 0 1 1 2 2 3 3 4)) 13 70 (face font-lock-comment-face fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2064) (t 26509 41650 727385 142000)) nil (26509 41805 590131 424000) 0 nil])
([nil nil ((2064 . 2068)) nil (26509 41805 590130 694000) 0 nil])
([nil nil ((2068 . 2089)) nil (26509 41805 590130 206000) 0 nil])
([nil nil ((2089 . 2110)) nil (26509 41805 590129 814000) 0 nil])
([nil nil ((2110 . 2114)) nil (26509 41805 590129 407000) 0 nil])
([nil nil ((2114 . 2130)) nil (26509 41805 590128 957000) 0 nil])
([nil nil ((2130 . 2151)) nil (26509 41805 590128 631000) 0 nil])
([nil nil ((2151 . 2155)) nil (26509 41805 590128 203000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2154) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) 2155) nil (26509 41805 590127 479000) 0 nil])
([nil nil ((2154 . 2168)) nil (26509 41805 590123 465000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2166) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (#("y" 0 1 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . -2167) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) 2168) nil (26509 41805 590122 625000) 0 nil])
([nil nil ((2166 . 2171)) nil (26509 41805 590118 320000) 0 nil])
([nil nil ((2171 . 2192)) nil (26509 41805 590117 728000) 0 nil])
([nil nil ((2192 . 2193)) nil (26509 41805 590116 953000) 0 nil])
([nil current ((2172 . 2188) (#("                    " 0 20 (fontified t match-data (0 4 0 1 1 2 2 3 3 4))) . 2172) (undo-tree-id1911 . -20) (undo-tree-id1912 . -20) (undo-tree-id1913 . -20) (undo-tree-id1914 . -20) (undo-tree-id1915 . -20) (undo-tree-id1916 . -20) (undo-tree-id1917 . -20) (undo-tree-id1918 . -20) (undo-tree-id1919 . -20) (undo-tree-id1920 . -20) (undo-tree-id1921 . -20) 2193) nil (26509 41805 590113 803000) 0 nil])
nil
